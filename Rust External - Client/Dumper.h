namespace O {
	namespace BaseNetworkable {
		constexpr auto JustCreatedk__BackingField = 0x18;
		constexpr auto entityDestroy = 0x20;
		constexpr auto postNetworkUpdateComponents = 0x28;
		constexpr auto parentEntity = 0x30;
		constexpr auto children = 0x40;
		constexpr auto canTriggerParent = 0x48;
		constexpr auto prefabID = 0x4c;
		constexpr auto globalBroadcast = 0x50;
		constexpr auto net = 0x58;
		constexpr auto IsDestroyedk__BackingField = 0x60;
		constexpr auto _prefabName = 0x68;
		constexpr auto _prefabNameWithoutExtension = 0x70;

		constexpr auto get_JustCreated = 0x7ce0d0;
		constexpr auto set_JustCreated = 0x7ce0f0;
		constexpr auto ClientSpawn = 0xa43a30;
		constexpr auto ClientOnEnable = 0xa439b0;
		constexpr auto ClientInit = 0xa437c0;
		constexpr auto OnNetworkUpdate = 0xa44ce0;
		constexpr auto PreNetworkUpdate = 0x2f8560;
		constexpr auto PostNetworkUpdate = 0x2f8560;
		constexpr auto ShouldDestroyWithGroup = 0x49fb40;
		constexpr auto ShouldDestroyImmediately = 0x4a2370;
		constexpr auto NetworkDestroy = 0xa44870;
		constexpr auto DoClientDestroy = 0xa43e00;
		constexpr auto DoNetworkDestroy = 0x2f8560;
		constexpr auto BroadcastOnPostNetworkUpdate = 0xa435a0;
		constexpr auto PostProcess = 0xa44e60;
		constexpr auto GetParentEntity = 0xa441a0;
		constexpr auto HasParent = 0xa441b0;
		constexpr auto AddChild = 0xa43510;
		constexpr auto OnChildAdded = 0x2f8560;
		constexpr auto RemoveChild = 0xa44ee0;
		constexpr auto OnChildRemoved = 0x2f8560;
		constexpr auto get_gameManager = 0xa45320;
		constexpr auto get_prefabAttribute = 0xa45380;
		constexpr auto get_IsDestroyed = 0xa45200;
		constexpr auto set_IsDestroyed = 0x6a7c40;
		constexpr auto get_PrefabName = 0xa45210;
		constexpr auto get_ShortPrefabName = 0xa45290;
		constexpr auto GetNetworkPosition = 0x8551a0;
		constexpr auto GetNetworkRotation = 0xa44160;
		constexpr auto InvokeString = 0xa441c0;
		constexpr auto LookupPrefab = 0xa447d0;
		constexpr auto EqualNetID = 0xa44110;
		constexpr auto ResetState = 0xa44f50;
		constexpr auto InitShared = 0x2f8560;
		constexpr auto PreInitShared = 0x2f8560;
		constexpr auto PostInitShared = 0x2f8560;
		constexpr auto DestroyShared = 0x2f8560;
		constexpr auto OnNetworkGroupEnter = 0x2f8560;
		constexpr auto OnNetworkGroupLeave = 0x2f8560;
		constexpr auto OnNetworkGroupChange = 0xa44ba0;
		constexpr auto OnNetworkSubscribersEnter = 0x2f8560;
		constexpr auto OnNetworkSubscribersLeave = 0x2f8560;
		constexpr auto EntityDestroy = 0xa44020;
		constexpr auto DoEntityDestroy = 0xa43ec0;
		constexpr auto SpawnShared = 0xa44fa0;
		constexpr auto Load = 0xa44410;
		constexpr auto get_isServer = 0x4a2370;
		constexpr auto get_isClient = 0x49fb40;
		constexpr auto OnRpcMessage = 0x4a2370;
		constexpr auto ctor = 0xa45160;
		constexpr auto cctor = 0xa450b0;
	};

	namespace BasePlayer {
		constexpr auto __menuOption_Climb = 0x240;
		constexpr auto __menuOption_Drink = 0x298;
		constexpr auto __menuOption_InviteToTeam = 0x2f0;
		constexpr auto __menuOption_Menu_AssistPlayer = 0x348;
		constexpr auto __menuOption_Menu_LootPlayer = 0x3a0;
		constexpr auto __menuOption_Promote = 0x3f8;
		constexpr auto __menuOption_SaltWater = 0x450;
		constexpr auto currentViewMode = 0x4a8;
		constexpr auto selectedViewMode = 0x4ac;
		constexpr auto lastRevivePoint = 0x4b0;
		constexpr auto lastReviveDirection = 0x4bc;
		constexpr auto playerModel = 0x4c8;
		constexpr auto Frozen = 0x4d0;
		constexpr auto voiceRecorder = 0x4d8;
		constexpr auto voiceSpeaker = 0x4e0;
		constexpr auto input = 0x4e8;
		constexpr auto movement = 0x4f0;
		constexpr auto collision = 0x4f8;
		constexpr auto emptyState = 0x8;
		constexpr auto _lookingAt = 0x500;
		constexpr auto _lookingAtEntity = 0x508;
		constexpr auto _lookingAtCollider = 0x510;
		constexpr auto lookingAtPointk__BackingField = 0x518;
		constexpr auto wakeTime = 0x524;
		constexpr auto needsClothesRebuild = 0x528;
		constexpr auto wasSleeping = 0x529;
		constexpr auto wokeUpBefore = 0x52a;
		constexpr auto wasDead = 0x52b;
		constexpr auto lastClothesHash = 0x52c;
		constexpr auto visiblePlayerList = 0x10;
		constexpr auto craftMode = 0x18;
		constexpr auto IsWearingDiveGogglesk__BackingField = 0x530;
		constexpr auto GestureViewModel = 0x538;
		constexpr auto timeSinceUpdatedLookingAt = 0x540;
		constexpr auto nextTopologyTestTime = 0x544;
		constexpr auto usePressTime = 0x548;
		constexpr auto useHeldTime = 0x54c;
		constexpr auto lookingAtTest = 0x550;
		constexpr auto lastDeathTimeClient = 0x1c;
		constexpr auto cachedWaterDrinkingPoint = 0x558;
		constexpr auto gestureList = 0x568;
		constexpr auto gestureFinishedTime = 0x570;
		constexpr auto blockHeldInputTimer = 0x574;
		constexpr auto currentGesture = 0x578;
		constexpr auto disabledHeldEntity = 0x580;
		constexpr auto nextGestureMenuOpenTime = 0x588;
		constexpr auto lastGestureCancel = 0x58c;
		constexpr auto client_lastHelloTime = 0x590;
		constexpr auto currentTeam = 0x598;
		constexpr auto MaxTeamSizeToast = 0x20;
		constexpr auto clientTeam = 0x5a0;
		constexpr auto lastReceivedTeamTime = 0x5a8;
		constexpr auto lastPresenceTeamId = 0x5b0;
		constexpr auto lastPresenceTeamSize = 0x5b8;
		constexpr auto playerGroupKey = 0x5c0;
		constexpr auto playerGroupSizeKey = 0x5c8;
		constexpr auto clActiveItem = 0x5d0;
		constexpr auto ClientCurrentMapNote = 0x5d8;
		constexpr auto ClientCurrentDeathNote = 0x5e0;
		constexpr auto missions = 0x5e8;
		constexpr auto _activeMission = 0x5f0;
		constexpr auto modelState = 0x5f8;
		constexpr auto mounted = 0x600;
		constexpr auto nextSeatSwapTime = 0x610;
		constexpr auto PetEntity = 0x618;
		constexpr auto lastPetCommandIssuedTime = 0x620;
		constexpr auto PetPrefabID = 0x624;
		constexpr auto PetID = 0x628;
		constexpr auto PetWheelHasBeenOpened = 0x28;
		constexpr auto cachedBuildingPrivilegeTime = 0x62c;
		constexpr auto cachedBuildingPrivilege = 0x630;
		constexpr auto maxProjectileID = 0x638;
		constexpr auto lastUpdateTime = 0x63c;
		constexpr auto cachedThreatLevel = 0x640;
		constexpr auto serverTickRate = 0x644;
		constexpr auto clientTickRate = 0x648;
		constexpr auto serverTickInterval = 0x64c;
		constexpr auto clientTickInterval = 0x650;
		constexpr auto lastSentTickTime = 0x654;
		constexpr auto lastTickStopwatch = 0x658;
		constexpr auto lastSentTick = 0x660;
		constexpr auto nextVisThink = 0x668;
		constexpr auto lastTimeSeen = 0x66c;
		constexpr auto debugPrevVisible = 0x670;
		constexpr auto fallDamageEffect = 0x678;
		constexpr auto drownEffect = 0x680;
		constexpr auto playerFlags = 0x688;
		constexpr auto eyes = 0x690;
		constexpr auto inventory = 0x698;
		constexpr auto blueprints = 0x6a0;
		constexpr auto metabolism = 0x6a8;
		constexpr auto modifiers = 0x6b0;
		constexpr auto playerCollider = 0x6b8;
		constexpr auto Belt = 0x6c0;
		constexpr auto playerRigidbody = 0x6c8;
		constexpr auto userID = 0x6d0;
		constexpr auto UserIDString = 0x6d8;
		constexpr auto gamemodeteam = 0x6e0;
		constexpr auto reputation = 0x6e4;
		constexpr auto _displayName = 0x6e8;
		constexpr auto _lastSetName = 0x6f0;
		constexpr auto playerColliderStanding = 0x6f8;
		constexpr auto playerColliderDucked = 0x70c;
		constexpr auto playerColliderCrawling = 0x720;
		constexpr auto playerColliderLyingDown = 0x734;
		constexpr auto cachedProtection = 0x748;
		constexpr auto oldCameraFix = 0x29;
		constexpr auto lastHeadshotSoundTime = 0x750;
		constexpr auto nextColliderRefreshTime = 0x754;
		constexpr auto clothingBlocksAiming = 0x758;
		constexpr auto clothingMoveSpeedReduction = 0x75c;
		constexpr auto clothingWaterSpeedBonus = 0x760;
		constexpr auto clothingAccuracyBonus = 0x764;
		constexpr auto equippingBlocked = 0x768;
		constexpr auto eggVision = 0x76c;
		constexpr auto activeTelephone = 0x770;
		constexpr auto designingAIEntity = 0x778;

		constexpr auto GetMenuOptions = 0x74b550;
		constexpr auto get_HasMenuOptions = 0x764b90;
		constexpr auto OnRpcMessage = 0x753140;
		constexpr auto CanBeLooted = 0x741510;
		constexpr auto get_LootPanelTitle = 0x7650d0;
		constexpr auto Menu_LootPlayer = 0x752060;
		constexpr auto Menu_LootPlayer_ShowIf = 0x752040;
		constexpr auto RPC_OpenLootPanel = 0x75cf40;
		constexpr auto PlayOpenSound = 0x75b070;
		constexpr auto InFirstPersonMode = 0x74de40;
		constexpr auto UpdateViewMode = 0x762e80;
		constexpr auto get_idealViewMode = 0x7652c0;
		constexpr auto get_shouldDrawBody = 0x765720;
		constexpr auto OnViewModeChanged = 0x75ab30;
		constexpr auto ModifyCamera = 0x7520d0;
		constexpr auto Menu_AssistPlayer = 0x752000;
		constexpr auto Menu_AssistPlayer_TimeStart = 0x751fc0;
		constexpr auto Menu_AssistPlayer_ShowIf = 0x751d30;
		constexpr auto get_lookingAt = 0x7656d0;
		constexpr auto get_lookingAtEntity = 0x765660;
		constexpr auto get_lookingAtCollider = 0x765610;
		constexpr auto get_lookingAtPoint = 0x7656b0;
		constexpr auto set_lookingAtPoint = 0x765a20;
		constexpr auto GetExtrapolationTime = 0x74a8a0;
		constexpr auto GetLocalVelocityClient = 0x74b350;
		constexpr auto ClientInit = 0x743010;
		constexpr auto CreatePlayerModel = 0x747c30;
		constexpr auto CreatePlayerCollision = 0x747a80;
		constexpr auto CreatePlayerMovement = 0x748150;
		constexpr auto InitLocalPlayer = 0x74de90;
		constexpr auto InitRemotePlayer = 0x74e170;
		constexpr auto HasLocalControls = 0x74d4f0;
		constexpr auto SetNetworkPosition = 0x75fb90;
		constexpr auto SetNetworkRotation = 0x75fc40;
		constexpr auto DoClientDestroy = 0x748610;
		constexpr auto PostNetworkUpdate = 0x75ba20;
		constexpr auto OnFirstWakeUp = 0x752aa0;
		constexpr auto get_TimeAwake = 0x7650f0;
		constexpr auto CL_ClothingChanged = 0x740b10;
		constexpr auto ForceRebuild = 0x749cc0;
		constexpr auto RebuildWorldModel = 0x75d3e0;
		constexpr auto SetDefaultFootstepEffects = 0x75f320;
		constexpr auto OnSignal = 0x75a5b0;
		constexpr auto FindBone = 0x749310;
		constexpr auto GetBones = 0x749df0;
		constexpr auto ShouldLerp = 0x760450;
		constexpr auto get_VisiblePlayerList = 0x765150;
		constexpr auto ClearVisibility = 0x742b40;
		constexpr auto RegisterForVisibility = 0x75db80;
		constexpr auto UnregisterFromVisibility = 0x760be0;
		constexpr auto FindByID_Clientside = 0x749410;
		constexpr auto Find_Clientside = 0x7495e0;
		constexpr auto GetRandomFloatBasedOnUserID = 0x74cd10;
		constexpr auto DisplayHealthInfo = 0x4a2370;
		constexpr auto ShouldDestroyWithGroup = 0x760420;
		constexpr auto SetInheritedVelocity = 0x75f7e0;
		constexpr auto GetPerformanceReport = 0x74cc00;
		constexpr auto OnBecameRagdoll = 0x7524f0;
		constexpr auto OnVoiceData = 0x75b030;
		constexpr auto RecieveAchievement = 0x75d750;
		constexpr auto CraftMode = 0x747810;
		constexpr auto StartDesigningAI = 0x760740;
		constexpr auto OnDebugAIEventTriggeredStateChange = 0x752860;
		constexpr auto ClientOnEnable = 0x743fb0;
		constexpr auto Client_OnRepairFailedResources = 0x746290;
		constexpr auto get_IsWearingDiveGoggles = 0x7650c0;
		constexpr auto set_IsWearingDiveGoggles = 0x7658d0;
		constexpr auto UpdateClothesIfNeeded = 0x760d30;
		constexpr auto MakeVisible = 0x751a30;
		constexpr auto ClientUpdate_Sleeping = 0x745380;
		constexpr auto ClientUpdate = 0x745760;
		constexpr auto RebuildClothingItems = 0x75d1c0;
		constexpr auto UpdateClothingItems = 0x761220;
		constexpr auto UpdateHolsterOffsets = 0x761950;
		constexpr auto PostLateClientCycle = 0x75b960;
		constexpr auto IsLocalPlayer = 0x74fab0;
		constexpr auto ClientUpdateLocalPlayer = 0x744110;
		constexpr auto UpdateTopologyStats = 0x762d20;
		constexpr auto ClientTick = 0x744060;
		constexpr auto DoMovement = 0x748900;
		constexpr auto MountableOverrideViewAngles = 0x7521c0;
		constexpr auto BlockSprint = 0x740000;
		constexpr auto BlockJump = 0x73ff60;
		constexpr auto ClientInput = 0x743500;
		constexpr auto UseAction = 0x7631e0;
		constexpr auto GetInteractionEntity = 0x74ae40;
		constexpr auto QuickUse = 0x75cda0;
		constexpr auto LongUse = 0x751970;
		constexpr auto UseStop = 0x7634b0;
		constexpr auto UpdateLookingAt = 0x761ae0;
		constexpr auto ResetLookingAt = 0x75dfd0;
		constexpr auto SetLookingAt = 0x75f970;
		constexpr auto CheckLookingAtVisible = 0x742340;
		constexpr auto FindVehicleParentFor = 0x7494a0;
		constexpr auto OnDied = 0x7529d0;
		constexpr auto OnRespawnInformation = 0x752dd0;
		constexpr auto RequestRespawnUpdates = 0x75de80;
		constexpr auto OnLand = 0x752be0;
		constexpr auto StartLoading = 0x7608d0;
		constexpr auto FinishLoading = 0x749870;
		constexpr auto FullBlack_FadeIn = 0x749cd0;
		constexpr auto FinishedLoadingRoutine = 0x749990;
		constexpr auto DirectionalDamage = 0x7483f0;
		constexpr auto UnlockedBlueprint = 0x760b70;
		constexpr auto CheckForRespawnInfo = 0x7422d0;
		constexpr auto UpdateRichPresenceState = 0x762a80;
		constexpr auto HandleCompanionPairingResult = 0x74cff0;
		constexpr auto UpdateWaterDrinkingPoint = 0x762ec0;
		constexpr auto GetWaterDrinkingPoint = 0x74cfd0;
		constexpr auto Drink = 0x748ba0;
		constexpr auto Drink_ShowIf = 0x7489c0;
		constexpr auto SaltWater = 0x2f8560;
		constexpr auto SaltWater_ShowIf = 0x75e150;
		constexpr auto Climb = 0x746f90;
		constexpr auto Climb_ShowIf = 0x746cc0;
		constexpr auto HasPlayerFlag = 0x74d560;
		constexpr auto get_IsReceivingSnapshot = 0x7650b0;
		constexpr auto get_IsAdmin = 0x764fd0;
		constexpr auto get_IsDeveloper = 0x765080;
		constexpr auto get_IsAiming = 0x764fe0;
		constexpr auto get_IsFlying = 0x765090;
		constexpr auto get_IsConnected = 0x764ff0;
		constexpr auto get_InGesture = 0x764f20;
		constexpr auto get_CurrentGestureBlocksMovement = 0x764a70;
		constexpr auto get_CurrentGestureIsDance = 0x764ab0;
		constexpr auto get_CurrentGestureIsFullBody = 0x764af0;
		constexpr auto get_InGestureCancelCooldown = 0x764ef0;
		constexpr auto SetGestureMenuOpen = 0x75f3e0;
		constexpr auto RequestStartGesture = 0x75df20;
		constexpr auto Client_StartGesture = 0x7467f0;
		constexpr auto ProcessDanceAction = 0x75c110;
		constexpr auto SayingHello = 0x75e3c0;
		constexpr auto ProcessGestureStart = 0x75c620;
		constexpr auto EndGesture = 0x748ec0;
		constexpr auto EndLocalGesture = 0x748f60;
		constexpr auto EndGestureShared = 0x748d50;
		constexpr auto HideHeldEntity = 0x74dcd0;
		constexpr auto CancelGesture = 0x741ff0;
		constexpr auto RemoteGestureCancel = 0x75dc70;
		constexpr auto CancelGestureInput = 0x741bd0;
		constexpr auto ClearGestureCooldown = 0x7429f0;
		constexpr auto ConVarRequestStartGesture = 0x7475a0;
		constexpr auto Client_RemoteCancelledGesture = 0x7467a0;
		constexpr auto IsGestureBlocked = 0x74f3f0;
		constexpr auto get_clientTeamLifetime = 0x7651c0;
		constexpr auto CLIENT_ReceiveTeamInfo = 0x740640;
		constexpr auto UpdateSteamGroup = 0x762ad0;
		constexpr auto ClearSteamGroup = 0x742a20;
		constexpr auto CLIENT_ClearTeam = 0x7400a0;
		constexpr auto CLIENT_PendingInvite = 0x740240;
		constexpr auto InviteToTeam = 0x74e1e0;
		constexpr auto Promote = 0x75cc10;
		constexpr auto Menu_Promote_Start = 0x2f8560;
		constexpr auto Promote_ShowIf = 0x75c840;
		constexpr auto LocalPlayerIsLeader = 0x751480;
		constexpr auto Invite_ShowIf = 0x74e730;
		constexpr auto GetHeldEntity = 0x74a990;
		constexpr auto GetHeldItem = 0x74abd0;
		constexpr auto GetHeldItemID = 0x74ab80;
		constexpr auto HeldEntityViewAngles = 0x74dab0;
		constexpr auto HeldEntityFrame = 0x74d640;
		constexpr auto HeldEntityInput = 0x74d810;
		constexpr auto HeldItemUse = 0x74dbd0;
		constexpr auto HeldEntityStart = 0x74d9e0;
		constexpr auto HeldEntityEnd = 0x74d570;
		constexpr auto IsHostileItem = 0x74f7b0;
		constexpr auto IsItemHoldRestricted = 0x74f910;
		constexpr auto MapInfoOnEnable = 0x751ae0;
		constexpr auto Client_ReceiveMarkers = 0x746460;
		constexpr auto Client_UpdateDeathMarker = 0x746b90;
		constexpr auto Client_AddNewDeathMarker = 0x746150;
		constexpr auto AddPointOfInterest = 0x73f1d0;
		constexpr auto ClearAllPointsOfInterest = 0x7428a0;
		constexpr auto ClearAllMapMarkers = 0x742740;
		constexpr auto HasAttemptedMission = 0x74d0a0;
		constexpr auto CanAcceptMission = 0x740e50;
		constexpr auto IsMissionActive = 0x74fb90;
		constexpr auto HasCompletedMission = 0x74d210;
		constexpr auto HasFailedMission = 0x74d380;
		constexpr auto SetActiveMission = 0x75f300;
		constexpr auto GetActiveMission = 0x749de0;
		constexpr auto HasActiveMission = 0x74d090;
		constexpr auto LoadMissions = 0x750950;
		constexpr auto OnModelState = 0x752d40;
		constexpr auto OnModelStateChanged = 0x752ca0;
		constexpr auto get_isMounted = 0x765510;
		constexpr auto get_isMountingHidingWeapon = 0x765540;
		constexpr auto GetMounted = 0x74c6c0;
		constexpr auto GetMountedVehicle = 0x74c670;
		constexpr auto MarkSwapSeat = 0x751b30;
		constexpr auto SwapSeatCooldown = 0x760950;
		constexpr auto ClientUpdateMounted = 0x744f30;
		constexpr auto CLIENT_SetPetPrefabID = 0x740a40;
		constexpr auto CLIENT_SetPetPetLoadedStateIndex = 0x740890;
		constexpr auto LinkPet = 0x750800;
		constexpr auto SetPetMenuOpen = 0x75fd50;
		constexpr auto ClientIssuePetCommand = 0x743ec0;
		constexpr auto IsSleeping = 0x74fe70;
		constexpr auto IsSpectating = 0x74fe80;
		constexpr auto IsRelaxed = 0x74fda0;
		constexpr auto IsServerFalling = 0x74fe60;
		constexpr auto GetBuildingPrivilege = 0x74a200;
		constexpr auto CanBuild = 0x7417e0;
		constexpr auto IsBuildingBlocked = 0x74f180;
		constexpr auto IsBuildingAuthed = 0x74ed40;
		constexpr auto CanPlaceBuildingPrivilege = 0x741970;
		constexpr auto NewProjectileID = 0x752250;
		constexpr auto NewProjectileSeed = 0x752260;
		constexpr auto SendProjectileAttack = 0x75f050;
		constexpr auto SendProjectileRicochet = 0x75f0a0;
		constexpr auto SendProjectileUpdate = 0x75f0f0;
		constexpr auto Load = 0x750f10;
		constexpr auto SpectatedPlayerHeadshot = 0x7606b0;
		constexpr auto GetThreatLevel = 0x74cfb0;
		constexpr auto EnsureUpdated = 0x749080;
		constexpr auto SetHostileLength = 0x75f730;
		constexpr auto SetWeaponDrawnDuration = 0x760380;
		constexpr auto ModifyInputState = 0x2f8560;
		constexpr auto ForcePositionToParentOffset = 0x749a00;
		constexpr auto UpdateClientTickRate = 0x760cd0;
		constexpr auto ForcePositionTo = 0x749b30;
		constexpr auto SendVoiceData = 0x75f140;
		constexpr auto SendClientTick = 0x75e960;
		constexpr auto NotifyUnderwearChange = 0x7522c0;
		constexpr auto UpdatePlayerVisibilities = 0x762780;
		constexpr auto TimeSinceSeen = 0x760980;
		constexpr auto SetNextVisThink = 0x75fd20;
		constexpr auto WantsVisUpdate = 0x763ff0;
		constexpr auto IsAimingAt = 0x74e970;
		constexpr auto UpdateCullingSpheres = 0x761680;
		constexpr auto VisUpdateUsingCulling = 0x763630;
		constexpr auto VisUpdateUsingRays = 0x763740;
		constexpr auto LogDebugCull = 0x751630;
		constexpr auto OnVisibilityChanged = 0x75ad30;
		constexpr auto VisUpdate = 0x763b60;
		constexpr auto VisPlayerArmed = 0x763570;
		constexpr auto AnyPartVisible = 0x73f360;
		constexpr auto CalcVisUpdateRate = 0x740d10;
		constexpr auto PointSeePoint = 0x75b690;
		constexpr auto IsWounded = 0x750160;
		constexpr auto IsCrawling = 0x74f230;
		constexpr auto IsIncapacitated = 0x74f900;
		constexpr auto ToPlayer = 0x487b30;
		constexpr auto get_Connection = 0x764a60;
		constexpr auto get_displayName = 0x765210;
		constexpr auto set_displayName = 0x7658e0;
		constexpr auto SanitizePlayerNameString = 0x75e320;
		constexpr auto IsGod = 0x74f6e0;
		constexpr auto GetNetworkRotation = 0x74c760;
		constexpr auto CanInteract = 0x741910;
		constexpr auto StartHealth = 0x7608b0;
		constexpr auto StartMaxHealth = 0x75b060;
		constexpr auto MaxHealth = 0x751b70;
		constexpr auto MaxVelocity = 0x751c20;
		constexpr auto WorldSpaceBounds = 0x7644d0;
		constexpr auto GetMountVelocity = 0x74c5a0;
		constexpr auto GetInheritedProjectileVelocity = 0x74acc0;
		constexpr auto GetInheritedThrowVelocity = 0x74ad80;
		constexpr auto GetInheritedDropVelocity = 0x74ac00;
		constexpr auto PreInitShared = 0x75bca0;
		constexpr auto DestroyShared = 0x748370;
		constexpr auto InSafeZone = 0x74de60;
		constexpr auto LateClientCycle = 0x750170;
		constexpr auto ClientCycle = 0x742d00;
		constexpr auto GetBounds = 0x749e80;
		constexpr auto GetCenter = 0x74a2d0;
		constexpr auto GetOffset = 0x74c880;
		constexpr auto GetSize = 0x74ce10;
		constexpr auto GetHeight = 0x74a970;
		constexpr auto GetRadius = 0x74cd00;
		constexpr auto GetJumpHeight = 0x74b340;
		constexpr auto TriggerPoint = 0x760a70;
		constexpr auto NoClipOffset = 0x752270;
		constexpr auto NoClipRadius = 0x7522b0;
		constexpr auto MaxDeployDistance = 0x751b60;
		constexpr auto ClientUpdatePersistantData = 0x745350;
		constexpr auto GetMinSpeed = 0x74c570;
		constexpr auto GetMaxSpeed = 0x74b520;
		constexpr auto GetSpeed = 0x74ce70;
		constexpr auto OnAttacked = 0x752300;
		constexpr auto EnablePlayerCollider = 0x748cf0;
		constexpr auto DisablePlayerCollider = 0x7485b0;
		constexpr auto RefreshColliderSize = 0x75d870;
		constexpr auto SetPlayerRigidbodyState = 0x760360;
		constexpr auto AddPlayerRigidbody = 0x73f050;
		constexpr auto RemovePlayerRigidbody = 0x75dd50;
		constexpr auto IsEnsnared = 0x74f300;
		constexpr auto IsAttacking = 0x74eb40;
		constexpr auto CanAttack = 0x7412c0;
		constexpr auto OnLadder = 0x752b50;
		constexpr auto IsSwimming = 0x750110;
		constexpr auto IsHeadUnderwater = 0x74f760;
		constexpr auto IsOnGround = 0x74fd00;
		constexpr auto IsRunning = 0x74fdb0;
		constexpr auto IsDucked = 0x74f250;
		constexpr auto RecentlyTeleported = 0x75d6c0;
		constexpr auto ShowToast = 0x7604b0;
		constexpr auto ChatMessage = 0x7420c0;
		constexpr auto ConsoleMessage = 0x747750;
		constexpr auto PenetrationResistance = 0x75b060;
		constexpr auto ScaleDamage = 0x75e6d0;
		constexpr auto UpdateMoveSpeedFromClothing = 0x7623b0;
		constexpr auto UpdateProtectionFromClothing = 0x762960;
		constexpr auto Categorize = 0x742090;
		constexpr auto ToString = 0x7609a0;
		constexpr auto GetDebugStatus = 0x74a560;
		constexpr auto GetItem = 0x74b290;
		constexpr auto get_Traits = 0x765130;
		constexpr auto WaterFactor = 0x764010;
		constexpr auto AirFactor = 0x73f2b0;
		constexpr auto GetOxygenTime = 0x74c8d0;
		constexpr auto ShouldInheritNetworkGroup = 0x74fe80;
		constexpr auto AnyPlayersVisibleToEntity = 0x73f9a0;
		constexpr auto IsStandingOnEntity = 0x74fe90;
		constexpr auto SetActiveTelephone = 0x75f310;
		constexpr auto get_HasActiveTelephone = 0x764b30;
		constexpr auto get_IsDesigningAI = 0x765020;
		constexpr auto ClearDesigningAIEntity = 0x7429d0;
		constexpr auto ctor = 0x7648b0;
		constexpr auto cctor = 0x764760;
	};

	namespace BaseMovement {
		constexpr auto adminCheat = 0x18;
		constexpr auto adminSpeed = 0x1c;
		constexpr auto Ownerk__BackingField = 0x20;
		constexpr auto InheritedVelocityk__BackingField = 0x28;
		constexpr auto TargetMovementk__BackingField = 0x34;
		constexpr auto Runningk__BackingField = 0x40;
		constexpr auto Duckingk__BackingField = 0x44;
		constexpr auto Crawlingk__BackingField = 0x48;
		constexpr auto Groundedk__BackingField = 0x4c;
		constexpr auto lastTeleportedTime = 0x50;

		constexpr auto get_Owner = 0x4d6610;
		constexpr auto set_Owner = 0x4d6630;
		constexpr auto get_InheritedVelocity = 0x7ac910;
		constexpr auto set_InheritedVelocity = 0x4ccbe0;
		constexpr auto get_TargetMovement = 0xa43200;
		constexpr auto set_TargetMovement = 0x4ccbd0;
		constexpr auto get_Running = 0x4bd900;
		constexpr auto set_Running = 0x4bd910;
		constexpr auto get_Ducking = 0x7fba20;
		constexpr auto set_Ducking = 0x9d9990;
		constexpr auto get_Crawling = 0x6a6a70;
		constexpr auto set_Crawling = 0x6a6a80;
		constexpr auto get_Grounded = 0x4ccba0;
		constexpr auto set_Grounded = 0x4ccc00;
		constexpr auto get_IsRunning = 0xa431c0;
		constexpr auto get_IsDucked = 0xa431a0;
		constexpr auto get_IsCrawling = 0xa43190;
		constexpr auto get_IsGrounded = 0xa431b0;
		constexpr auto CurrentVelocity = 0xa42f10;
		constexpr auto CurrentMoveSpeed = 0x4ad3c0;
		constexpr auto GetCollider = 0x4b1e70;
		constexpr auto Init = 0x4d6630;
		constexpr auto BlockJump = 0x2f8560;
		constexpr auto BlockSprint = 0x2f8560;
		constexpr auto get_RecentlyTeleported = 0xa431d0;
		constexpr auto ClientInput = 0x2f8560;
		constexpr auto DoFixedUpdate = 0x2f8560;
		constexpr auto FrameUpdate = 0xa43000;
		constexpr auto TeleportTo = 0xa430f0;
		constexpr auto Push = 0x2f8560;
		constexpr auto SetParent = 0x2f8560;
		constexpr auto FixedUpdate = 0xa42f80;
		constexpr auto PlayerAttemptedMount = 0x2f8560;
		constexpr auto PlayerCompletedMount = 0x2f8560;
		constexpr auto ctor = 0x6ac200;
	};

	namespace BaseProjectile {
		constexpr auto NoiseRadius = 0x280;
		constexpr auto damageScale = 0x284;
		constexpr auto distanceScale = 0x288;
		constexpr auto projectileVelocityScale = 0x28c;
		constexpr auto automatic = 0x290;
		constexpr auto usableByTurret = 0x291;
		constexpr auto turretDamageScale = 0x294;
		constexpr auto attackFX = 0x298;
		constexpr auto silencedAttack = 0x2a0;
		constexpr auto muzzleBrakeAttack = 0x2a8;
		constexpr auto MuzzlePoint = 0x2b0;
		constexpr auto reloadTime = 0x2b8;
		constexpr auto canUnloadAmmo = 0x2bc;
		constexpr auto primaryMagazine = 0x2c0;
		constexpr auto fractionalReload = 0x2c8;
		constexpr auto reloadStartDuration = 0x2cc;
		constexpr auto reloadFractionDuration = 0x2d0;
		constexpr auto reloadEndDuration = 0x2d4;
		constexpr auto aimSway = 0x2d8;
		constexpr auto aimSwaySpeed = 0x2dc;
		constexpr auto recoil = 0x2e0;
		constexpr auto aimconeCurve = 0x2e8;
		constexpr auto aimCone = 0x2f0;
		constexpr auto hipAimCone = 0x2f4;
		constexpr auto aimconePenaltyPerShot = 0x2f8;
		constexpr auto aimConePenaltyMax = 0x2fc;
		constexpr auto aimconePenaltyRecoverTime = 0x300;
		constexpr auto aimconePenaltyRecoverDelay = 0x304;
		constexpr auto stancePenaltyScale = 0x308;
		constexpr auto hasADS = 0x30c;
		constexpr auto noAimingWhileCycling = 0x30d;
		constexpr auto manualCycle = 0x30e;
		constexpr auto needsCycle = 0x30f;
		constexpr auto isCycling = 0x310;
		constexpr auto aiming = 0x311;
		constexpr auto resetDuration = 0x314;
		constexpr auto numShotsFired = 0x318;
		constexpr auto nextReloadTime = 0x31c;
		constexpr auto startReloadTime = 0x320;
		constexpr auto stancePenalty = 0x324;
		constexpr auto aimconePenalty = 0x328;
		constexpr auto cachedModHash = 0x32c;
		constexpr auto sightAimConeScale = 0x330;
		constexpr auto sightAimConeOffset = 0x334;
		constexpr auto hipAimConeScale = 0x338;
		constexpr auto hipAimConeOffset = 0x33c;
		constexpr auto isReloading = 0x340;
		constexpr auto swaySampleTime = 0x344;
		constexpr auto lastShotTime = 0x348;
		constexpr auto reloadPressTime = 0x34c;
		constexpr auto ammoTypePreReload = 0x350;
		constexpr auto fractionalReloadDesiredCount = 0x358;
		constexpr auto fractionalReloadNumAdded = 0x35c;
		constexpr auto triggerReady = 0x360;
		constexpr auto nextHeightCheckTime = 0x364;
		constexpr auto cachedUnderground = 0x368;
		constexpr auto createdProjectiles = 0x370;

		constexpr auto OnRpcMessage = 0x8b09d0;
		constexpr auto get_recoilProperties = 0x8b2530;
		constexpr auto GetInheritedVelocity = 0x8adfe0;
		constexpr auto GetDamageScale = 0x8adfc0;
		constexpr auto GetDistanceScale = 0x8adfd0;
		constexpr auto GetProjectileVelocityScale = 0x8ae7c0;
		constexpr auto StartReloadCooldown = 0x8b21b0;
		constexpr auto ResetReloadCooldown = 0x8b15d0;
		constexpr auto HasReloadCooldown = 0x8aeee0;
		constexpr auto GetReloadCooldown = 0x8ae7e0;
		constexpr auto GetReloadIdle = 0x8ae940;
		constexpr auto OnDrawGizmos = 0x8b0210;
		constexpr auto GetRecoil = 0x8ae7d0;
		constexpr auto get_isSemiAuto = 0x8b2520;
		constexpr auto GetAimCone = 0x8ad4d0;
		constexpr auto ScaleRepeatDelay = 0x8b15e0;
		constexpr auto GetProjectileModifier = 0x8ae180;
		constexpr auto DidAttackClientside = 0x8ab9c0;
		constexpr auto GetItemOptions = 0x8ae030;
		constexpr auto ClientIsReloading = 0x8ab6e0;
		constexpr auto EditViewAngles = 0x8acad0;
		constexpr auto OnFrame = 0x8b05e0;
		constexpr auto ShotFired = 0x8b1910;
		constexpr auto SimulateAimcone = 0x8b1970;
		constexpr auto CanAttack = 0x8ab4e0;
		constexpr auto CanAim = 0x8ab4b0;
		constexpr auto OnInput = 0x8b05f0;
		constexpr auto ReadyToAim = 0x8b1520;
		constexpr auto ReadyToFire = 0x8b1570;
		constexpr auto AmmoTypeClicked = 0x8ab390;
		constexpr auto AddAmmoOption = 0x8ab1e0;
		constexpr auto GetReloadMenu = 0x8ae9c0;
		constexpr auto PredictAmmoType = 0x8b1180;
		constexpr auto HasMoreThanOneAmmoType = 0x8aec30;
		constexpr auto OnDeploy = 0x8b01d0;
		constexpr auto DoReload = 0x8ac550;
		constexpr auto InsertAmmoFraction = 0x8aef10;
		constexpr auto CancelFractionalReloading = 0x8ab500;
		constexpr auto ClientFinishFractionalReload = 0x8ab5a0;
		constexpr auto ClientSingleReload = 0x8ab6f0;
		constexpr auto DoAttack = 0x8aba90;
		constexpr auto BeginCycle = 0x8ab420;
		constexpr auto LaunchProjectile = 0x8affe0;
		constexpr auto DryFire = 0x8aca10;
		constexpr auto ProcessSpectatorViewmodel = 0x8b14c0;
		constexpr auto ProcessSpectatorViewmodelEvent = 0x8b13b0;
		constexpr auto GetReloadDuration = 0x8ae860;
		constexpr auto GetAvailableAmmo = 0x8addb0;
		constexpr auto IsSilenced = 0x8aef70;
		constexpr auto FiredUnderground = 0x8ad440;
		constexpr auto OnSignal = 0x8b0ac0;
		constexpr auto LaunchProjectileClientside = 0x8af150;
		constexpr auto CreateProjectile = 0x8ab830;
		constexpr auto UpdateAmmoDisplay = 0x8b2200;
		constexpr auto get_UsingInfiniteAmmoCheat = 0x4a2370;
		constexpr auto Load = 0x8b0130;
		constexpr auto ctor = 0x8b22b0;
	};

	namespace PlayerWalkMovement {
		constexpr auto zeroFrictionMaterial = 0x58;
		constexpr auto highFrictionMaterial = 0x60;
		constexpr auto capsuleHeight = 0x68;
		constexpr auto capsuleCenter = 0x6c;
		constexpr auto capsuleHeightDucked = 0x70;
		constexpr auto capsuleCenterDucked = 0x74;
		constexpr auto capsuleHeightCrawling = 0x78;
		constexpr auto capsuleCenterCrawling = 0x7c;
		constexpr auto gravityTestRadius = 0x80;
		constexpr auto gravityMultiplier = 0x84;
		constexpr auto gravityMultiplierSwimming = 0x88;
		constexpr auto maxAngleWalking = 0x8c;
		constexpr auto maxAngleClimbing = 0x90;
		constexpr auto maxAngleSliding = 0x94;
		constexpr auto maxStepHeight = 0x98;
		constexpr auto body = 0xa0;
		constexpr auto initialColDetectionMode = 0xa8;
		constexpr auto capsule = 0xb0;
		constexpr auto ladder = 0xb8;
		constexpr auto maxVelocity = 0xc0;
		constexpr auto groundAngle = 0xc4;
		constexpr auto groundAngleNew = 0xc8;
		constexpr auto groundTime = 0xcc;
		constexpr auto jumpTime = 0xd0;
		constexpr auto landTime = 0xd4;
		constexpr auto previousPosition = 0xd8;
		constexpr auto previousVelocity = 0xe4;
		constexpr auto previousInheritedVelocity = 0xf0;
		constexpr auto groundNormal = 0xfc;
		constexpr auto groundNormalNew = 0x108;
		constexpr auto groundVelocity = 0x114;
		constexpr auto groundVelocityNew = 0x120;
		constexpr auto nextSprintTime = 0x12c;
		constexpr auto lastSprintTime = 0x130;
		constexpr auto sprintForced = 0x134;
		constexpr auto attemptedMountTime = 0x138;
		constexpr auto modify = 0x13c;
		constexpr auto grounded = 0x140;
		constexpr auto climbing = 0x141;
		constexpr auto sliding = 0x142;
		constexpr auto swimming = 0x143;
		constexpr auto wasSwimming = 0x144;
		constexpr auto jumping = 0x145;
		constexpr auto wasJumping = 0x146;
		constexpr auto falling = 0x147;
		constexpr auto wasFalling = 0x148;
		constexpr auto flying = 0x149;
		constexpr auto wasFlying = 0x14a;
		constexpr auto forcedDuckDelta = 0x14c;

		constexpr auto Awake = 0xcf7c00;
		constexpr auto GetCollider = 0xa43390;
		constexpr auto OnDisable = 0xcfcae0;
		constexpr auto Init = 0xcfa310;
		constexpr auto OnCollisionEnter = 0xcfc920;
		constexpr auto OnCollisionStay = 0xcfca00;
		constexpr auto GroundCheck = 0xcf9ad0;
		constexpr auto TeleportTo = 0xcfd190;
		constexpr auto UpdateCurrentLadder = 0xcfd4c0;
		constexpr auto WantsSprint = 0xcfe530;
		constexpr auto ClientInput = 0xcf7ef0;
		constexpr auto Movement_Water = 0xcfbd70;
		constexpr auto Movement_Mounted = 0xcfae50;
		constexpr auto Movement_Ladder = 0xcfa800;
		constexpr auto Movement_Noclip = 0xcfaf60;
		constexpr auto Movement_Walking = 0xcfb4f0;
		constexpr auto GetHeldEntityMovementMultiplier = 0xcf9a20;
		constexpr auto HandleGrounded = 0xcf9da0;
		constexpr auto HandleRunDuckCrawl = 0xcf9f20;
		constexpr auto GetForcedDuck = 0xcf9930;
		constexpr auto HandleJumping = 0xcf9df0;
		constexpr auto CanJump = 0xcf7d70;
		constexpr auto BlockJump = 0xcf7ce0;
		constexpr auto BlockSprint = 0xcf7d20;
		constexpr auto SetKinematic = 0xcfcf60;
		constexpr auto ApplyForce = 0xcf7bc0;
		constexpr auto CanSprint = 0xcf7e80;
		constexpr auto Jump = 0xcfa4e0;
		constexpr auto DoFixedUpdate = 0xcf82a0;
		constexpr auto DoStepUp = 0xcf8ac0;
		constexpr auto UpdateVelocity = 0xcfd9e0;
		constexpr auto UpdateGravity = 0xcfd690;
		constexpr auto FrameUpdate = 0xcf9490;
		constexpr auto TransformState = 0xcfd2b0;
		constexpr auto SetParent = 0xcfcf90;
		constexpr auto FallVelocity = 0xcf93e0;
		constexpr auto CurrentVelocity = 0xcf8260;
		constexpr auto CurrentMoveSpeed = 0xcf8210;
		constexpr auto PlayerAttemptedMount = 0xcfcf00;
		constexpr auto PlayerCompletedMount = 0xcfcf30;
		constexpr auto ctor = 0xcfe5c0;
	};

	namespace UnityEngine_GUI {
		constexpr auto s_BoxHash = 0x4;
		constexpr auto s_ButonHash = 0x8;
		constexpr auto s_RepeatButtonHash = 0xc;
		constexpr auto s_ToggleHash = 0x10;
		constexpr auto s_ButtonGridHash = 0x14;
		constexpr auto s_SliderHash = 0x18;
		constexpr auto s_BeginGroupHash = 0x1c;
		constexpr auto s_ScrollviewHash = 0x20;
		constexpr auto scrollTroughSidek__BackingField = 0x24;
		constexpr auto nextScrollStepTimek__BackingField = 0x28;
		constexpr auto s_Skin = 0x30;
		constexpr auto scrollViewStatesk__BackingField = 0x38;

		constexpr auto get_color = 0x1a465d0;
		constexpr auto set_color = 0x1a46b70;
		constexpr auto get_backgroundColor = 0x1a46480;
		constexpr auto set_backgroundColor = 0x1a46a80;
		constexpr auto get_contentColor = 0x1a46690;
		constexpr auto set_contentColor = 0x1a46c20;
		constexpr auto get_changed = 0x1a46560;
		constexpr auto set_changed = 0x1a46af0;
		constexpr auto get_enabled = 0x1a46710;
		constexpr auto set_enabled = 0x1a46c90;
		constexpr auto get_usePageScrollbars = 0x1a46a10;
		constexpr auto get_blendMaterial = 0x1a46500;
		constexpr auto get_blitMaterial = 0x1a46530;
		constexpr auto get_roundedRectMaterial = 0x1a46830;
		constexpr auto get_roundedRectWithColorPerBorderMaterial = 0x1a46860;
		constexpr auto GrabMouseControl = 0x1a445d0;
		constexpr auto HasMouseControl = 0x1a453c0;
		constexpr auto ReleaseMouseControl = 0x1a45ad0;
		constexpr auto SetNextControlName = 0x1a45d60;
		constexpr auto InternalRepaintEditorWindow = 0x1a456e0;
		constexpr auto cctor = 0x1a461c0;
		constexpr auto get_scrollTroughSide = 0x1a46890;
		constexpr auto set_scrollTroughSide = 0x1a46df0;
		constexpr auto get_nextScrollStepTime = 0x1a467d0;
		constexpr auto set_nextScrollStepTime = 0x1a46d30;
		constexpr auto set_skin = 0x1a46eb0;
		constexpr auto get_skin = 0x1a469b0;
		constexpr auto DoSetSkin = 0x1a42a50;
		constexpr auto get_matrix = 0x1a46740;
		constexpr auto set_matrix = 0x1a46cd0;
		constexpr auto Label = 0x1a45800;
		constexpr auto DrawTexture = 0x1a43be0;
		constexpr auto CalculateScaledTextureRects = 0x1a40da0;
		constexpr auto Box = 0x1a40190;
		constexpr auto Button = 0x1a40250;
		constexpr auto PasswordFieldGetStrToShow = 0x1a459a0;
		constexpr auto DoTextField = 0x1a42ed0;
		constexpr auto HandleTextFieldEventForTouchscreen = 0x1a44e00;
		constexpr auto HandleTextFieldEventForDesktop = 0x1a44610;
		constexpr auto Toggle = 0x1a46000;
		constexpr auto SelectionGrid = 0x1a45c00;
		constexpr auto CalcTotalHorizSpacing = 0x1a40b90;
		constexpr auto DoControl = 0x1a42380;
		constexpr auto DoLabel = 0x1a427c0;
		constexpr auto DoToggle = 0x1a43090;
		constexpr auto DoButton = 0x1a42250;
		constexpr auto DoButtonGrid = 0x1a41560;
		constexpr auto CalcMouseRects = 0x1a40670;
		constexpr auto HorizontalSlider = 0x1a454d0;
		constexpr auto Slider = 0x1a45da0;
		constexpr auto BeginGroup = 0x1a3fb70;
		constexpr auto EndGroup = 0x1a44590;
		constexpr auto get_scrollViewStates = 0x1a46950;
		constexpr auto CallWindowDelegate = 0x1a410d0;
		constexpr auto get_color_Injected = 0x1a46590;
		constexpr auto set_color_Injected = 0x1a46b30;
		constexpr auto get_backgroundColor_Injected = 0x1a46440;
		constexpr auto set_backgroundColor_Injected = 0x1a46a40;
		constexpr auto get_contentColor_Injected = 0x1a46650;
		constexpr auto set_contentColor_Injected = 0x1a46be0;
	};

	namespace UnityEngine_GUIStyle {
		constexpr auto m_Ptr = 0x10;
		constexpr auto m_Normal = 0x18;
		constexpr auto m_Hover = 0x20;
		constexpr auto m_Active = 0x28;
		constexpr auto m_Focused = 0x30;
		constexpr auto m_OnNormal = 0x38;
		constexpr auto m_OnHover = 0x40;
		constexpr auto m_OnActive = 0x48;
		constexpr auto m_OnFocused = 0x50;
		constexpr auto m_Border = 0x58;
		constexpr auto m_Padding = 0x60;
		constexpr auto m_Margin = 0x68;
		constexpr auto m_Overflow = 0x70;
		constexpr auto m_Name = 0x78;
		constexpr auto s_None = 0x8;

		constexpr auto get_rawName = 0x1a3d6d0;
		constexpr auto set_rawName = 0x1a3daa0;
		constexpr auto get_font = 0x1a3d1c0;
		constexpr auto get_imagePosition = 0x1a3d200;
		constexpr auto set_alignment = 0x1a3d940;
		constexpr auto get_wordWrap = 0x1a3d790;
		constexpr auto get_contentOffset = 0x1a3d0f0;
		constexpr auto set_contentOffset = 0x1a3d9d0;
		constexpr auto get_fixedWidth = 0x1a3d180;
		constexpr auto get_fixedHeight = 0x1a3d140;
		constexpr auto get_stretchWidth = 0x1a3d750;
		constexpr auto set_stretchWidth = 0x1a3db40;
		constexpr auto get_stretchHeight = 0x1a3d710;
		constexpr auto set_stretchHeight = 0x1a3daf0;
		constexpr auto set_fontSize = 0x1a3da10;
		constexpr auto set_Internal_clipOffset = 0x1a3d900;
		constexpr auto Internal_Create = 0x1a3c500;
		constexpr auto Internal_Copy = 0x1a3c4b0;
		constexpr auto Internal_Destroy = 0x1a3c540;
		constexpr auto GetStyleStatePtr = 0x1a3c2e0;
		constexpr auto GetRectOffsetPtr = 0x1a3c2a0;
		constexpr auto Internal_GetLineHeight = 0x1a3cbd0;
		constexpr auto Internal_Draw = 0x1a3c950;
		constexpr auto Internal_Draw2 = 0x1a3c5f0;
		constexpr auto Internal_DrawCursor = 0x1a3c6d0;
		constexpr auto Internal_DrawWithTextSelection = 0x1a3c7f0;
		constexpr auto Internal_GetCursorPixelPosition = 0x1a3ca80;
		constexpr auto Internal_GetCursorStringIndex = 0x1a3cb70;
		constexpr auto Internal_GetSelectedRenderedText = 0x1a3cc80;
		constexpr auto Internal_CalcSize = 0x1a3b1f0;
		constexpr auto Internal_CalcSizeWithConstraints = 0x1a3b190;
		constexpr auto Internal_CalcHeight = 0x1a3b0b0;
		constexpr auto Internal_CalcMinMaxWidth = 0x1a3c380;
		constexpr auto SetMouseTooltip = 0x1a3cd80;
		constexpr auto Internal_GetCursorFlashOffset = 0x1a3c9e0;
		constexpr auto SetDefaultFont = 0x1a3ccf0;
		constexpr auto ctor = 0x1a3d020;
		constexpr auto Finalize = 0x1a3c0c0;
		constexpr auto get_name = 0x1a3d440;
		constexpr auto set_name = 0x1a3da50;
		constexpr auto get_normal = 0x1a3d560;
		constexpr auto get_margin = 0x1a3d390;
		constexpr auto get_padding = 0x1a3d620;
		constexpr auto get_lineHeight = 0x1a3d2e0;
		constexpr auto Draw = 0x1a3be90;
		constexpr auto DrawCursor = 0x1a3b250;
		constexpr auto DrawWithTextSelection = 0x1a3b710;
		constexpr auto op_Implicit = 0x1a3d7d0;
		constexpr auto get_none = 0x1a3d4a0;
		constexpr auto GetCursorPixelPosition = 0x1a3c1c0;
		constexpr auto GetCursorStringIndex = 0x1a3c240;
		constexpr auto CalcSize = 0x1a3b1f0;
		constexpr auto CalcSizeWithConstraints = 0x1a3b190;
		constexpr auto CalcHeight = 0x1a3b0b0;
		constexpr auto get_isHeightDependantOnWidth = 0x1a3d240;
		constexpr auto CalcMinMaxWidth = 0x1a3b110;
		constexpr auto ToString = 0x1a3ce00;
		constexpr auto cctor = 0x1a3cf10;
		constexpr auto get_contentOffset_Injected = 0x1a3d0a0;
		constexpr auto set_contentOffset_Injected = 0x1a3d980;
		constexpr auto set_Internal_clipOffset_Injected = 0x1a3d8b0;
		constexpr auto Internal_Draw_Injected = 0x1a3c8c0;
		constexpr auto Internal_Draw2_Injected = 0x1a3c580;
		constexpr auto Internal_DrawCursor_Injected = 0x1a3c660;
		constexpr auto Internal_DrawWithTextSelection_Injected = 0x1a3c740;
		constexpr auto Internal_GetCursorPixelPosition_Injected = 0x1a3ca10;
		constexpr auto Internal_GetCursorStringIndex_Injected = 0x1a3cb00;
		constexpr auto Internal_GetSelectedRenderedText_Injected = 0x1a3cc10;
		constexpr auto Internal_CalcSize_Injected = 0x1a3c450;
		constexpr auto Internal_CalcSizeWithConstraints_Injected = 0x1a3c3e0;
		constexpr auto Internal_CalcMinMaxWidth_Injected = 0x1a3c320;
		constexpr auto SetMouseTooltip_Injected = 0x1a3cd30;
	};

	namespace UnityEngine_Event {
		constexpr auto m_Ptr = 0x10;
		constexpr auto s_MasterEvent = 0x8;

		constexpr auto get_rawType = 0x1a2cdf0;
		constexpr auto get_mousePosition = 0x1a2cd20;
		constexpr auto set_mousePosition = 0x1a2d100;
		constexpr auto get_delta = 0x1a2caa0;
		constexpr auto get_pointerType = 0x1a2cd70;
		constexpr auto get_button = 0x1a2c890;
		constexpr auto get_modifiers = 0x1a2cc90;
		constexpr auto set_modifiers = 0x1a2d070;
		constexpr auto get_pressure = 0x1a2cdb0;
		constexpr auto get_clickCount = 0x1a2c910;
		constexpr auto get_character = 0x1a2c8d0;
		constexpr auto set_character = 0x1a2ceb0;
		constexpr auto get_keyCode = 0x1a2cc50;
		constexpr auto set_keyCode = 0x1a2d030;
		constexpr auto get_displayIndex = 0x1a2caf0;
		constexpr auto set_displayIndex = 0x1a2cff0;
		constexpr auto get_type = 0x1a2ce70;
		constexpr auto set_type = 0x1a2d140;
		constexpr auto get_commandName = 0x1a2c950;
		constexpr auto set_commandName = 0x1a2cf00;
		constexpr auto Internal_Use = 0x1a2a770;
		constexpr auto Internal_Create = 0x1a2a570;
		constexpr auto Internal_Destroy = 0x1a2a5b0;
		constexpr auto Internal_Copy = 0x1a2a530;
		constexpr auto GetTypeForControl = 0x1a2a4f0;
		constexpr auto CopyFromPtr = 0x1a29fd0;
		constexpr auto PopEvent = 0x1a2ba40;
		constexpr auto Internal_SetNativeEvent = 0x1a2a730;
		constexpr auto Internal_MakeMasterEventCurrent = 0x1a2a5f0;
		constexpr auto ctor = 0x1a2c7c0;
		constexpr auto Finalize = 0x1a2a2e0;
		constexpr auto CopyFrom = 0x1a2a020;
		constexpr auto get_shift = 0x1a2ce30;
		constexpr auto get_control = 0x1a2c9d0;
		constexpr auto get_alt = 0x1a2c850;
		constexpr auto get_command = 0x1a2c990;
		constexpr auto get_current = 0x1a2ca10;
		constexpr auto set_current = 0x1a2cf50;
		constexpr auto get_isKey = 0x1a2cba0;
		constexpr auto get_isMouse = 0x1a2cbf0;
		constexpr auto get_isDirectManipulationDevice = 0x1a2cb30;
		constexpr auto KeyboardEvent = 0x1a2a7b0;
		constexpr auto GetHashCode = 0x1a2a3c0;
		constexpr auto Equals = 0x1a2a090;
		constexpr auto ToString = 0x1a2ba80;
		constexpr auto Use = 0x1a2c560;
		constexpr auto get_mousePosition_Injected = 0x1a2ccd0;
		constexpr auto set_mousePosition_Injected = 0x1a2d0b0;
		constexpr auto get_delta_Injected = 0x1a2ca50;
	};

	namespace UnityEngine_Input {

		constexpr auto GetKeyInt = 0x22cd040;
		constexpr auto GetKeyUpInt = 0x22cd080;
		constexpr auto GetKeyDownInt = 0x22cd000;
		constexpr auto GetAxis = 0x22ccf80;
		constexpr auto GetAxisRaw = 0x22ccf40;
		constexpr auto GetButtonDown = 0x22ccfc0;
		constexpr auto GetMouseButton = 0x22cd140;
		constexpr auto GetMouseButtonDown = 0x22cd0c0;
		constexpr auto GetMouseButtonUp = 0x22cd100;
		constexpr auto GetTouch = 0x22cd1c0;
		constexpr auto GetKey = 0x22cd040;
		constexpr auto GetKeyUp = 0x22cd080;
		constexpr auto GetKeyDown = 0x22cd000;
		constexpr auto get_anyKey = 0x22cd250;
		constexpr auto get_anyKeyDown = 0x22cd220;
		constexpr auto get_mousePosition = 0x22cd3a0;
		constexpr auto get_mouseScrollDelta = 0x22cd450;
		constexpr auto get_imeCompositionMode = 0x22cd330;
		constexpr auto set_imeCompositionMode = 0x22cd6a0;
		constexpr auto get_compositionString = 0x22cd300;
		constexpr auto get_compositionCursorPos = 0x22cd2c0;
		constexpr auto set_compositionCursorPos = 0x22cd660;
		constexpr auto get_mousePresent = 0x22cd3e0;
		constexpr auto get_touchCount = 0x22cd490;
		constexpr auto get_touchSupported = 0x22cd4c0;
		constexpr auto get_touches = 0x22cd4f0;
		constexpr auto GetTouch_Injected = 0x22cd180;
		constexpr auto get_mousePosition_Injected = 0x22cd360;
		constexpr auto get_mouseScrollDelta_Injected = 0x22cd410;
		constexpr auto get_compositionCursorPos_Injected = 0x22cd280;
		constexpr auto set_compositionCursorPos_Injected = 0x22cd620;
	};

	namespace UnityEngine_DDraw {
		constexpr auto singleton = 0x8;
		constexpr auto list = 0x18;
		constexpr auto AutoYPosition = 0x10;
		constexpr auto LastAutoY = 0x14;
		constexpr auto lineMaterial = 0x18;
		constexpr auto _skin = 0x20;

		constexpr auto Get = 0x8d3a90;
		constexpr auto Capsule = 0x8d36b0;
		constexpr auto Sphere = 0x8d4f30;
		constexpr auto SphereGizmo = 0x8d4c40;
		constexpr auto Line = 0x8d3d60;
		constexpr auto Arrow = 0x8d2780;
		constexpr auto ArrowPadded = 0x8d2080;
		constexpr auto Bounds = 0x8d29b0;
		constexpr auto Box = 0x8d2f70;
		constexpr auto Text = 0x8d5210;
		constexpr auto ScreenText = 0x8d4aa0;
		constexpr auto Awake = 0x8d2940;
		constexpr auto OnPreRender = 0x8d46c0;
		constexpr auto OnPostRender = 0x8d4380;
		constexpr auto OnGUI = 0x8d41b0;
		constexpr auto CreateLineMaterial = 0x8d3930;
		constexpr auto get_skin = 0x8d5420;
		constexpr auto ctor = 0x8d53b0;
		constexpr auto cctor = 0x2f8560;
	};

	namespace UnityEngine_Texture2D {

		constexpr auto get_format = 0x2139da0;
		constexpr auto get_whiteTexture = 0x2139e20;
		constexpr auto get_blackTexture = 0x2139d70;
		constexpr auto Compress = 0x2138590;
		constexpr auto Internal_CreateImpl = 0x2138c20;
		constexpr auto Internal_Create = 0x2138c80;
		constexpr auto get_isReadable = 0x2139de0;
		constexpr auto ApplyImpl = 0x21383e0;
		constexpr auto ResizeImpl = 0x2139150;
		constexpr auto SetPixelImpl = 0x2139490;
		constexpr auto GetPixelImpl = 0x2138800;
		constexpr auto GetPixelBilinearImpl = 0x2138640;
		constexpr auto ResizeWithFormatImpl = 0x21391a0;
		constexpr auto ReadPixelsImpl = 0x2138f40;
		constexpr auto SetPixelsImpl = 0x2139690;
		constexpr auto LoadRawTextureDataImpl = 0x2138d50;
		constexpr auto GetWritableImageData = 0x2138be0;
		constexpr auto GetRawImageDataSize = 0x2138ba0;
		constexpr auto set_requestedMipmapLevel = 0x2139e90;
		constexpr auto set_minimumMipmapLevel = 0x2139e50;
		constexpr auto ClearRequestedMipmapLevel = 0x2138550;
		constexpr auto ClearMinimumMipmapLevel = 0x2138510;
		constexpr auto SetAllPixels32 = 0x2139370;
		constexpr auto SetBlockOfPixels32 = 0x21393d0;
		constexpr auto GetPixels = 0x2138aa0;
		constexpr auto GetPixels32 = 0x21389a0;
		constexpr auto ctor = 0x2139bb0;
		constexpr auto SetPixel = 0x2139500;
		constexpr auto SetPixels = 0x21396f0;
		constexpr auto GetPixel = 0x2138880;
		constexpr auto GetPixelBilinear = 0x21386c0;
		constexpr auto LoadRawTextureData = 0x2138db0;
		constexpr auto Apply = 0x2138460;
		constexpr auto Resize = 0x21392d0;
		constexpr auto ReadPixels = 0x2139080;
		constexpr auto SetPixels32 = 0x2139370;
		constexpr auto SetPixelImpl_Injected = 0x2139430;
		constexpr auto GetPixelImpl_Injected = 0x21387a0;
		constexpr auto GetPixelBilinearImpl_Injected = 0x21385e0;
		constexpr auto ReadPixelsImpl_Injected = 0x2138ed0;
	};

	namespace ModelState {
		constexpr auto ShouldPool = 0x10;
		constexpr auto _disposed = 0x11;
		constexpr auto waterLevel = 0x14;
		constexpr auto lookDir = 0x18;
		constexpr auto flags = 0x24;
		constexpr auto poseType = 0x28;
		constexpr auto inheritedVelocity = 0x2c;

		constexpr auto ctor = 0x1ff91a0;
		constexpr auto HasFlag = 0x1ff8680;
		constexpr auto SetFlag = 0x1ff9130;
		constexpr auto get_ducked = 0x1ff91f0;
		constexpr auto set_ducked = 0x1ff92f0;
		constexpr auto get_jumped = 0x1ff9220;
		constexpr auto set_jumped = 0x1ff9350;
		constexpr auto get_onground = 0x1ff9260;
		constexpr auto set_onground = 0x1ff93d0;
		constexpr auto get_sleeping = 0x1ff9290;
		constexpr auto set_sleeping = 0x1ff9430;
		constexpr auto get_sprinting = 0x1ff92a0;
		constexpr auto set_sprinting = 0x1ff9450;
		constexpr auto get_onLadder = 0x1ff9240;
		constexpr auto set_onLadder = 0x1ff9390;
		constexpr auto get_flying = 0x1ff9200;
		constexpr auto set_flying = 0x1ff9310;
		constexpr auto get_aiming = 0x1ff91d0;
		constexpr auto set_aiming = 0x1ff92b0;
		constexpr auto get_prone = 0x1ff9270;
		constexpr auto set_prone = 0x1ff93f0;
		constexpr auto get_mounted = 0x1ff9230;
		constexpr auto set_mounted = 0x1ff9370;
		constexpr auto get_relaxed = 0x1ff9280;
		constexpr auto set_relaxed = 0x1ff9410;
		constexpr auto get_crawling = 0x1ff91e0;
		constexpr auto set_crawling = 0x1ff92d0;
		constexpr auto get_onPhone = 0x1ff9250;
		constexpr auto set_onPhone = 0x1ff93b0;
		constexpr auto get_headLook = 0x1ff9210;
		constexpr auto set_headLook = 0x1ff9330;
		constexpr auto Equal = 0x1ff8320;
		constexpr auto ResetToPool = 0x1ff8760;
		constexpr auto Dispose = 0x1ff82a0;
		constexpr auto EnterPool = 0x880f90;
		constexpr auto LeavePool = 0x880fc0;
		constexpr auto CopyTo = 0x1ff6f80;
		constexpr auto Copy = 0x1ff6fd0;
		constexpr auto Deserialize = 0x1ff8020;
		constexpr auto DeserializeLengthDelimited = 0x1ff7070;
		constexpr auto DeserializeLength = 0x1ff7700;
		constexpr auto FromProto = 0x1ff8430;
		constexpr auto WriteToStream = 0x1ff9160;
		constexpr auto WriteToStreamDelta = 0x1ff9180;
		constexpr auto ReadFromStream = 0x1ff8690;
		constexpr auto SerializeDelta = 0x1ff8810;
		constexpr auto Serialize = 0x1ff8e70;
		constexpr auto ToProtoBytes = 0x1ff9150;
		constexpr auto ToProto = 0x1ff9160;
		constexpr auto SerializeToBytes = 0x1ff8d60;
		constexpr auto SerializeLengthDelimited = 0x1ff8cb0;
	};

	namespace ProtoBuf_PlayerProjectileUpdate {
		constexpr auto ShouldPool = 0x10;
		constexpr auto _disposed = 0x11;
		constexpr auto projectileID = 0x14;
		constexpr auto curPosition = 0x18;
		constexpr auto curVelocity = 0x24;
		constexpr auto travelTime = 0x30;

		constexpr auto ResetToPool = 0x2010890;
		constexpr auto Dispose = 0x2010530;
		constexpr auto EnterPool = 0x880f90;
		constexpr auto LeavePool = 0x880fc0;
		constexpr auto CopyTo = 0x200f3c0;
		constexpr auto Copy = 0x200f400;
		constexpr auto Deserialize = 0x200fb30;
		constexpr auto DeserializeLengthDelimited = 0x200f4a0;
		constexpr auto DeserializeLength = 0x200faa0;
		constexpr auto FromProto = 0x2010660;
		constexpr auto WriteToStream = 0x20112a0;
		constexpr auto WriteToStreamDelta = 0x20112c0;
		constexpr auto ReadFromStream = 0x2010870;
		constexpr auto SerializeDelta = 0x20109f0;
		constexpr auto Serialize = 0x2011000;
		constexpr auto ToProtoBytes = 0x2011290;
		constexpr auto ToProto = 0x20112a0;
		constexpr auto SerializeToBytes = 0x2010ef0;
		constexpr auto SerializeLengthDelimited = 0x2010e40;
		constexpr auto ctor = 0x881850;
	};

	namespace Projectile {
		constexpr auto initialVelocity = 0x18;
		constexpr auto drag = 0x24;
		constexpr auto gravityModifier = 0x28;
		constexpr auto thickness = 0x2c;
		constexpr auto initialDistance = 0x30;
		constexpr auto remainInWorld = 0x34;
		constexpr auto stickProbability = 0x38;
		constexpr auto breakProbability = 0x3c;
		constexpr auto conditionLoss = 0x40;
		constexpr auto ricochetChance = 0x44;
		constexpr auto penetrationPower = 0x48;
		constexpr auto damageProperties = 0x50;
		constexpr auto damageDistances = 0x58;
		constexpr auto damageMultipliers = 0x60;
		constexpr auto damageTypes = 0x68;
		constexpr auto rendererToScale = 0x70;
		constexpr auto firstPersonRenderer = 0x78;
		constexpr auto createDecals = 0x80;
		constexpr auto doDefaultHitEffects = 0x81;
		constexpr auto flybySound = 0x88;
		constexpr auto flybySoundDistance = 0x90;
		constexpr auto closeFlybySound = 0x98;
		constexpr auto closeFlybyDistance = 0xa0;
		constexpr auto tumbleSpeed = 0xa4;
		constexpr auto tumbleAxis = 0xa8;
		constexpr auto swimScale = 0xb4;
		constexpr auto swimSpeed = 0xc0;
		constexpr auto owner = 0xd0;
		constexpr auto sourceWeaponPrefab = 0xd8;
		constexpr auto sourceProjectilePrefab = 0xe0;
		constexpr auto mod = 0xe8;
		constexpr auto projectileID = 0xf0;
		constexpr auto seed = 0xf4;
		constexpr auto clientsideEffect = 0xf8;
		constexpr auto clientsideAttack = 0xf9;
		constexpr auto integrity = 0xfc;
		constexpr auto maxDistance = 0x100;
		constexpr auto modifier = 0x104;
		constexpr auto invisible = 0x114;
		constexpr auto currentVelocity = 0x118;
		constexpr auto currentPosition = 0x124;
		constexpr auto traveledDistance = 0x130;
		constexpr auto traveledTime = 0x134;
		constexpr auto launchTime = 0x138;
		constexpr auto sentPosition = 0x13c;
		constexpr auto previousPosition = 0x148;
		constexpr auto previousVelocity = 0x154;
		constexpr auto previousTraveledTime = 0x160;
		constexpr auto isRicochet = 0x164;
		constexpr auto isRetiring = 0x165;
		constexpr auto flybyPlayed = 0x166;
		constexpr auto wasFacingPlayer = 0x167;
		constexpr auto flybyPlane = 0x168;
		constexpr auto flybyRay = 0x178;
		constexpr auto cleanupAction = 0x190;
		constexpr auto hitTest = 0x198;
		constexpr auto swimRandom = 0x1a0;
		constexpr auto _waterMaterialID = 0x4;
		constexpr auto cachedWaterString = 0x8;

		constexpr auto CalculateDamage = 0x8142f0;
		constexpr auto get_isAuthoritative = 0x8190a0;
		constexpr auto get_isAlive = 0x819060;
		constexpr auto Retire = 0x817e50;
		constexpr auto Cleanup = 0x814840;
		constexpr auto AdjustVelocity = 0x814080;
		constexpr auto InitializeVelocity = 0x817090;
		constexpr auto OnDisable = 0x817300;
		constexpr auto Update = 0x818cc0;
		constexpr auto SetEffectScale = 0x818420;
		constexpr auto DoFlybySound = 0x814a40;
		constexpr auto CalculateEffectScale = 0x8147a0;
		constexpr auto UpdateVelocity = 0x8189e0;
		constexpr auto DoVelocityUpdate = 0x8168a0;
		constexpr auto DoMovement = 0x815760;
		constexpr auto DoWaterHit = 0x816c80;
		constexpr auto DoRicochet = 0x816480;
		constexpr auto DoHit = 0x815050;
		constexpr auto AdditiveImpactEffect = 0x2f8560;
		constexpr auto Reflect = 0x8175d0;
		constexpr auto Refract = 0x817920;
		constexpr auto RandomRotation = 0x8174d0;
		constexpr auto Launch = 0x817270;
		constexpr auto FleshMaterialID = 0x816f90;
		constexpr auto WaterMaterialID = 0x818dc0;
		constexpr auto IsWaterMaterial = 0x817140;
		constexpr auto ShouldStopProjectile = 0x818920;
		constexpr auto ctor = 0x818ec0;
		constexpr auto cctor = 0x2f8560;
	};

	namespace PlayerEyes {
		constexpr auto DuckOffset = 0xc;
		constexpr auto CrawlOffset = 0x18;
		constexpr auto thirdPersonSleepingOffset = 0x20;
		constexpr auto defaultLazyAim = 0x30;
		constexpr auto viewOffset = 0x38;
		constexpr auto bodyRotationk__BackingField = 0x44;
		constexpr auto headAnglesk__BackingField = 0x54;
		constexpr auto rotationLookk__BackingField = 0x60;
		constexpr auto IsAltLookingLegsThresholdk__BackingField = 0x70;

		constexpr auto get_worldMountedPosition = 0xab7160;
		constexpr auto get_worldStandingPosition = 0xab7350;
		constexpr auto get_worldCrouchedPosition = 0xab7060;
		constexpr auto get_worldCrawlingPosition = 0xab6f60;
		constexpr auto get_position = 0xab6a20;
		constexpr auto get_BodyLeanOffset = 0xab60e0;
		constexpr auto get_center = 0xab6440;
		constexpr auto get_offset = 0xab6760;
		constexpr auto get_rotation = 0xab6eb0;
		constexpr auto set_rotation = 0xab74b0;
		constexpr auto get_bodyRotation = 0xab6360;
		constexpr auto set_bodyRotation = 0xab7480;
		constexpr auto get_headAngles = 0xab6740;
		constexpr auto set_headAngles = 0xab7490;
		constexpr auto get_rotationLook = 0xab6ea0;
		constexpr auto set_rotationLook = 0xab74a0;
		constexpr auto get_parentRotation = 0xab6890;
		constexpr auto get_canUpdateViewAngles = 0xab6370;
		constexpr auto get_IsAltLookingLegsThreshold = 0xab6350;
		constexpr auto set_IsAltLookingLegsThreshold = 0xab7470;
		constexpr auto FrameUpdate = 0xab4c70;
		constexpr auto UpdateAltLegsThreshold = 0xab5d00;
		constexpr auto UpdateCamera = 0xab5d70;
		constexpr auto DoFirstPersonCamera = 0xab2d50;
		constexpr auto DoInEyeCamera = 0xab33a0;
		constexpr auto DoThirdPersonCamera = 0xab36f0;
		constexpr auto DoDeathCamera = 0xab2770;
		constexpr auto ApplyCameraMoves = 0xab2140;
		constexpr auto MovementForward = 0xab5980;
		constexpr auto MovementRight = 0xab5b40;
		constexpr auto BodyRay = 0xab2320;
		constexpr auto BodyForward = 0xab21d0;
		constexpr auto BodyRight = 0xab24d0;
		constexpr auto BodyUp = 0xab2620;
		constexpr auto HeadRay = 0xab55c0;
		constexpr auto HeadForward = 0xab54d0;
		constexpr auto HeadRight = 0xab57a0;
		constexpr auto HeadUp = 0xab5890;
		constexpr auto GetLookRotation = 0xab5350;
		constexpr auto GetAimRotation = 0xab5290;
		constexpr auto ctor = 0xab6020;
		constexpr auto cctor = 0xab5f20;
	};

	namespace ViewModel {
		constexpr auto viewModelPrefab = 0x18;
		constexpr auto targetEntity = 0x20;
		constexpr auto instance = 0x28;

		constexpr auto Deploy = 0xad3170;
		constexpr auto OnDisable = 0xad34e0;
		constexpr auto Holster = 0xad3470;
		constexpr auto Clear = 0xad3000;
		constexpr auto OnFrame = 0xad3550;
		constexpr auto Play = 0xad36b0;
		constexpr auto ResetTrigger = 0xad37e0;
		constexpr auto Trigger = 0xad3af0;
		constexpr auto CrossFade = 0xad30d0;
		constexpr auto SetBool = 0xad3910;
		constexpr auto SetFloat = 0xad3a50;
		constexpr auto set_ironSights = 0xad3c10;
		constexpr auto ctor = 0x2f71f0;
	};

	namespace BowWeapon {
		constexpr auto attackReady = 0x378;
		constexpr auto arrowBack = 0x37c;
		constexpr auto swapArrows = 0x380;
		constexpr auto wasAiming = 0x388;

		constexpr auto OnRpcMessage = 0x5bc930;
		constexpr auto ClientInit = 0x5bc090;
		constexpr auto OnSignal = 0x5bca20;
		constexpr auto UpdatePullbackThink = 0x5bce70;
		constexpr auto CancelPullbackThink = 0x5bc020;
		constexpr auto PullbackThink = 0x5bcd30;
		constexpr auto OnInput = 0x5bc5b0;
		constexpr auto OnHolstered = 0x5bc570;
		constexpr auto DoAttack = 0x5bc100;
		constexpr auto IsAiming = 0x5bc3a0;
		constexpr auto OnViewmodelEvent = 0x5bcb90;
		constexpr auto OnFrame = 0x5bc440;
		constexpr auto PostNetworkUpdate = 0x5bcc00;
		constexpr auto TryReload = 0x5bce00;
		constexpr auto ProcessSpectatorViewmodel = 0x5bcca0;
		constexpr auto ctor = 0x532c10;
	};

	namespace AttackEntity {
		constexpr auto deployDelay = 0x1f8;
		constexpr auto repeatDelay = 0x1fc;
		constexpr auto animationDelay = 0x200;
		constexpr auto effectiveRange = 0x204;
		constexpr auto npcDamageScale = 0x208;
		constexpr auto attackLengthMin = 0x20c;
		constexpr auto attackLengthMax = 0x210;
		constexpr auto attackSpacing = 0x214;
		constexpr auto aiAimSwayOffset = 0x218;
		constexpr auto aiAimCone = 0x21c;
		constexpr auto aiOnlyInRange = 0x220;
		constexpr auto CloseRangeAddition = 0x224;
		constexpr auto MediumRangeAddition = 0x228;
		constexpr auto LongRangeAddition = 0x22c;
		constexpr auto CanUseAtMediumRange = 0x230;
		constexpr auto CanUseAtLongRange = 0x231;
		constexpr auto reloadSounds = 0x238;
		constexpr auto thirdPersonMeleeSound = 0x240;
		constexpr auto recoilCompDelayOverride = 0x248;
		constexpr auto wantsRecoilComp = 0x24c;
		constexpr auto nextAttackTime = 0x250;
		constexpr auto lastTickTime = 0x254;
		constexpr auto nextTickTime = 0x258;
		constexpr auto timeSinceDeploy = 0x25c;
		constexpr auto lastRecoilCompTime = 0x260;
		constexpr auto startAimingDirection = 0x264;
		constexpr auto wasDoingRecoilComp = 0x270;
		constexpr auto reductionSpeed = 0x274;

		constexpr auto GetInheritedVelocity = 0x85c3d0;
		constexpr auto get_NextAttackTime = 0x85c8b0;
		constexpr auto GetAttackStats = 0x2f8560;
		constexpr auto StartAttackCooldownRaw = 0x85c5f0;
		constexpr auto StartAttackCooldown = 0x85c620;
		constexpr auto ResetAttackCooldown = 0x85c5e0;
		constexpr auto HasAttackCooldown = 0x85c440;
		constexpr auto GetAttackCooldown = 0x85c2d0;
		constexpr auto GetAttackIdle = 0x85c350;
		constexpr auto CalculateCooldownTime = 0x85b700;
		constexpr auto IsFullyDeployed = 0x85c470;
		constexpr auto ProcessInputTime = 0x85c510;
		constexpr auto OnInput = 0x85c4b0;
		constexpr auto OnDeploy = 0x85c490;
		constexpr auto RecoilCompReady = 0x85c560;
		constexpr auto AddPunch = 0x85b550;
		constexpr auto DoRecoilCompensation = 0x85b840;
		constexpr auto ctor = 0x85c7c0;
		constexpr auto cctor = 0x85c750;
	};

	namespace BaseEntity {
		constexpr auto ragdoll = 0x78;
		constexpr auto positionLerp = 0x80;
		constexpr auto menuOptions = 0x88;
		constexpr auto globalBroadcastProtocol = 0x8;
		constexpr auto broadcastProtocol = 0x90;
		constexpr auto links = 0x98;
		constexpr auto linkedToNeighbours = 0xa0;
		constexpr auto _pendingFileRequests = 0xa8;
		constexpr auto updateParentingAction = 0xb0;
		constexpr auto addedToParentEntity = 0xb8;
		constexpr auto itemSkin = 0xc0;
		constexpr auto entitySlots = 0xc8;
		constexpr auto triggers = 0xd0;
		constexpr auto isVisible = 0xd8;
		constexpr auto isAnimatorVisible = 0xd9;
		constexpr auto isShadowVisible = 0xda;
		constexpr auto localOccludee = 0xe0;
		constexpr auto Weightk__BackingField = 0x100;
		constexpr auto bounds = 0x104;
		constexpr auto impactEffect = 0x120;
		constexpr auto enableSaving = 0x128;
		constexpr auto syncPosition = 0x129;
		constexpr auto model = 0x130;
		constexpr auto flags = 0x138;
		constexpr auto parentBone = 0x13c;
		constexpr auto skinID = 0x140;
		constexpr auto _components = 0x148;
		constexpr auto HasBrain = 0x150;
		constexpr auto _name = 0x158;
		constexpr auto OwnerIDk__BackingField = 0x160;

		constexpr auto OnRpcMessage = 0x7be810;
		constexpr auto GetEntityMenu = 0x7b9d60;
		constexpr auto GetMenuOptions = 0x2f8560;
		constexpr auto get_HasMenuOptions = 0x4a2370;
		constexpr auto GetItemOptions = 0x7ba400;
		constexpr auto GetMovementModify = 0x7bae50;
		constexpr auto GetExtrapolationTime = 0x7b9ea0;
		constexpr auto GetInterpolationDelay = 0x7ba250;
		constexpr auto GetInterpolationInertia = 0x7ba2e0;
		constexpr auto GetInterpolationSmoothing = 0x7ba370;
		constexpr auto GetAngularVelocityClient = 0x7b9800;
		constexpr auto GetLocalVelocityClient = 0x7ba650;
		constexpr auto DrawInterpolationState = 0x7b7d00;
		constexpr auto LerpIdleDisable = 0x7bd180;
		constexpr auto ClientInit = 0x7b6f80;
		constexpr auto ClientOnEnable = 0x7b7030;
		constexpr auto OnPositionalFromNetwork = 0x7be4a0;
		constexpr auto StartLerping = 0x7c1860;
		constexpr auto StopLerping = 0x7c19e0;
		constexpr auto ShouldLerp = 0x7c1450;
		constexpr auto SetNetworkPosition = 0x7c0f40;
		constexpr auto SetNetworkRotation = 0x7c10b0;
		constexpr auto DoDestroyEffects = 0x7b7ce0;
		constexpr auto SpawnGibs = 0x7c1550;
		constexpr auto DoNetworkDestroy = 0x2f9000;
		constexpr auto PostNetworkUpdate = 0x7bfbd0;
		constexpr auto OnBecameRagdoll = 0x7be1e0;
		constexpr auto GetMenuInformation = 0x7ba7d0;
		constexpr auto HideMenuItems = 0x7bbba0;
		constexpr auto GetMenuItems = 0x7baac0;
		constexpr auto OnUse = 0x7bf9c0;
		constexpr auto OnUseHeld = 0x7bf7a0;
		constexpr auto OnUseStopped = 0x2f8560;
		constexpr auto OnRendered = 0x2f8560;
		constexpr auto DoClientDestroy = 0x7b7a30;
		constexpr auto GetEyeTransform = 0x7b9f30;
		constexpr auto NeedsCrosshair = 0x7be0d0;
		constexpr auto AlwaysShowCrosshair = 0x4a2370;
		constexpr auto ShouldDestroyWithGroup = 0x7c13a0;
		constexpr auto DetachEffects = 0x7b7620;
		constexpr auto OnVoiceData = 0x2f8560;
		constexpr auto LookingAtTick = 0x2f8560;
		constexpr auto get_RealisticMass = 0x75b060;
		constexpr auto OnCollision = 0x7be290;
		constexpr auto ReceiveCollisionMessages = 0x7bfcc0;
		constexpr auto DebugClient = 0x2f8560;
		constexpr auto OnDebugStart = 0x7be2e0;
		constexpr auto DebugText = 0x7b7560;
		constexpr auto HasFlag = 0x7bbb60;
		constexpr auto ParentHasFlag = 0x7bfb30;
		constexpr auto SetFlag = 0x7c0d70;
		constexpr auto IsOn = 0x7bc1b0;
		constexpr auto IsOpen = 0x7bc1c0;
		constexpr auto IsOnFire = 0x7bc1a0;
		constexpr auto IsLocked = 0x7bbef0;
		constexpr auto IsDebugging = 0x7bbd00;
		constexpr auto IsDisabled = 0x7bbd10;
		constexpr auto IsBroken = 0x7bbcf0;
		constexpr auto IsBusy = 0x7bbba0;
		constexpr auto GetLogColor = 0x7ba780;
		constexpr auto OnFlagsChanged = 0x7be3a0;
		constexpr auto IsOccupied = 0x7bbff0;
		constexpr auto FindLink = 0x7b89c0;
		constexpr auto EntityLinkBroadcast = 0x7b84a0;
		constexpr auto ReceivedEntityLinkBroadcast = 0x7bfd50;
		constexpr auto GetEntityLinks = 0x7b9d20;
		constexpr auto LinkToEntity = 0x7bd1b0;
		constexpr auto LinkToNeighbours = 0x7bd410;
		constexpr auto InitEntityLinks = 0x7bbbb0;
		constexpr auto FreeEntityLinks = 0x7b9720;
		constexpr auto RefreshEntityLinks = 0x7bfdc0;
		constexpr auto RequestFileFromServer = 0x7c0640;
		constexpr auto CL_ReceiveFileRequest = 0x7b6c90;
		constexpr auto CompletePendingFileRequests = 0x7b7230;
		constexpr auto UpdateChildren = 0x7c1ba0;
		constexpr auto UpdateParenting = 0x7c2910;
		constexpr auto SetParentTransform = 0x7c1180;
		constexpr auto UpdateDisableState = 0x7c1f10;
		constexpr auto HasClientTransformOffset = 0x7bb9c0;
		constexpr auto RemoveClientTransformOffset = 0x7c00d0;
		constexpr auto AddClientTransformOffset = 0x7b6650;
		constexpr auto OnParentChangingClient = 0x2f8560;
		constexpr auto GetBuildingPrivilege = 0x7b9cb0;
		constexpr auto ServerRPC = 0x7c0a30;
		constexpr auto ServerRPCStart = 0x7c0880;
		constexpr auto ServerRPCSend = 0x7c0810;
		constexpr auto CL_RPCMessage = 0x7b69a0;
		constexpr auto SendSignalBroadcast = 0x7c0760;
		constexpr auto SignalFromServerEx = 0x7c1470;
		constexpr auto SignalFromServer = 0x7c1500;
		constexpr auto OnSignal = 0x2f8560;
		constexpr auto OnSkinChanged = 0x7bf410;
		constexpr auto OnSkinRefreshStart = 0x7bf780;
		constexpr auto OnSkinRefreshEnd = 0x7bf760;
		constexpr auto PreProcess = 0x7bfbf0;
		constexpr auto HasAnySlot = 0x7bb8e0;
		constexpr auto GetSlot = 0x7bb460;
		constexpr auto GetSlotAnchorName = 0x7bb320;
		constexpr auto GetSlotAnchor = 0x7bb3b0;
		constexpr auto HasSlot = 0x4a2370;
		constexpr auto get_Traits = 0x4b1e70;
		constexpr auto HasTrait = 0x7bbb70;
		constexpr auto HasAnyTrait = 0x7bb990;
		constexpr auto EnterTrigger = 0x7b83f0;
		constexpr auto LeaveTrigger = 0x7bd0e0;
		constexpr auto RemoveFromTriggers = 0x7c0130;
		constexpr auto ForceUpdateTriggersAction = 0x7b8ca0;
		constexpr auto ForceUpdateTriggers = 0x7b8cd0;
		constexpr auto MakeVisible = 0x7be0b0;
		constexpr auto UpdateCullingSpheres = 0x7c1d90;
		constexpr auto RegisterForCulling = 0x7bfea0;
		constexpr auto OnVisibilityChanged = 0x2f8560;
		constexpr auto UnregisterFromCulling = 0x7c1b20;
		constexpr auto UpdateCullingBounds = 0x7c1cc0;
		constexpr auto CheckVisibility = 0x7b6f60;
		constexpr auto CalcEntityVisUpdateRate = 0x7b6e40;
		constexpr auto DebugDrawCullingBounds = 0x7b7490;
		constexpr auto get_Weight = 0x7c3100;
		constexpr auto set_Weight = 0x7c3120;
		constexpr auto get_Components = 0x7c3080;
		constexpr auto ToPlayer = 0x4b1e70;
		constexpr auto get_IsNpc = 0x4a2370;
		constexpr auto InitShared = 0x7b0490;
		constexpr auto DestroyShared = 0x7b3350;
		constexpr auto ResetState = 0x7c06f0;
		constexpr auto InheritedVelocityScale = 0x4ad3c0;
		constexpr auto GetInheritedProjectileVelocity = 0x7ba0a0;
		constexpr auto GetInheritedThrowVelocity = 0x7ba220;
		constexpr auto GetInheritedDropVelocity = 0x7b9fc0;
		constexpr auto GetParentVelocity = 0x7bb060;
		constexpr auto GetWorldVelocity = 0x7bb4c0;
		constexpr auto GetLocalVelocity = 0x7ba6e0;
		constexpr auto GetAngularVelocity = 0x7b9890;
		constexpr auto WorldSpaceBounds = 0x7c2db0;
		constexpr auto PivotPoint = 0x2f7970;
		constexpr auto CenterPoint = 0x7b6f20;
		constexpr auto ClosestPoint = 0x7b7180;
		constexpr auto TriggerPoint = 0x7b6f20;
		constexpr auto Distance = 0x7b78f0;
		constexpr auto SqrDistance = 0x7c1720;
		constexpr auto Distance2D = 0x7b7750;
		constexpr auto SqrDistance2D = 0x7c1580;
		constexpr auto IsVisible = 0x7bcd20;
		constexpr auto IsVisibleSpecificLayers = 0x7bc6d0;
		constexpr auto IsVisibleAndCanSee = 0x7bc4c0;
		constexpr auto IsOlderThan = 0x7bc100;
		constexpr auto IsOutside = 0x7bc1d0;
		constexpr auto WaterFactor = 0x7c2920;
		constexpr auto AirFactor = 0x7b66f0;
		constexpr auto WaterTestFromVolumes = 0x7c2af0;
		constexpr auto IsInWaterVolume = 0x7bbdb0;
		constexpr auto BlocksWaterFor = 0x4a2370;
		constexpr auto Health = 0x4ad3c0;
		constexpr auto MaxHealth = 0x4ad3c0;
		constexpr auto MaxVelocity = 0x4ad3c0;
		constexpr auto BoundsPadding = 0x7b6730;
		constexpr auto PenetrationResistance = 0x75b060;
		constexpr auto GetImpactEffect = 0x69e320;
		constexpr auto OnAttacked = 0x2f8560;
		constexpr auto GetItem = 0x4b1e70;
		constexpr auto GiveItem = 0x7bb8b0;
		constexpr auto CanBeLooted = 0x49fb40;
		constexpr auto GetEntity = 0x487b30;
		constexpr auto ToString = 0x7c1a30;
		constexpr auto Categorize = 0x7b6ef0;
		constexpr auto Log = 0x7bdc00;
		constexpr auto SetModel = 0x7c0e90;
		constexpr auto GetModel = 0x6b7890;
		constexpr auto GetBones = 0x7b9930;
		constexpr auto FindBone = 0x7b8850;
		constexpr auto FindBoneID = 0x7b8770;
		constexpr auto FindClosestBone = 0x7b8900;
		constexpr auto get_OwnerID = 0x7c30f0;
		constexpr auto set_OwnerID = 0x7c3110;
		constexpr auto ShouldBlockProjectiles = 0x49fb40;
		constexpr auto ShouldInheritNetworkGroup = 0x49fb40;
		constexpr auto SupportsChildDeployables = 0x49fb40;
		constexpr auto BroadcastEntityMessage = 0x7b6740;
		constexpr auto OnEntityMessage = 0x2f8560;
		constexpr auto Load = 0x7bd700;
		constexpr auto ctor = 0x7c2f70;
		constexpr auto cctor = 0x7c2ef0;
	};

	namespace UnityEngine_Time {

		constexpr auto get_time = 0x213a9c0;
		constexpr auto get_deltaTime = 0x213a810;
		constexpr auto get_fixedTime = 0x213a870;
		constexpr auto get_unscaledTime = 0x213aa20;
		constexpr auto get_unscaledDeltaTime = 0x213a9f0;
		constexpr auto get_fixedDeltaTime = 0x213a840;
		constexpr auto set_fixedDeltaTime = 0x213aa50;
		constexpr auto get_maximumDeltaTime = 0x213a8d0;
		constexpr auto set_maximumDeltaTime = 0x213aa90;
		constexpr auto get_smoothDeltaTime = 0x213a960;
		constexpr auto get_timeScale = 0x213a990;
		constexpr auto set_timeScale = 0x213aad0;
		constexpr auto get_frameCount = 0x213a8a0;
		constexpr auto get_renderedFrameCount = 0x213a930;
		constexpr auto get_realtimeSinceStartup = 0x213a900;
	};

	namespace UnityEngine_Physics {

		constexpr auto get_gravity = 0x2259310;
		constexpr auto get_queriesHitBackfaces = 0x2259350;
		constexpr auto set_queriesHitBackfaces = 0x22593c0;
		constexpr auto get_defaultPhysicsScene = 0x2259290;
		constexpr auto IgnoreCollision = 0x2255b40;
		constexpr auto Raycast = 0x2257ab0;
		constexpr auto Linecast = 0x2255c80;
		constexpr auto CapsuleCast = 0x2255380;
		constexpr auto SphereCast = 0x2258d20;
		constexpr auto BoxCast = 0x2254dc0;
		constexpr auto Internal_RaycastAll = 0x2255c10;
		constexpr auto RaycastAll = 0x22567f0;
		constexpr auto RaycastNonAlloc = 0x2256f10;
		constexpr auto Query_SphereCastAll = 0x2256690;
		constexpr auto SphereCastAll = 0x2258790;
		constexpr auto SyncTransforms = 0x22591f0;
		constexpr auto get_autoSyncTransforms = 0x2259220;
		constexpr auto set_autoSyncTransforms = 0x2259380;
		constexpr auto OverlapSphereNonAlloc = 0x2256560;
		constexpr auto CheckSphere_Internal = 0x2255960;
		constexpr auto CheckSphere = 0x22559d0;
		constexpr auto CapsuleCastNonAlloc = 0x2255120;
		constexpr auto SphereCastNonAlloc = 0x2258920;
		constexpr auto CheckCapsule_Internal = 0x22556c0;
		constexpr auto CheckCapsule = 0x2255730;
		constexpr auto CheckBox_Internal = 0x2255500;
		constexpr auto CheckBox = 0x2255570;
		constexpr auto OverlapBox_Internal = 0x2256240;
		constexpr auto OverlapBox = 0x22562b0;
		constexpr auto OverlapBoxNonAlloc = 0x22560e0;
		constexpr auto OverlapCapsuleNonAlloc = 0x2256470;
		constexpr auto get_gravity_Injected = 0x22592d0;
		constexpr auto get_defaultPhysicsScene_Injected = 0x2259250;
		constexpr auto Internal_RaycastAll_Injected = 0x2255ba0;
		constexpr auto Query_SphereCastAll_Injected = 0x2256620;
		constexpr auto CheckSphere_Internal_Injected = 0x22558f0;
		constexpr auto CheckCapsule_Internal_Injected = 0x2255650;
		constexpr auto CheckBox_Internal_Injected = 0x2255490;
		constexpr auto OverlapBox_Internal_Injected = 0x22561d0;
	};

	namespace AssetNameCache {
		constexpr auto lower = 0x8;
		constexpr auto upper = 0x10;

		constexpr auto LookupName = 0x857ce0;
		constexpr auto LookupNameLower = 0x857a20;
		constexpr auto LookupNameUpper = 0x857b80;
		constexpr auto GetName = 0x857960;
		constexpr auto GetNameLower = 0x8577e0;
		constexpr auto GetNameUpper = 0x8578a0;
		constexpr auto cctor = 0x857e20;
	};

	namespace UnityEngine_Component {

		constexpr auto get_transform = 0x182d2d0;
		constexpr auto get_gameObject = 0x182d290;
		constexpr auto GetComponent = 0x182ce70;
		constexpr auto GetComponentFastPath = 0x182cd00;
		constexpr auto GetComponentInChildren = 0x182cd60;
		constexpr auto GetComponentsInChildren = 0x182cf50;
		constexpr auto GetComponentInParent = 0x182cdf0;
		constexpr auto GetComponents = 0x182cfb0;
		constexpr auto GetComponentsForListInternal = 0x182cef0;
		constexpr auto CompareTag = 0x182cc80;
		constexpr auto SendMessageUpwards = 0x182d0a0;
		constexpr auto SendMessage = 0x182d1e0;
		constexpr auto BroadcastMessage = 0x182cc10;
		constexpr auto ctor = 0x1827820;
	};

	namespace UnityEngine_Transform {

		constexpr auto ctor = 0x18e0ce0;
		constexpr auto get_position = 0x213d860;
		constexpr auto set_position = 0x213e1e0;
		constexpr auto get_localPosition = 0x213d530;
		constexpr auto set_localPosition = 0x213df50;
		constexpr auto get_eulerAngles = 0x213d230;
		constexpr auto set_eulerAngles = 0x213dca0;
		constexpr auto get_localEulerAngles = 0x213d450;
		constexpr auto set_localEulerAngles = 0x213de50;
		constexpr auto get_right = 0x213d8b0;
		constexpr auto set_right = 0x213e230;
		constexpr auto get_up = 0x213daa0;
		constexpr auto set_up = 0x213e420;
		constexpr auto get_forward = 0x213d2c0;
		constexpr auto set_forward = 0x213dd50;
		constexpr auto get_rotation = 0x213da50;
		constexpr auto set_rotation = 0x213e3d0;
		constexpr auto get_localRotation = 0x213d5d0;
		constexpr auto set_localRotation = 0x213dff0;
		constexpr auto get_localScale = 0x213d670;
		constexpr auto set_localScale = 0x213e090;
		constexpr auto get_parent = 0x213bc50;
		constexpr auto set_parent = 0x213e0e0;
		constexpr auto get_parentInternal = 0x213bc50;
		constexpr auto set_parentInternal = 0x213cc30;
		constexpr auto GetParent = 0x213bc50;
		constexpr auto SetParent = 0x213cc30;
		constexpr auto get_worldToLocalMatrix = 0x213dc40;
		constexpr auto get_localToWorldMatrix = 0x213d710;
		constexpr auto SetPositionAndRotation = 0x213cce0;
		constexpr auto Translate = 0x213d020;
		constexpr auto Rotate = 0x213c640;
		constexpr auto RotateAroundInternal = 0x213c3a0;
		constexpr auto RotateAround = 0x213c400;
		constexpr auto LookAt = 0x213c1d0;
		constexpr auto Internal_LookAt = 0x213bd70;
		constexpr auto TransformDirection = 0x213cde0;
		constexpr auto InverseTransformDirection = 0x213be30;
		constexpr auto TransformVector = 0x213cf60;
		constexpr auto InverseTransformVector = 0x213bfb0;
		constexpr auto TransformPoint = 0x213cea0;
		constexpr auto InverseTransformPoint = 0x213bef0;
		constexpr auto get_root = 0x213bc90;
		constexpr auto GetRoot = 0x213bc90;
		constexpr auto get_childCount = 0x213d1f0;
		constexpr auto DetachChildren = 0x213ba60;
		constexpr auto SetAsFirstSibling = 0x213cb50;
		constexpr auto SetAsLastSibling = 0x213cb90;
		constexpr auto SetSiblingIndex = 0x213cd40;
		constexpr auto GetSiblingIndex = 0x213bcd0;
		constexpr auto FindRelativeTransformWithPath = 0x213baa0;
		constexpr auto Find = 0x213bb00;
		constexpr auto get_lossyScale = 0x213d7c0;
		constexpr auto IsChildOf = 0x213c010;
		constexpr auto get_hasChanged = 0x213d410;
		constexpr auto set_hasChanged = 0x213de00;
		constexpr auto GetEnumerator = 0x213bbe0;
		constexpr auto GetChild = 0x213bba0;
		constexpr auto get_position_Injected = 0x213d810;
		constexpr auto set_position_Injected = 0x213e190;
		constexpr auto get_localPosition_Injected = 0x213d4e0;
		constexpr auto set_localPosition_Injected = 0x213df00;
		constexpr auto get_rotation_Injected = 0x213da00;
		constexpr auto set_rotation_Injected = 0x213e380;
		constexpr auto get_localRotation_Injected = 0x213d580;
		constexpr auto set_localRotation_Injected = 0x213dfa0;
		constexpr auto get_localScale_Injected = 0x213d620;
		constexpr auto set_localScale_Injected = 0x213e040;
		constexpr auto get_worldToLocalMatrix_Injected = 0x213dbf0;
		constexpr auto get_localToWorldMatrix_Injected = 0x213d6c0;
		constexpr auto SetPositionAndRotation_Injected = 0x213cc80;
		constexpr auto RotateAroundInternal_Injected = 0x213c340;
		constexpr auto Internal_LookAt_Injected = 0x213bd10;
		constexpr auto TransformDirection_Injected = 0x213cd80;
		constexpr auto InverseTransformDirection_Injected = 0x213bdd0;
		constexpr auto TransformVector_Injected = 0x213cf00;
		constexpr auto InverseTransformVector_Injected = 0x213bf50;
		constexpr auto TransformPoint_Injected = 0x213ce40;
		constexpr auto InverseTransformPoint_Injected = 0x213be90;
		constexpr auto get_lossyScale_Injected = 0x213d770;
	};

	namespace GameTrace {

		constexpr auto TraceAll = 0x100aee0;
		constexpr auto Trace = 0x100b7e0;
	};

	namespace HitTest {
		constexpr auto type = 0x10;
		constexpr auto AttackRay = 0x14;
		constexpr auto Radius = 0x2c;
		constexpr auto Forgiveness = 0x30;
		constexpr auto MaxDistance = 0x34;
		constexpr auto RayHit = 0x38;
		constexpr auto MultiHit = 0x64;
		constexpr auto BestHit = 0x65;
		constexpr auto DidHit = 0x66;
		constexpr auto damageProperties = 0x68;
		constexpr auto gameObject = 0x70;
		constexpr auto collider = 0x78;
		constexpr auto ignoreEntity = 0x80;
		constexpr auto HitEntity = 0x88;
		constexpr auto HitPoint = 0x90;
		constexpr auto HitNormal = 0x9c;
		constexpr auto HitDistance = 0xa8;
		constexpr auto HitTransform = 0xb0;
		constexpr auto HitPart = 0xb8;
		constexpr auto HitMaterial = 0xc0;

		constexpr auto HitPointWorld = 0x5d1440;
		constexpr auto HitNormalWorld = 0x5d1320;
		constexpr auto BuildAttackMessage = 0x5d0a90;
		constexpr auto Clear = 0x5d1240;
		constexpr auto ctor = 0x2f9000;
	};

	namespace UnityEngine_Quaternion {
		constexpr auto x = 0x10;
		constexpr auto y = 0x14;
		constexpr auto z = 0x18;
		constexpr auto w = 0x1c;

		constexpr auto FromToRotation = 0x18e7500;
		constexpr auto Inverse = 0x18e78f0;
		constexpr auto Slerp = 0x18e8370;
		constexpr auto SlerpUnclamped = 0x18e8250;
		constexpr auto Lerp = 0x18e7b20;
		constexpr auto LerpUnclamped = 0x18e7a00;
		constexpr auto Internal_FromEulerRad = 0x18e7660;
		constexpr auto Internal_ToEulerRad = 0x18e7810;
		constexpr auto AngleAxis = 0x18e6ee0;
		constexpr auto LookRotation = 0x18e7d80;
		constexpr auto ctor = 0xf6630;
		constexpr auto get_identity = 0x18e8870;
		constexpr auto op_Multiply = 0x18e8c90;
		constexpr auto IsEqualUsingDot = 0x18e7980;
		constexpr auto op_Equality = 0x18e88e0;
		constexpr auto op_Inequality = 0x18e89a0;
		constexpr auto Dot = 0x18e70a0;
		constexpr auto SetLookRotation = 0x216d80;
		constexpr auto Angle = 0x18e6f80;
		constexpr auto Internal_MakePositive = 0x18e76f0;
		constexpr auto get_eulerAngles = 0x216ea0;
		constexpr auto Euler = 0x18e71d0;
		constexpr auto RotateTowards = 0x18e7e20;
		constexpr auto GetHashCode = 0x216d10;
		constexpr auto Equals = 0x216c30;
		constexpr auto ToString = 0x216e90;
		constexpr auto cctor = 0x18e8660;
		constexpr auto FromToRotation_Injected = 0x18e74a0;
		constexpr auto Inverse_Injected = 0x18e78a0;
		constexpr auto Slerp_Injected = 0x18e8300;
		constexpr auto SlerpUnclamped_Injected = 0x18e81e0;
		constexpr auto Lerp_Injected = 0x18e7ab0;
		constexpr auto LerpUnclamped_Injected = 0x18e7990;
		constexpr auto Internal_FromEulerRad_Injected = 0x18e7610;
		constexpr auto Internal_ToEulerRad_Injected = 0x18e77c0;
		constexpr auto AngleAxis_Injected = 0x18e6e80;
		constexpr auto LookRotation_Injected = 0x18e7bd0;
	};

	namespace GamePhysics {
		constexpr auto hitBufferB = 0x8;
		constexpr auto colBuffer = 0x10;

		constexpr auto CheckSphere = 0x50e8b0;
		constexpr auto CheckCapsule = 0x50e0c0;
		constexpr auto CheckOBB = 0x50e780;
		constexpr auto CheckBounds = 0x50df60;
		constexpr auto CheckInsideNonConvexMesh = 0x50e3d0;
		constexpr auto CheckInsideAnyCollider = 0x50e240;
		constexpr auto OverlapSphere = 0x50fcc0;
		constexpr auto CapsuleSweep = 0x50dcc0;
		constexpr auto OverlapCapsule = 0x50fa40;
		constexpr auto OverlapOBB = 0x50fb70;
		constexpr auto OverlapBounds = 0x50f8a0;
		constexpr auto BufferToList = 0x50db20;
		constexpr auto HitBufferToList = 0x50eaf0;
		constexpr auto Trace = 0x510370;
		constexpr auto TraceAll = 0x510290;
		constexpr auto TraceAllUnordered = 0x50ffa0;
		constexpr auto LineOfSightRadius = 0x50f480;
		constexpr auto LineOfSight = 0x50f670;
		constexpr auto LineOfSightInternal = 0x50ec60;
		constexpr auto Verify = 0x510580;
		constexpr auto CompareEntity = 0x50e970;
		constexpr auto HandleTerrainCollision = 0x50e9e0;
		constexpr auto Sort = 0x50fea0;
		constexpr auto cctor = 0x510830;
	};

	namespace WaterLevel {

		constexpr auto Factor = 0xbe02a0;
		constexpr auto Test = 0xbe2450;
		constexpr auto GetWaterDepth = 0xbe0b70;
		constexpr auto GetOverallWaterDepth = 0xbe0a20;
		constexpr auto GetBuoyancyWaterInfo = 0xbe0480;
		constexpr auto GetWaterInfo = 0xbe0f00;
		constexpr auto GetWaterInfoFromVolumes = 0xbe0cb0;
	};

	namespace System_Math {
		constexpr auto roundPower10Double = 0x8;

		constexpr auto Acos = 0x1648820;
		constexpr auto Asin = 0x1648830;
		constexpr auto Atan = 0x1648850;
		constexpr auto Atan2 = 0x1648840;
		constexpr auto Ceiling = 0x1648860;
		constexpr auto Cos = 0x1648870;
		constexpr auto Cosh = 0x1648880;
		constexpr auto Floor = 0x16488b0;
		constexpr auto InternalRound = 0x16488c0;
		constexpr auto InternalTruncate = 0x1648b20;
		constexpr auto Sin = 0x16495b0;
		constexpr auto Tan = 0x16495f0;
		constexpr auto Sinh = 0x16495c0;
		constexpr auto Round = 0x1649290;
		constexpr auto SplitFractionDouble = 0x16495d0;
		constexpr auto Truncate = 0x1649600;
		constexpr auto Sqrt = 0x16495e0;
		constexpr auto Log = 0x1648cf0;
		constexpr auto Log10 = 0x1648b80;
		constexpr auto Exp = 0x16488a0;
		constexpr auto Pow = 0x1649100;
		constexpr auto Abs = 0x1648750;
		constexpr auto AbsHelper = 0x16485f0;
		constexpr auto Max = 0x1648da0;
		constexpr auto Min = 0x16490f0;
		constexpr auto Sign = 0x1649570;
		constexpr auto DivRem = 0x1648890;
		constexpr auto cctor = 0x16496b0;
	};

	namespace UnityEngine_Mathf {

		constexpr auto ClosestPowerOfTwo = 0x18d7490;
		constexpr auto IsPowerOfTwo = 0x18d78b0;
		constexpr auto NextPowerOfTwo = 0x18d8080;
		constexpr auto GammaToLinearSpace = 0x18d7780;
		constexpr auto LinearToGammaSpace = 0x18d7b10;
		constexpr auto FloatToHalf = 0x18d7680;
		constexpr auto HalfToFloat = 0x18d77c0;
		constexpr auto PerlinNoise = 0x18d80c0;
		constexpr auto Sin = 0x18d8310;
		constexpr auto Cos = 0x18d74d0;
		constexpr auto Tan = 0x18d87f0;
		constexpr auto Asin = 0x18d7230;
		constexpr auto Acos = 0x18d7120;
		constexpr auto Atan = 0x18d7310;
		constexpr auto Atan2 = 0x18d7290;
		constexpr auto Sqrt = 0x18d8790;
		constexpr auto Abs = 0x18d70c0;
		constexpr auto Min = 0x18d7d20;
		constexpr auto Max = 0x18d7c90;
		constexpr auto Pow = 0x18d8110;
		constexpr auto Exp = 0x18d7620;
		constexpr auto Log = 0x18d7c10;
		constexpr auto Log10 = 0x18d7b50;
		constexpr auto Ceil = 0x18d73d0;
		constexpr auto Floor = 0x18d7720;
		constexpr auto Round = 0x18d8290;
		constexpr auto CeilToInt = 0x18d7370;
		constexpr auto FloorToInt = 0x18d76c0;
		constexpr auto RoundToInt = 0x18d8230;
		constexpr auto Sign = 0x18d82f0;
		constexpr auto Clamp = 0x18d7450;
		constexpr auto Clamp01 = 0x18d7430;
		constexpr auto Lerp = 0x18d7a70;
		constexpr auto LerpUnclamped = 0x18d7a50;
		constexpr auto LerpAngle = 0x18d78f0;
		constexpr auto MoveTowards = 0x18d7f90;
		constexpr auto MoveTowardsAngle = 0x18d7d30;
		constexpr auto SmoothStep = 0x18d86d0;
		constexpr auto Approximately = 0x18d7180;
		constexpr auto SmoothDamp = 0x18d8500;
		constexpr auto Repeat = 0x18d8190;
		constexpr auto InverseLerp = 0x18d7800;
		constexpr auto DeltaAngle = 0x18d7530;
		constexpr auto cctor = 0x18d8850;
	};

	namespace Door {
		constexpr auto __menuOption_Menu_CloseDoor = 0x270;
		constexpr auto __menuOption_Menu_KnockDoor = 0x2c8;
		constexpr auto __menuOption_Menu_OpenDoor = 0x320;
		constexpr auto __menuOption_Menu_ToggleHatch = 0x378;
		constexpr auto knockEffect = 0x3d0;
		constexpr auto canTakeLock = 0x3d8;
		constexpr auto hasHatch = 0x3d9;
		constexpr auto canTakeCloser = 0x3da;
		constexpr auto canTakeKnocker = 0x3db;
		constexpr auto canNpcOpen = 0x3dc;
		constexpr auto canHandOpen = 0x3dd;
		constexpr auto isSecurityDoor = 0x3de;
		constexpr auto vehiclePhysBoxes = 0x3e0;
		constexpr auto checkPhysBoxesOnOpen = 0x3e8;
		constexpr auto vehicleCollisionSfx = 0x3f0;
		constexpr auto ClosedColliderRoots = 0x3f8;
		constexpr auto closeHash = 0x4;

		constexpr auto GetMenuOptions = 0x94f6c0;
		constexpr auto get_HasMenuOptions = 0x9511a0;
		constexpr auto OnRpcMessage = 0x950af0;
		constexpr auto ResetState = 0x950f40;
		constexpr auto HasSlot = 0x9502b0;
		constexpr auto CanPickup = 0x94f550;
		constexpr auto Menu_OpenDoor = 0x9506a0;
		constexpr auto Menu_OpenDoor_Proxy = 0x950580;
		constexpr auto Menu_OpenDoorStart = 0x950540;
		constexpr auto Menu_OpenDoor_ShowIf = 0x950660;
		constexpr auto Menu_CloseDoor = 0x950450;
		constexpr auto Menu_CloseDoor_Proxy = 0x950330;
		constexpr auto Menu_CloseDoorStart = 0x9502f0;
		constexpr auto Menu_CloseDoor_ShowIf = 0x950410;
		constexpr auto Menu_KnockDoor = 0x950500;
		constexpr auto Menu_KnockDoor_ShowIf = 0x950490;
		constexpr auto Menu_ToggleHatch = 0x9506f0;
		constexpr auto Menu_ToggleHatch_ShowIf = 0x9506e0;
		constexpr auto NeedsCrosshair = 0x49fb40;
		constexpr auto OnDoorInterrupted = 0x950730;
		constexpr auto ReverseDoorAnimation = 0x950f50;
		constexpr auto BoundsPadding = 0x4baba0;
		constexpr auto OnObjects = 0x2f8560;
		constexpr auto OnEmpty = 0x2f8560;
		constexpr auto OnFlagsChanged = 0x9509c0;
		constexpr auto ctor = 0x951180;
		constexpr auto cctor = 0x951110;
	};

	namespace UnityEngine_Object {
		constexpr auto m_CachedPtr = 0x10;

		constexpr auto GetInstanceID = 0x18e15d0;
		constexpr auto GetHashCode = 0x18e15c0;
		constexpr auto Equals = 0x18e11e0;
		constexpr auto op_Implicit = 0x18e2a60;
		constexpr auto CompareBaseObjects = 0x18e0ef0;
		constexpr auto IsNativeObjectAlive = 0x18e26b0;
		constexpr auto GetCachedPtr = 0x18258b0;
		constexpr auto get_name = 0x18e2880;
		constexpr auto set_name = 0x18e2ce0;
		constexpr auto Instantiate = 0x18e2130;
		constexpr auto Destroy = 0x18e10e0;
		constexpr auto DestroyImmediate = 0x18e1090;
		constexpr auto FindObjectsOfType = 0x18e1580;
		constexpr auto DontDestroyOnLoad = 0x18e11a0;
		constexpr auto get_hideFlags = 0x18e2840;
		constexpr auto set_hideFlags = 0x18e2ca0;
		constexpr auto CheckNullArgument = 0x18e0e80;
		constexpr auto FindObjectOfType = 0x18e14f0;
		constexpr auto ToString = 0x18e2750;
		constexpr auto op_Equality = 0x18e28f0;
		constexpr auto op_Inequality = 0x18e2b30;
		constexpr auto GetOffsetOfInstanceIDInCPlusPlusObject = 0x18e1740;
		constexpr auto Internal_CloneSingle = 0x18e2470;
		constexpr auto Internal_CloneSingleWithParent = 0x18e2410;
		constexpr auto Internal_InstantiateSingle = 0x18e2620;
		constexpr auto Internal_InstantiateSingleWithParent = 0x18e2520;
		constexpr auto GetName = 0x18e1700;
		constexpr auto SetName = 0x18e2700;
		constexpr auto FindObjectFromInstanceID = 0x18e14b0;
		constexpr auto ctor = 0x2f9000;
		constexpr auto cctor = 0x18e2800;
		constexpr auto Internal_InstantiateSingle_Injected = 0x18e25c0;
		constexpr auto Internal_InstantiateSingleWithParent_Injected = 0x18e24b0;
	};

	namespace BaseMelee {
		constexpr auto canThrowAsProjectile = 0x280;
		constexpr auto canAiHearIt = 0x281;
		constexpr auto onlyThrowAsProjectile = 0x282;
		constexpr auto damageProperties = 0x288;
		constexpr auto damageTypes = 0x290;
		constexpr auto maxDistance = 0x298;
		constexpr auto attackRadius = 0x29c;
		constexpr auto isAutomatic = 0x2a0;
		constexpr auto blockSprintOnAttack = 0x2a1;
		constexpr auto strikeFX = 0x2a8;
		constexpr auto useStandardHitEffects = 0x2b0;
		constexpr auto aiStrikeDelay = 0x2b4;
		constexpr auto swingEffect = 0x2b8;
		constexpr auto materialStrikeFX = 0x2c0;
		constexpr auto heartStress = 0x2c8;
		constexpr auto gathering = 0x2d0;
		constexpr auto throwReady = 0x2d8;

		constexpr auto OnRpcMessage = 0xa3c550;
		constexpr auto GetInheritedVelocity = 0x9d8460;
		constexpr auto DoThrow = 0xa3b870;
		constexpr auto CreateProjectile = 0xa3b230;
		constexpr auto GetAttackStats = 0xa3bf60;
		constexpr auto DoAttackShared = 0xa3b3e0;
		constexpr auto OnInput = 0xa3c170;
		constexpr auto get_CanAttack = 0x49fb40;
		constexpr auto get_CanThrow = 0x49fb40;
		constexpr auto ClientAttack = 0x2f8560;
		constexpr auto OnHolstered = 0xa3c150;
		constexpr auto ProcessAttack = 0xa3c700;
		constexpr auto DoAttack = 0xa3b630;
		constexpr auto DoViewmodelImpact = 0xa3bed0;
		constexpr auto OnViewmodelEvent = 0xa3c640;
		constexpr auto ProcessSpectatorViewmodel = 0xa3ca40;
		constexpr auto ProcessSpectatorViewmodelEvent = 0xa3c990;
		constexpr auto GetGatherInfoFromIndex = 0xa3bfc0;
		constexpr auto CanHit = 0x49fb40;
		constexpr auto TotalDamage = 0xa3caf0;
		constexpr auto CanBeUsedInWater = 0x49fb40;
		constexpr auto GetStrikeEffectPath = 0xa3bff0;
		constexpr auto ctor = 0xa3cc50;
	};

	namespace ItemModProjectile {
		constexpr auto projectileObject = 0x18;
		constexpr auto mods = 0x20;
		constexpr auto ammoType = 0x28;
		constexpr auto numProjectiles = 0x2c;
		constexpr auto projectileSpread = 0x30;
		constexpr auto projectileVelocity = 0x34;
		constexpr auto projectileVelocitySpread = 0x38;
		constexpr auto useCurve = 0x3c;
		constexpr auto spreadScalar = 0x40;
		constexpr auto attackEffectOverride = 0x48;
		constexpr auto barrelConditionLoss = 0x50;
		constexpr auto category = 0x58;

		constexpr auto GetRandomVelocity = 0x8ef050;
		constexpr auto GetSpreadScalar = 0x8ef090;
		constexpr auto GetIndexedSpreadScalar = 0x8eefc0;
		constexpr auto GetAverageVelocity = 0x8eefb0;
		constexpr auto GetMinVelocity = 0x8ef040;
		constexpr auto GetMaxVelocity = 0x8ef030;
		constexpr auto IsAmmo = 0x8ef0f0;
		constexpr auto ServerProjectileHit = 0x8ef100;
		constexpr auto ctor = 0x8ef1d0;
	};

	namespace RecoilProperties {
		constexpr auto recoilYawMin = 0x18;
		constexpr auto recoilYawMax = 0x1c;
		constexpr auto recoilPitchMin = 0x20;
		constexpr auto recoilPitchMax = 0x24;
		constexpr auto timeToTakeMin = 0x28;
		constexpr auto timeToTakeMax = 0x2c;
		constexpr auto ADSScale = 0x30;
		constexpr auto movementPenalty = 0x34;
		constexpr auto clampPitch = 0x38;
		constexpr auto pitchCurve = 0x40;
		constexpr auto yawCurve = 0x48;
		constexpr auto useCurves = 0x50;
		constexpr auto curvesAsScalar = 0x51;
		constexpr auto shotsUntilMax = 0x54;
		constexpr auto maxRecoilRadius = 0x58;
		constexpr auto overrideAimconeWithCurve = 0x5c;
		constexpr auto aimconeCurveScale = 0x60;
		constexpr auto aimconeCurve = 0x68;
		constexpr auto aimconeProbabilityCurve = 0x70;
		constexpr auto newRecoilOverride = 0x78;

		constexpr auto GetRecoil = 0x690420;
		constexpr auto ctor = 0x690510;
		constexpr auto cctor = 0x6904d0;
	};

	namespace ItemDefinition {
		constexpr auto itemid = 0x18;
		constexpr auto shortname = 0x20;
		constexpr auto displayName = 0x28;
		constexpr auto displayDescription = 0x30;
		constexpr auto iconSprite = 0x38;
		constexpr auto category = 0x40;
		constexpr auto selectionPanel = 0x44;
		constexpr auto maxDraggable = 0x48;
		constexpr auto itemType = 0x4c;
		constexpr auto amountType = 0x50;
		constexpr auto occupySlots = 0x54;
		constexpr auto stackable = 0x58;
		constexpr auto quickDespawn = 0x5c;
		constexpr auto rarity = 0x60;
		constexpr auto spawnAsBlueprint = 0x64;
		constexpr auto inventorySelectSound = 0x68;
		constexpr auto inventoryGrabSound = 0x70;
		constexpr auto inventoryDropSound = 0x78;
		constexpr auto physImpactSoundDef = 0x80;
		constexpr auto condition = 0x88;
		constexpr auto hidden = 0xa0;
		constexpr auto flags = 0xa4;
		constexpr auto steamItem = 0xa8;
		constexpr auto steamDlc = 0xb0;
		constexpr auto Parent = 0xb8;
		constexpr auto worldModelPrefab = 0xc0;
		constexpr auto isRedirectOf = 0xc8;
		constexpr auto redirectVendingBehaviour = 0xd0;
		constexpr auto itemMods = 0xd8;
		constexpr auto Traits = 0xe0;
		constexpr auto skins = 0xe8;
		constexpr auto _skins2 = 0xf0;
		constexpr auto panel = 0xf8;
		constexpr auto ItemModWearablek__BackingField = 0x100;
		constexpr auto isHoldablek__BackingField = 0x108;
		constexpr auto isUsablek__BackingField = 0x109;
		constexpr auto CraftableWithSkink__BackingField = 0x10a;
		constexpr auto Children = 0x110;

		constexpr auto get_skins2 = 0x8e5790;
		constexpr auto InvalidateWorkshopSkinCache = 0x8e54e0;
		constexpr auto get_Blueprint = 0x8e55f0;
		constexpr auto get_craftingStackable = 0x8e56b0;
		constexpr auto HasFlag = 0x8e51c0;
		constexpr auto Initialize = 0x8e51d0;
		constexpr auto GetDisplayName = 0x8e50c0;
		constexpr auto GetDescriptionText = 0x8e4fd0;
		constexpr auto FindIconSprite = 0x8e4c70;
		constexpr auto get_isWearable = 0x8e5730;
		constexpr auto get_ItemModWearable = 0x8e56a0;
		constexpr auto set_ItemModWearable = 0x8e59a0;
		constexpr auto get_isHoldable = 0x8e5710;
		constexpr auto set_isHoldable = 0x8e59b0;
		constexpr auto get_isUsable = 0x8e5720;
		constexpr auto set_isUsable = 0x8e59c0;
		constexpr auto get_HasSkins = 0x8e5640;
		constexpr auto get_CraftableWithSkin = 0x8e5630;
		constexpr auto set_CraftableWithSkin = 0x8e5990;
		constexpr auto ctor = 0x8e5580;
		constexpr auto Initializeb__45_0 = 0x8e5500;
	};

	namespace PlayerInput {
		constexpr auto state = 0x20;
		constexpr auto hadInputBuffer = 0x28;
		constexpr auto bodyRotation = 0x2c;
		constexpr auto bodyAngles = 0x3c;
		constexpr auto headRotation = 0x48;
		constexpr auto headAngles = 0x58;
		constexpr auto recoilAngles = 0x64;
		constexpr auto viewDelta = 0x70;
		constexpr auto headLerp = 0x78;
		constexpr auto mouseWheelUp = 0x7c;
		constexpr auto mouseWheelDn = 0x80;
		constexpr auto autorun = 0x84;
		constexpr auto toggleDuck = 0x85;
		constexpr auto pendingMouseDelta = 0x88;
		constexpr auto offsetAngles = 0x94;
		constexpr auto ignoredButtons = 0xa0;
		constexpr auto hasKeyFocus = 0xa4;

		constexpr auto OnDisable = 0xab9dd0;
		constexpr auto FrameUpdate = 0xab9060;
		constexpr auto Flip = 0xab8ef0;
		constexpr auto ResetMouseDelta = 0xab9e50;
		constexpr auto AddMouseDelta = 0xab7570;
		constexpr auto AdjustMouseMovement = 0xab7840;
		constexpr auto UpdateViewAngles = 0xaba050;
		constexpr auto ApplyViewAngles = 0xab7a80;
		constexpr auto SetViewVars = 0xab9f30;
		constexpr auto FinalizeRecoil = 0xab8d20;
		constexpr auto ResetOffsetAngles = 0xab9ec0;
		constexpr auto ClientAngles = 0xab8cf0;
		constexpr auto ClientLookVars = 0xab8d00;
		constexpr auto HeadAngles = 0xab9410;
		constexpr auto HeadLookVars = 0xab9420;
		constexpr auto ModifyInputState = 0xab9d40;
		constexpr auto IsButtonDownNative = 0xab9890;
		constexpr auto BuildInputState = 0xab8600;
		constexpr auto IsAiming = 0xab9740;
		constexpr auto UpdateButton = 0xab9fc0;
		constexpr auto IgnoreCurrentButtons = 0xab9440;
		constexpr auto get_hasOnlyPartialKeyInput = 0xaba340;
		constexpr auto get_hasNoKeyInput = 0xaba1b0;
		constexpr auto UpdateKeyFocus = 0xaba030;
		constexpr auto IgnoreCurrentKeys = 0xab9550;
		constexpr auto ctor = 0xaba140;
	};

	namespace PlayerModel {
		constexpr auto pm_downlimit = 0x4;
		constexpr auto pm_upspine = 0x8;
		constexpr auto pm_downspine = 0xc;
		constexpr auto pm_lookoffset = 0x10;
		constexpr auto pm_anglesmoothspeed = 0x1c;
		constexpr auto pm_nohold = 0x20;
		constexpr auto pm_ladder = 0x24;
		constexpr auto pm_minweight = 0x28;
		constexpr auto _smoothAimWeight = 0x18;
		constexpr auto _smoothVelocity = 0x1c;
		constexpr auto _smoothlookAngle = 0x20;
		constexpr auto allowMountedHeadLook = 0x2c;
		constexpr auto smoothLookDir = 0x30;
		constexpr auto lastSafeLookDir = 0x3c;
		constexpr auto Shoulders = 0x48;
		constexpr auto AdditionalSpineBones = 0x50;
		constexpr auto FinishedLegWearables = 0x30;
		constexpr auto LegParts = 0x58;
		constexpr auto fakeSpineBones = 0x60;
		constexpr auto extraLeanBack = 0x68;
		constexpr auto drawState = 0x6c;
		constexpr auto timeInArmsMode = 0x70;
		constexpr auto speed = 0x38;
		constexpr auto acceleration = 0x3c;
		constexpr auto rotationYaw = 0x40;
		constexpr auto forward = 0x44;
		constexpr auto right = 0x48;
		constexpr auto up = 0x4c;
		constexpr auto ducked = 0x50;
		constexpr auto grounded = 0x54;
		constexpr auto crawling = 0x58;
		constexpr auto waterlevel = 0x5c;
		constexpr auto attack = 0x60;
		constexpr auto attack_alt = 0x64;
		constexpr auto deploy = 0x68;
		constexpr auto reload = 0x6c;
		constexpr auto throwWeapon = 0x70;
		constexpr auto holster = 0x74;
		constexpr auto aiming = 0x78;
		constexpr auto onLadder = 0x7c;
		constexpr auto posing = 0x80;
		constexpr auto poseType = 0x84;
		constexpr auto relaxGunPose = 0x88;
		constexpr auto vehicle_aim_yaw = 0x8c;
		constexpr auto vehicle_aim_speed = 0x90;
		constexpr auto onPhone = 0x94;
		constexpr auto usePoseTransition = 0x98;
		constexpr auto leftFootIK = 0x9c;
		constexpr auto rightFootIK = 0xa0;
		constexpr auto vehicleSteering = 0xa4;
		constexpr auto sitReaction = 0xa8;
		constexpr auto forwardReaction = 0xac;
		constexpr auto rightReaction = 0xb0;
		constexpr auto collision = 0x78;
		constexpr auto censorshipCube = 0x80;
		constexpr auto censorshipCubeBreasts = 0x88;
		constexpr auto jawBone = 0x90;
		constexpr auto neckBone = 0x98;
		constexpr auto headBone = 0xa0;
		constexpr auto eyeController = 0xa8;
		constexpr auto blinkController = 0xb0;
		constexpr auto SpineBones = 0xb8;
		constexpr auto leftFootBone = 0xc0;
		constexpr auto rightFootBone = 0xc8;
		constexpr auto leftHandPropBone = 0xd0;
		constexpr auto rightHandPropBone = 0xd8;
		constexpr auto rightHandTarget = 0xe0;
		constexpr auto leftHandTargetPosition = 0xec;
		constexpr auto leftHandTargetRotation = 0xf8;
		constexpr auto rightHandTargetPosition = 0x108;
		constexpr auto rightHandTargetRotation = 0x114;
		constexpr auto steeringTargetDegrees = 0x124;
		constexpr auto rightFootTargetPosition = 0x128;
		constexpr auto rightFootTargetRotation = 0x134;
		constexpr auto leftFootTargetPosition = 0x144;
		constexpr auto leftFootTargetRotation = 0x150;
		constexpr auto CinematicAnimationController = 0x160;
		constexpr auto DefaultAvatar = 0x168;
		constexpr auto CinematicAvatar = 0x170;
		constexpr auto DefaultHoldType = 0x178;
		constexpr auto SleepGesture = 0x180;
		constexpr auto CrawlToIncapacitatedGesture = 0x188;
		constexpr auto StandToIncapacitatedGesture = 0x190;
		constexpr auto CurrentGesture = 0x198;
		constexpr auto MaleSkin = 0x1a0;
		constexpr auto FemaleSkin = 0x1a8;
		constexpr auto subsurfaceProfile = 0x1b0;
		constexpr auto voiceVolume = 0x1b8;
		constexpr auto skinColor = 0x1bc;
		constexpr auto skinNumber = 0x1c0;
		constexpr auto meshNumber = 0x1c4;
		constexpr auto hairNumber = 0x1c8;
		constexpr auto skinType = 0x1cc;
		constexpr auto movementSounds = 0x1d0;
		constexpr auto showSash = 0x1d8;
		constexpr auto tempPoseType = 0x1dc;
		constexpr auto underwearSkin = 0x1e0;
		constexpr auto overrideSkinSeedk__BackingField = 0x1e8;
		constexpr auto AimAnglesk__BackingField = 0x1f0;
		constexpr auto LookAnglesk__BackingField = 0x200;
		constexpr auto modelState = 0x210;
		constexpr auto position = 0x218;
		constexpr auto velocity = 0x224;
		constexpr auto speedOverride = 0x230;
		constexpr auto newVelocity = 0x23c;
		constexpr auto rotation = 0x248;
		constexpr auto mountedRotation = 0x258;
		constexpr auto smoothLeftFootIK = 0x268;
		constexpr auto smoothRightFootIK = 0x274;
		constexpr auto drawShadowOnly = 0x280;
		constexpr auto isIncapacitated = 0x281;
		constexpr auto flinchLocation = 0x284;
		constexpr auto visible = 0x288;
		constexpr auto nameTag = 0x290;
		constexpr auto animatorNeedsWarmup = 0x298;
		constexpr auto isLocalPlayer = 0x299;
		constexpr auto aimSoundDef = 0x2a0;
		constexpr auto aimEndSoundDef = 0x2a8;
		constexpr auto InGesture = 0x2b0;
		constexpr auto CurrentGestureConfig = 0x2b8;
		constexpr auto InCinematic = 0x2c0;
		constexpr auto defaultAnimatorController = 0x2c8;
		constexpr auto _multiMesh = 0x2d0;
		constexpr auto _animator = 0x2d8;
		constexpr auto _lodGroup = 0x2e0;
		constexpr auto _currentGesture = 0x2e8;
		constexpr auto holdTypeLock = 0x2f0;
		constexpr auto wasMountedRightAim = 0x2f4;
		constexpr auto cachedMask = 0x2f8;
		constexpr auto cachedConstructionMask = 0x2fc;
		constexpr auto WorkshopHeldEntity = 0x300;
		constexpr auto wasCrawling = 0x308;
		constexpr auto mountedSpineLookWeight = 0x30c;
		constexpr auto mountedAnimSpeed = 0x310;
		constexpr auto preserveBones = 0x314;
		constexpr auto downLimitOverride = 0x318;
		constexpr auto IsNpck__BackingField = 0x320;
		constexpr auto timeSinceReactionStart = 0x324;
		constexpr auto timeSinceLeftFootTest = 0x328;
		constexpr auto cachedLeftFootPos = 0x32c;
		constexpr auto cachedLeftFootNormal = 0x338;
		constexpr auto timeSinceRightFootTest = 0x344;
		constexpr auto cachedRightFootPos = 0x348;
		constexpr auto cachedRightFootNormal = 0x354;

		constexpr auto SetMountedLookAtOverride = 0xcee900;
		constexpr auto SpineIk = 0xceed20;
		constexpr auto ParentArmsToCamera = 0xcecb40;
		constexpr auto OnAnimatorIK = 0xcec1b0;
		constexpr auto HandIK = 0xcea7c0;
		constexpr auto FootIK = 0xce6fd0;
		constexpr auto HeadIK = 0xceac20;
		constexpr auto get_ShouldDoLegs = 0xcf4610;
		constexpr auto get_ShouldShowHands = 0xcf4690;
		constexpr auto ClearLegs = 0xce5c70;
		constexpr auto RebuildLegs = 0xced4f0;
		constexpr auto InitializeLegSpineBones = 0xceb350;
		constexpr auto UpdateLegsBeforeRender = 0xcf0530;
		constexpr auto UpdateLegsDisable = 0xcf1420;
		constexpr auto AddLegRenderer = 0xce51a0;
		constexpr auto SwapLegBone = 0xcef710;
		constexpr auto GetFlat = 0xce9c30;
		constexpr auto RebuildAll = 0xced0f0;
		constexpr auto get_overrideSkinSeed = 0xcf4970;
		constexpr auto set_overrideSkinSeed = 0xcf49b0;
		constexpr auto get_IsFemale = 0xcf45c0;
		constexpr auto get_SkinSet = 0xcf4770;
		constexpr auto get_AimAngles = 0xcf4470;
		constexpr auto set_AimAngles = 0xcf4980;
		constexpr auto get_LookAngles = 0xcf4600;
		constexpr auto set_LookAngles = 0xcf49a0;
		constexpr auto get_GestureAllowsSpineMovement = 0xcf4520;
		constexpr auto get_GestureAllowsRootMotion = 0xcf4480;
		constexpr auto get_IsFirstPerson = 0xcf45d0;
		constexpr auto get_IsNpc = 0xcf45f0;
		constexpr auto set_IsNpc = 0xcf4990;
		constexpr auto get_multiMesh = 0xcf48d0;
		constexpr auto get_animator = 0xcf4790;
		constexpr auto get_lodGroup = 0xcf4830;
		constexpr auto GetTargetVelocity = 0xcea660;
		constexpr auto Awake = 0xce5bd0;
		constexpr auto OnEnable = 0xcec5d0;
		constexpr auto OnDisable = 0xcec2e0;
		constexpr auto SetDefaultAnimatorWeights = 0xcee210;
		constexpr auto UpdateMultiMesh = 0xcf1ac0;
		constexpr auto UpdateCensorship = 0xcefc50;
		constexpr auto UpdateCollider = 0xcf00d0;
		constexpr auto UpdateModelState = 0xcf1a70;
		constexpr auto UpdatePosition = 0xcf2530;
		constexpr auto UpdateRotation = 0xcf2650;
		constexpr auto UpdateLocalVelocity = 0xcf19a0;
		constexpr auto UpdateVelocity = 0xcf2fd0;
		constexpr auto UpdateParameters = 0xcf1c50;
		constexpr auto UpdateFrom = 0xcf0340;
		constexpr auto UpdateGlobalShaderConstants = 0xcf03a0;
		constexpr auto LateCycle = 0xcebb30;
		constexpr auto FrameUpdate = 0xce9240;
		constexpr auto FrameUpdate_Default = 0xce8860;
		constexpr auto FrameUpdate_Sleeping = 0xce8f70;
		constexpr auto FrameUpdate_Incapacitated = 0xce89d0;
		constexpr auto FrameUpdate_OnLadder = 0xce8ca0;
		constexpr auto GetAim360 = 0xce99c0;
		constexpr auto UpdateVehicleAim360 = 0xcf2ae0;
		constexpr auto ResetCurrentState = 0xcee0c0;
		constexpr auto DoAimingSounds = 0xce6770;
		constexpr auto SetAimSounds = 0xcee1d0;
		constexpr auto SetMountedLookAtWeight = 0xcee910;
		constexpr auto SetMountedAnimationSpeed = 0xcee8f0;
		constexpr auto UpdateLocalPlayerPosition = 0xcf1650;
		constexpr auto Attack = 0xce5b50;
		constexpr auto AltAttack = 0xce5810;
		constexpr auto Deploy = 0xce66c0;
		constexpr auto Reload = 0xcede40;
		constexpr auto Holster = 0xceb2d0;
		constexpr auto Flinch = 0xce6f70;
		constexpr auto SetReactionAnim = 0xcee920;
		constexpr auto OnReactionEnded = 0xcecb10;
		constexpr auto Throw = 0xcefa40;
		constexpr auto Gesture = 0xce9630;
		constexpr auto FadeInGestureUpperBodyLayer = 0xce69d0;
		constexpr auto FadeOutGestureUpperBodyLayer = 0xce6cc0;
		constexpr auto FadeInGestureFullBodyLayer = 0xce68b0;
		constexpr auto FadeOutGestureFullBodyLayer = 0xce6af0;
		constexpr auto AnimatorWarmup = 0xce58c0;
		constexpr auto AlwaysAnimate = 0xce5890;
		constexpr auto SetHoldType = 0xcee570;
		constexpr auto FadeOutGestureLayer = 0xce6c50;
		constexpr auto SetGesture = 0xcee320;
		constexpr auto FadeOutPlayerGestureLayers = 0xce6e20;
		constexpr auto StopGesture = 0xcef610;
		constexpr auto PlayCinematic = 0xcecf60;
		constexpr auto StopCinematic = 0xcef5b0;
		constexpr auto SetSpeedOverride = 0xceed00;
		constexpr auto GetReplacementUnderwear = 0xcea5a0;
		constexpr auto RemoveUnderwearParts = 0xcedf90;
		constexpr auto Clear = 0xce5dd0;
		constexpr auto Rebuild = 0xced8b0;
		constexpr auto AddPart = 0xce5530;
		constexpr auto RemovePart = 0xcedec0;
		constexpr auto HasPart = 0xceab60;
		constexpr auto IsBarefoot = 0xcebaa0;
		constexpr auto GetSkinColor = 0xcea5e0;
		constexpr auto SetSkinProperties = 0xceebe0;
		constexpr auto RefreshUnderwear = 0xcedab0;
		constexpr auto ForceModelSeed = 0xce8630;
		constexpr auto FindBone = 0xce6f40;
		constexpr auto GetBones = 0xce9c00;
		constexpr auto GetFootPlacement = 0xce9c70;
		constexpr auto ApplyVisibility = 0xce5920;
		constexpr auto ToggleUpdateOffscreen = 0xcefae0;
		constexpr auto OnParentDestroying = 0xceca10;
		constexpr auto WorkshopPreviewSetup = 0xcf33e0;
		constexpr auto ctor = 0xcf42c0;
		constexpr auto cctor = 0xcf3d80;
	};

	namespace ProtoBuf_PlayerTeam {
		constexpr auto ShouldPool = 0x10;
		constexpr auto _disposed = 0x11;
		constexpr auto teamID = 0x18;
		constexpr auto teamName = 0x20;
		constexpr auto teamLeader = 0x28;
		constexpr auto members = 0x30;
		constexpr auto teamLifetime = 0x38;
		constexpr auto mapNote = 0x40;

		constexpr auto ResetToPool = 0x20155a0;
		constexpr auto Dispose = 0x20151a0;
		constexpr auto EnterPool = 0x880f90;
		constexpr auto LeavePool = 0x880fc0;
		constexpr auto CopyTo = 0x20136b0;
		constexpr auto Copy = 0x20138f0;
		constexpr auto Deserialize = 0x20146a0;
		constexpr auto DeserializeLengthDelimited = 0x2013970;
		constexpr auto DeserializeLength = 0x2013e20;
		constexpr auto FromProto = 0x2015220;
		constexpr auto WriteToStream = 0x2016460;
		constexpr auto WriteToStreamDelta = 0x2016480;
		constexpr auto ReadFromStream = 0x2015580;
		constexpr auto SerializeDelta = 0x2015a50;
		constexpr auto Serialize = 0x2016070;
		constexpr auto ToProtoBytes = 0x2016450;
		constexpr auto ToProto = 0x2016460;
		constexpr auto SerializeToBytes = 0x2015f60;
		constexpr auto SerializeLengthDelimited = 0x2015eb0;
		constexpr auto ctor = 0x881850;
	};

	namespace PlayerInventory {
		constexpr auto containerMain = 0x20;
		constexpr auto containerBelt = 0x28;
		constexpr auto containerWear = 0x30;
		constexpr auto crafting = 0x38;
		constexpr auto loot = 0x40;

		constexpr auto OnRpcMessage = 0xabb170;
		constexpr auto Initialize = 0xabadf0;
		constexpr auto DoDestroy = 0xaba5d0;
		constexpr auto ClientInit = 0xaba540;
		constexpr auto UpdatedItemContainer = 0xabb5c0;
		constexpr auto FindItemUID = 0xabac10;
		constexpr auto FindItemID = 0xaba930;
		constexpr auto FindBySubEntityID = 0xaba6b0;
		constexpr auto FindItemIDs = 0xabab20;
		constexpr auto FindContainer = 0xaba780;
		constexpr auto GetContainer = 0xabad70;
		constexpr auto Load = 0xabb020;
		constexpr auto GetAmount = 0xabacf0;
		constexpr auto AllItems = 0xaba470;
		constexpr auto AllItemsNoAlloc = 0xaba3a0;
		constexpr auto FindAmmo = 0xaba660;
		constexpr auto HasAmmo = 0xabad90;
		constexpr auto ctor = 0xabb7b0;
	};

	namespace ItemContainer {
		constexpr auto flags = 0x10;
		constexpr auto allowedContents = 0x14;
		constexpr auto onlyAllowedItems = 0x18;
		constexpr auto availableSlots = 0x20;
		constexpr auto capacity = 0x28;
		constexpr auto uid = 0x2c;
		constexpr auto dirty = 0x30;
		constexpr auto itemList = 0x38;
		constexpr auto temperature = 0x40;
		constexpr auto parent = 0x48;
		constexpr auto playerOwner = 0x50;
		constexpr auto entityOwner = 0x58;
		constexpr auto isServer = 0x60;
		constexpr auto maxStackSize = 0x64;

		constexpr auto HasFlag = 0x8e3140;
		constexpr auto SetFlag = 0x8e41b0;
		constexpr auto IsLocked = 0x8e3310;
		constexpr auto PlayerItemInputBlocked = 0x8e3e00;
		constexpr auto get_HasLimitedAllowedItems = 0x8e44f0;
		constexpr auto OnChanged = 0x8e3d60;
		constexpr auto ClientInitialize = 0x8e22b0;
		constexpr auto FindItemByUID = 0x8e2850;
		constexpr auto IsFull = 0x8e32c0;
		constexpr auto IsEmpty = 0x8e3280;
		constexpr auto CanAccept = 0x8e21c0;
		constexpr auto GetMaxTransferAmount = 0x8e2df0;
		constexpr auto SetOnlyAllowedItem = 0x8e41d0;
		constexpr auto SetOnlyAllowedItems = 0x8e4290;
		constexpr auto Insert = 0x8e3150;
		constexpr auto SlotTaken = 0x8e4420;
		constexpr auto GetSlot = 0x8e2fa0;
		constexpr auto FindPosition = 0x8e2b30;
		constexpr auto Clear = 0x8e2210;
		constexpr auto Kill = 0x8e3320;
		constexpr auto GetAmount = 0x8e2c80;
		constexpr auto FindItemByItemID = 0x8e26e0;
		constexpr auto FindItemsByItemName = 0x8e29e0;
		constexpr auto FindBySubEntityID = 0x8e2480;
		constexpr auto FindItemsByItemID = 0x8e2930;
		constexpr auto Save = 0x8e3e10;
		constexpr auto Load = 0x8e35b0;
		constexpr auto GetOwnerPlayer = 0x4a3c60;
		constexpr auto FindAmmo = 0x8e23c0;
		constexpr auto HasAmmo = 0x8e3070;
		constexpr auto GetAmmoAmount = 0x8e2bc0;
		constexpr auto ContentsHash = 0x8e22f0;
		constexpr auto FindContainer = 0x8e25f0;
		constexpr auto CanAcceptItem = 0x8e1d50;
		constexpr auto ctor = 0x8e4440;
	};

	namespace Item {
		constexpr auto amountOverride = 0x10;
		constexpr auto DefaultArmourBreakEffectPath = 0x8;
		constexpr auto _condition = 0x18;
		constexpr auto _maxCondition = 0x1c;
		constexpr auto info = 0x20;
		constexpr auto uid = 0x28;
		constexpr auto dirty = 0x2c;
		constexpr auto amount = 0x30;
		constexpr auto position = 0x34;
		constexpr auto busyTime = 0x38;
		constexpr auto removeTime = 0x3c;
		constexpr auto fuel = 0x40;
		constexpr auto isServer = 0x44;
		constexpr auto instanceData = 0x48;
		constexpr auto skin = 0x50;
		constexpr auto name = 0x58;
		constexpr auto text = 0x60;
		constexpr auto OnDirty = 0x68;
		constexpr auto flags = 0x70;
		constexpr auto contents = 0x78;
		constexpr auto parent = 0x80;
		constexpr auto worldEnt = 0x88;
		constexpr auto heldEntity = 0x98;

		constexpr auto UpdateAmountDisplay = 0xa2d8f0;
		constexpr auto FormatAmount = 0xa2c670;
		constexpr auto set_condition = 0xa2e8d0;
		constexpr auto get_condition = 0x72cf00;
		constexpr auto set_maxCondition = 0xa2e950;
		constexpr auto get_maxCondition = 0x72ced0;
		constexpr auto get_maxConditionNormalized = 0xa2e680;
		constexpr auto get_conditionNormalized = 0xa2e210;
		constexpr auto set_conditionNormalized = 0xa2e830;
		constexpr auto get_hasCondition = 0xa2e310;
		constexpr auto get_isBroken = 0xa2e550;
		constexpr auto get_despawnMultiplier = 0xa2e250;
		constexpr auto get_blueprintTargetDef = 0xa2e1e0;
		constexpr auto get_blueprintTarget = 0xa2e200;
		constexpr auto set_blueprintTarget = 0xa2e7a0;
		constexpr auto get_blueprintAmount = 0xa2e1d0;
		constexpr auto set_blueprintAmount = 0xa2e790;
		constexpr auto IsBlueprint = 0xa2cab0;
		constexpr auto add_OnDirty = 0xa2e110;
		constexpr auto remove_OnDirty = 0xa2e6f0;
		constexpr auto HasFlag = 0xa2caa0;
		constexpr auto SetFlag = 0xa2d4c0;
		constexpr auto IsOn = 0xa2cce0;
		constexpr auto IsOnFire = 0xa2ccd0;
		constexpr auto IsCooking = 0xa2cc90;
		constexpr auto IsLocked = 0xa2cca0;
		constexpr auto get_parentItem = 0xa2e6b0;
		constexpr auto MarkDirty = 0xa2d020;
		constexpr auto OnChanged = 0xa2d180;
		constexpr auto CollectedForCrafting = 0x2f8560;
		constexpr auto ReturnedFromCancelledCraft = 0x2f8560;
		constexpr auto IsChildContainer = 0xa2cb00;
		constexpr auto IsBusy = 0xa2cad0;
		constexpr auto BusyFor = 0xa2c280;
		constexpr auto Remove = 0xa2d2b0;
		constexpr auto DoRemove = 0xa2c530;
		constexpr auto SwitchOnOff = 0xa2d5d0;
		constexpr auto LockUnlock = 0xa2cff0;
		constexpr auto get_temperature = 0xa2e6d0;
		constexpr auto GetOwnerPlayer = 0xa2c920;
		constexpr auto CanBeHeld = 0xa2c2b0;
		constexpr auto CanStack = 0xa2c2f0;
		constexpr auto IsValid = 0xa2ccf0;
		constexpr auto SetWorldEntity = 0xa2d4e0;
		constexpr auto OnMovedToWorld = 0xa2d220;
		constexpr auto GetWorldEntity = 0xa2c9d0;
		constexpr auto GetHeldEntity = 0xa2c900;
		constexpr auto BeltBarSelect = 0xa2c1e0;
		constexpr auto GetTotalUISlots = 0xa2c940;
		constexpr auto GetFilledUISlots = 0xa2c870;
		constexpr auto HasAmmo = 0xa2c9f0;
		constexpr auto FindAmmo = 0xa2c580;
		constexpr auto GetAmmoAmount = 0xa2c7d0;
		constexpr auto ToString = 0xa2d600;
		constexpr auto FindItem = 0xa2c650;
		constexpr auto MaxStackable = 0xa2d0f0;
		constexpr auto get_iconSprite = 0xa2e3b0;
		constexpr auto get_isLoadingIconSprite = 0xa2e580;
		constexpr auto get_Traits = 0xa2e1b0;
		constexpr auto Save = 0xa2d310;
		constexpr auto Load = 0xa2cd00;
		constexpr auto ctor = 0xa2e0f0;
		constexpr auto cctor = 0xa2e000;
		constexpr auto get_iconSpriteb__95_0 = 0xa2d8e0;
		constexpr auto get_isLoadingIconSpriteb__97_0 = 0xa2d8e0;
	};

	namespace Model {
		constexpr auto collision = 0x18;
		constexpr auto rootBone = 0x20;
		constexpr auto headBone = 0x28;
		constexpr auto eyeBone = 0x30;
		constexpr auto animator = 0x38;
		constexpr auto skeleton = 0x40;
		constexpr auto boneTransforms = 0x48;
		constexpr auto boneNames = 0x50;
		constexpr auto boneDict = 0x58;
		constexpr auto skin = 0x60;
		constexpr auto _lodGroup = 0x68;

		constexpr auto OnEnable = 0x72c460;
		constexpr auto BuildBoneDictionary = 0x72bbd0;
		constexpr auto GetSkin = 0x53dec0;
		constexpr auto FindBoneInternal = 0x72bcc0;
		constexpr auto FindBone = 0x72bd50;
		constexpr auto FindBoneID = 0x72bc80;
		constexpr auto GetBones = 0x72bf60;
		constexpr auto FindClosestBone = 0x72bdc0;
		constexpr auto get_lodGroup = 0x72cc50;
		constexpr auto OnDisable = 0x72c330;
		constexpr auto SyncBones = 0x72c830;
		constexpr auto Trigger = 0x72cba0;
		constexpr auto GetTransform = 0x72bf90;
		constexpr auto ApplyVisibility = 0x72ba40;
		constexpr auto PreProcess = 0x72c470;
		constexpr auto ctor = 0x2f71f0;
	};

	namespace MedicalTool {
		constexpr auto healDurationSelf = 0x280;
		constexpr auto healDurationOther = 0x284;
		constexpr auto healDurationOtherWounded = 0x288;
		constexpr auto maxDistanceOther = 0x28c;
		constexpr auto canUseOnOther = 0x290;
		constexpr auto canRevive = 0x291;
		constexpr auto useTarget = 0x298;
		constexpr auto resetTime = 0x2a0;

		constexpr auto OnRpcMessage = 0x780ad0;
		constexpr auto GetTarget = 0x780370;
		constexpr auto AnyPressed = 0x7802a0;
		constexpr auto OnInput = 0x780720;
		constexpr auto OnViewmodelEvent = 0x780ea0;
		constexpr auto Reset = 0x7810b0;
		constexpr auto OnDeploy = 0x7806c0;
		constexpr auto OnHolstered = 0x7806f0;
		constexpr auto ProcessSpectatorViewmodelEvent = 0x780ff0;
		constexpr auto ctor = 0x7810d0;
	};

	namespace HeldEntity {
		constexpr auto _punches = 0x168;
		constexpr auto punchAdded = 0x170;
		constexpr auto lastPunchTime = 0x17c;
		constexpr auto worldModelAnimator = 0x180;
		constexpr auto thirdPersonDeploySound = 0x188;
		constexpr auto thirdPersonAimSound = 0x190;
		constexpr auto thirdPersonAimEndSound = 0x198;
		constexpr auto viewModel = 0x1a0;
		constexpr auto isDeployed = 0x1a8;
		constexpr auto nextExamineTime = 0x1ac;
		constexpr auto handBone = 0x1b0;
		constexpr auto HoldAnimationOverride = 0x1b8;
		constexpr auto isBuildingTool = 0x1c0;
		constexpr auto hostileScore = 0x1c4;
		constexpr auto holsterInfo = 0x1c8;
		constexpr auto HeldCameraMode = 0x1d0;
		constexpr auto FirstPersonArmOffset = 0x1d4;
		constexpr auto FirstPersonArmRotation = 0x1e0;
		constexpr auto FirstPersonRotationStrength = 0x1ec;
		constexpr auto ownerItemUID = 0x1f0;

		constexpr auto OnRpcMessage = 0x5cbd80;
		constexpr auto AddPunch = 0x5cafe0;
		constexpr auto CL_Punch = 0x5cb0b0;
		constexpr auto DoRecoilCompensation = 0x2f8560;
		constexpr auto GetAddedPunch = 0x5cb3e0;
		constexpr auto SimPunches = 0x5cc570;
		constexpr auto ClientInit = 0x5cb160;
		constexpr auto GetFovOverride = 0x5cb400;
		constexpr auto DoNetworkDestroy = 0x5cb230;
		constexpr auto PostLateClientCycle = 0x2f8560;
		constexpr auto PostNetworkUpdate = 0x5cc230;
		constexpr auto UpdateHolsteredOffset = 0x5cca40;
		constexpr auto EditViewAngles = 0x2f8560;
		constexpr auto ClampPitch = 0x2f8560;
		constexpr auto OnFrame = 0x5cbbf0;
		constexpr auto OnInput = 0x2f8560;
		constexpr auto Examine = 0x5cb270;
		constexpr auto OnDeploy = 0x5cb930;
		constexpr auto OnDeployed = 0x5cbbe0;
		constexpr auto OnHolster = 0x5cbc10;
		constexpr auto OnHolstered = 0x5cbd70;
		constexpr auto OnViewmodelEvent = 0x2f8560;
		constexpr auto OnReliableEvent = 0x2f8560;
		constexpr auto ModifyCamera = 0x2f8560;
		constexpr auto ShouldDestroyImmediately = 0x49fb40;
		constexpr auto UpdatePlayerModel = 0x5cd240;
		constexpr auto ProcessPlayerModel = 0x2f8560;
		constexpr auto GetHoldAnimations = 0x5cb5f0;
		constexpr auto GetMovementMultiplier = 0x4ad3b0;
		constexpr auto OnSpawnedForWorkshopPreview = 0x2f8560;
		constexpr auto HeldEntityBlocksMovement = 0x4a2370;
		constexpr auto ProcessSpectatorViewmodel = 0x2f8560;
		constexpr auto ProcessSpectatorViewmodelEvent = 0x5cc4c0;
		constexpr auto get_hostile = 0x5cd3f0;
		constexpr auto LightsOn = 0x4ac070;
		constexpr auto IsDeployed = 0x5cb8c0;
		constexpr auto GetOwnerPlayer = 0x5cb800;
		constexpr auto GetOwnerConnection = 0x5cb610;
		constexpr auto CanBeUsedInWater = 0x4a2370;
		constexpr auto BlocksGestures = 0x4a2370;
		constexpr auto GetOwnerItem = 0x5cb720;
		constexpr auto GetItem = 0x5cb600;
		constexpr auto GetOwnerItemDefinition = 0x5cb6a0;
		constexpr auto IsInstrument = 0x4a2370;
		constexpr auto Load = 0x5cb8d0;
		constexpr auto ctor = 0x5cd300;
		constexpr auto cctor = 0x5cd2c0;
	};

	namespace UnityEngine_GUIContent {
		constexpr auto m_Text = 0x10;
		constexpr auto m_Image = 0x18;
		constexpr auto m_Tooltip = 0x20;
		constexpr auto s_Image = 0x8;
		constexpr auto s_TextImage = 0x10;
		constexpr auto none = 0x18;

		constexpr auto get_text = 0x18258b0;
		constexpr auto set_text = 0x4ccc10;
		constexpr auto set_image = 0x4d6640;
		constexpr auto get_tooltip = 0x1a2e080;
		constexpr auto set_tooltip = 0x4d6630;
		constexpr auto ctor = 0x1a2dff0;
		constexpr auto Temp = 0x1a2d8d0;
		constexpr auto ClearStaticCache = 0x1a2d770;
		constexpr auto cctor = 0x1a2dba0;
	};

	namespace BaseCombatEntity {
		constexpr auto __menuOption_Menu_Pickup = 0x168;
		constexpr auto skeletonProperties = 0x1c0;
		constexpr auto baseProtection = 0x1c8;
		constexpr auto startHealth = 0x1d0;
		constexpr auto pickup = 0x1d8;
		constexpr auto repair = 0x1f8;
		constexpr auto ShowHealthInfo = 0x220;
		constexpr auto lifestate = 0x224;
		constexpr auto sendsHitNotification = 0x228;
		constexpr auto sendsMeleeHitNotification = 0x229;
		constexpr auto markAttackerHostile = 0x22a;
		constexpr auto _health = 0x22c;
		constexpr auto _maxHealth = 0x230;
		constexpr auto faction = 0x234;
		constexpr auto deathTime = 0x238;
		constexpr auto lastNotifyFrame = 0x23c;

		constexpr auto GetMenuOptions = 0x7b3810;
		constexpr auto get_HasMenuOptions = 0x7b4950;
		constexpr auto OnRpcMessage = 0x7b3f00;
		constexpr auto HitNotify = 0x7b3b70;
		constexpr auto ClientInit = 0x7b3270;
		constexpr auto DisplayHealthInfo = 0x562180;
		constexpr auto GetEyeTransform = 0x7b36f0;
		constexpr auto OnLifeStateChanged = 0x7b3ed0;
		constexpr auto GetPickupCount = 0x7b3b50;
		constexpr auto CanPickup = 0x7b31d0;
		constexpr auto OnPickedUp = 0x2f8560;
		constexpr auto OnPickedUpPreItemMove = 0x2f8560;
		constexpr auto Menu_Pickup = 0x7b3da0;
		constexpr auto Menu_Pickup_TimeStart = 0x2f8560;
		constexpr auto Menu_Pickup_If = 0x7b3d80;
		constexpr auto BuildCost = 0x7b3100;
		constexpr auto IsDead = 0x7b3cc0;
		constexpr auto IsAlive = 0x7b3cb0;
		constexpr auto GetFaction = 0x7b3800;
		constexpr auto IsFriendly = 0x4a2370;
		constexpr auto get_SecondsSinceDeath = 0x7b4a10;
		constexpr auto get_healthFraction = 0x7b4a30;
		constexpr auto ResetState = 0x7b44e0;
		constexpr auto DestroyShared = 0x7b3350;
		constexpr auto GetThreatLevel = 0x4ad3c0;
		constexpr auto PenetrationResistance = 0x7b4450;
		constexpr auto ScaleDamage = 0x7b45e0;
		constexpr auto SkeletonLookup = 0x7b4720;
		constexpr auto Load = 0x7b3cd0;
		constexpr auto get_health = 0x7b3b60;
		constexpr auto set_health = 0x7b4a80;
		constexpr auto Health = 0x7b3b60;
		constexpr auto MaxHealth = 0x7b3d70;
		constexpr auto StartHealth = 0x5d9290;
		constexpr auto StartMaxHealth = 0x7b47d0;
		constexpr auto SetMaxHealth = 0x7b4690;
		constexpr auto DoHitNotify = 0x7b3370;
		constexpr auto OnAttacked = 0x7b3de0;
		constexpr auto ctor = 0x7b47f0;
	};

	namespace InputState {
		constexpr auto current = 0x10;
		constexpr auto previous = 0x18;
		constexpr auto SwallowedButtons = 0x20;

		constexpr auto IsDown = 0xa1d3a0;
		constexpr auto WasDown = 0xa1d470;
		constexpr auto IsAnyDown = 0xa1d370;
		constexpr auto WasJustPressed = 0xa1d490;
		constexpr auto WasJustReleased = 0xa1d4d0;
		constexpr auto SwallowButton = 0xa1d460;
		constexpr auto AimAngle = 0xa1d130;
		constexpr auto MouseDelta = 0xa1d3d0;
		constexpr auto Flip = 0xa1d2a0;
		constexpr auto Clear = 0xa1d1f0;
		constexpr auto ctor = 0xa1d510;
	};

	namespace InputMessage {
		constexpr auto ShouldPool = 0x10;
		constexpr auto _disposed = 0x11;
		constexpr auto buttons = 0x14;
		constexpr auto aimAngles = 0x18;
		constexpr auto mouseDelta = 0x24;

		constexpr auto ResetToPool = 0x1ff6670;
		constexpr auto Dispose = 0x1ff6370;
		constexpr auto EnterPool = 0x880f90;
		constexpr auto LeavePool = 0x880fc0;
		constexpr auto CopyTo = 0x1ff53d0;
		constexpr auto Copy = 0x1ff5410;
		constexpr auto Deserialize = 0x1ff5aa0;
		constexpr auto DeserializeLengthDelimited = 0x1ff5730;
		constexpr auto DeserializeLength = 0x1ff57b0;
		constexpr auto FromProto = 0x1ff63f0;
		constexpr auto WriteToStream = 0x1ff6f40;
		constexpr auto WriteToStreamDelta = 0x1ff6f60;
		constexpr auto ReadFromStream = 0x1ff65b0;
		constexpr auto SerializeDelta = 0x1ff6710;
		constexpr auto Serialize = 0x1ff6cd0;
		constexpr auto ToProtoBytes = 0x1ff6f30;
		constexpr auto ToProto = 0x1ff6f40;
		constexpr auto SerializeToBytes = 0x1ff6bc0;
		constexpr auto SerializeLengthDelimited = 0x1ff6b10;
		constexpr auto ctor = 0x881850;
	};

	namespace BaseMountable {
		constexpr auto __menuOption_Menu_Mount = 0x240;
		constexpr auto eyePositionOverride = 0x298;
		constexpr auto eyeCenterOverride = 0x2a0;
		constexpr auto pitchClamp = 0x2a8;
		constexpr auto yawClamp = 0x2b0;
		constexpr auto canWieldItems = 0x2b8;
		constexpr auto relativeViewAngles = 0x2b9;
		constexpr auto mountAnchor = 0x2c0;
		constexpr auto mountPose = 0x2c8;
		constexpr auto maxMountDistance = 0x2cc;
		constexpr auto dismountPositions = 0x2d0;
		constexpr auto checkPlayerLosOnMount = 0x2d8;
		constexpr auto disableMeshCullingForPlayers = 0x2d9;
		constexpr auto allowHeadLook = 0x2da;
		constexpr auto modifiesPlayerCollider = 0x2db;
		constexpr auto customPlayerCollider = 0x2dc;
		constexpr auto mountSoundDef = 0x2f0;
		constexpr auto swapSoundDef = 0x2f8;
		constexpr auto dismountSoundDef = 0x300;
		constexpr auto mountTimeStatType = 0x308;
		constexpr auto allowedGestures = 0x30c;
		constexpr auto canDrinkWhileMounted = 0x310;
		constexpr auto allowSleeperMounting = 0x311;
		constexpr auto animateClothInLocalSpace = 0x312;
		constexpr auto MountedCameraMode = 0x314;
		constexpr auto isMobile = 0x318;
		constexpr auto SideLeanAmount = 0x31c;

		constexpr auto GetMenuOptions = 0xa40dc0;
		constexpr auto get_HasMenuOptions = 0xa42e40;
		constexpr auto OnRpcMessage = 0xa41bb0;
		constexpr auto CanHoldItems = 0xa401c0;
		constexpr auto GetMountedCameraMode = 0xa41120;
		constexpr auto DirectlyMountable = 0x49fb40;
		constexpr auto GetEyeOverride = 0xa40d30;
		constexpr auto GetMountedBodyAngles = 0xa410d0;
		constexpr auto ModifiesThirdPersonCamera = 0x4a2370;
		constexpr auto GetPitchClamp = 0x5498d0;
		constexpr auto GetYawClamp = 0x5498f0;
		constexpr auto IsMounted = 0xa41380;
		constexpr auto EyePositionForPlayer = 0xa409c0;
		constexpr auto EyeCenterForPlayer = 0xa408c0;
		constexpr auto WaterFactorForPlayer = 0xa42ce0;
		constexpr auto MaxVelocity = 0xa414c0;
		constexpr auto PlayerIsMounted = 0xa421b0;
		constexpr auto OnClientInput = 0x2f8560;
		constexpr auto ForceUpdatePlayerModel = 0x4a2370;
		constexpr auto UpdatePlayerModel = 0xa426f0;
		constexpr auto ProcessPlayerModel = 0x2f8560;
		constexpr auto SuppressHandsAnimationLayer = 0x4a2370;
		constexpr auto GetAnimationOverride = 0x4b1e70;
		constexpr auto GetSpineLookAtWeight = 0x4ad3b0;
		constexpr auto GetMountedAnimationSpeed = 0x4ad3c0;
		constexpr auto get_DisableLegsMeshAtExtremeViewAnglesInFirstPersonWithEyes = 0x49fb40;
		constexpr auto get_FirstPersonWithArmsEyesLerp = 0x74cd00;
		constexpr auto ModifyThirdPersonEyeOffset = 0xa41680;
		constexpr auto LockThirdPersonOffset = 0xa41450;
		constexpr auto LocalPlayerIsMounted = 0xa41390;
		constexpr auto VehicleParent = 0xa42c50;
		constexpr auto get_IsSummerDlcVehicle = 0x4a2370;
		constexpr auto IsInstrument = 0x4a2370;
		constexpr auto UpdatePlayerRotation = 0xa42ba0;
		constexpr auto SetNetworkPosition = 0xa426c0;
		constexpr auto UpdatePlayerPosition = 0xa42a30;
		constexpr auto GetMountedRotation = 0xa411f0;
		constexpr auto GetMountedPosition = 0xa41130;
		constexpr auto PlayerMounted = 0xa42290;
		constexpr auto PlayerDismounted = 0xa41cd0;
		constexpr auto ClientOnPlayerDismounted = 0xa401d0;
		constexpr auto ClientOnPlayerMounted = 0xa40270;
		constexpr auto OverrideViewAngles = 0xa41ca0;
		constexpr auto DoPlayerMovement = 0xa40450;
		constexpr auto HoldToDismount = 0xa41300;
		constexpr auto ClientRequestDismount = 0xa40340;
		constexpr auto Menu_Mount = 0xa41610;
		constexpr auto Menu_Mount_ShowIf = 0xa41570;
		constexpr auto MountMenuVisible = 0xa416a0;
		constexpr auto NearMountPoint = 0xa41730;
		constexpr auto ConvertVector = 0xa40380;
		constexpr auto get_BlocksDoors = 0x49fb40;
		constexpr auto ctor = 0xa42d90;
		constexpr auto DoPlayerMovementb__77_0 = 0xa40340;
	};

	namespace TOD_Sky {
		constexpr auto ColorSpace = 0x18;
		constexpr auto ColorRange = 0x1c;
		constexpr auto ColorOutput = 0x20;
		constexpr auto SkyQuality = 0x24;
		constexpr auto CloudQuality = 0x28;
		constexpr auto MeshQuality = 0x2c;
		constexpr auto StarQuality = 0x30;
		constexpr auto Cycle = 0x38;
		constexpr auto World = 0x40;
		constexpr auto Atmosphere = 0x48;
		constexpr auto Day = 0x50;
		constexpr auto Night = 0x58;
		constexpr auto Sun = 0x60;
		constexpr auto Moon = 0x68;
		constexpr auto Stars = 0x70;
		constexpr auto Clouds = 0x78;
		constexpr auto Light = 0x80;
		constexpr auto Fog = 0x88;
		constexpr auto Ambient = 0x90;
		constexpr auto Reflection = 0x98;
		constexpr auto Initializedk__BackingField = 0xa0;
		constexpr auto Componentsk__BackingField = 0xa8;
		constexpr auto Resourcesk__BackingField = 0xb0;
		constexpr auto IsDayk__BackingField = 0xb8;
		constexpr auto IsNightk__BackingField = 0xb9;
		constexpr auto LerpValuek__BackingField = 0xbc;
		constexpr auto SunZenithk__BackingField = 0xc0;
		constexpr auto SunAltitudek__BackingField = 0xc4;
		constexpr auto SunAzimuthk__BackingField = 0xc8;
		constexpr auto MoonZenithk__BackingField = 0xcc;
		constexpr auto MoonAltitudek__BackingField = 0xd0;
		constexpr auto MoonAzimuthk__BackingField = 0xd4;
		constexpr auto SunsetTimek__BackingField = 0xd8;
		constexpr auto SunriseTimek__BackingField = 0xdc;
		constexpr auto LocalSiderealTimek__BackingField = 0xe0;
		constexpr auto SunVisibilityk__BackingField = 0xe4;
		constexpr auto MoonVisibilityk__BackingField = 0xe8;
		constexpr auto SunDirectionk__BackingField = 0xec;
		constexpr auto MoonDirectionk__BackingField = 0xf8;
		constexpr auto LightDirectionk__BackingField = 0x104;
		constexpr auto LocalSunDirectionk__BackingField = 0x110;
		constexpr auto LocalMoonDirectionk__BackingField = 0x11c;
		constexpr auto LocalLightDirectionk__BackingField = 0x128;
		constexpr auto SunLightColork__BackingField = 0x134;
		constexpr auto MoonLightColork__BackingField = 0x144;
		constexpr auto SunRayColork__BackingField = 0x154;
		constexpr auto MoonRayColork__BackingField = 0x164;
		constexpr auto SunSkyColork__BackingField = 0x174;
		constexpr auto MoonSkyColork__BackingField = 0x184;
		constexpr auto SunMeshColork__BackingField = 0x194;
		constexpr auto MoonMeshColork__BackingField = 0x1a4;
		constexpr auto SunCloudColork__BackingField = 0x1b4;
		constexpr auto MoonCloudColork__BackingField = 0x1c4;
		constexpr auto FogColork__BackingField = 0x1d4;
		constexpr auto GroundColork__BackingField = 0x1e4;
		constexpr auto AmbientColork__BackingField = 0x1f4;
		constexpr auto MoonHaloColork__BackingField = 0x204;
		constexpr auto ReflectionCur = 0x218;
		constexpr auto ReflectionSrc = 0x220;
		constexpr auto ReflectionDst = 0x228;
		constexpr auto ReflectionResolution = 0x8;
		constexpr auto ReflectionUpdateInterval = 0xc;
		constexpr auto ReflectionTimeSlicing = 0x10;
		constexpr auto timeSinceLightUpdate = 0x230;
		constexpr auto timeSinceAmbientUpdate = 0x234;
		constexpr auto timeSinceReflectionUpdate = 0x238;
		constexpr auto kBetaMie = 0x23c;
		constexpr auto kSun = 0x248;
		constexpr auto k4PI = 0x258;
		constexpr auto kRadius = 0x268;
		constexpr auto kScale = 0x278;

		constexpr auto get_Instances = 0x12dfbb0;
		constexpr auto get_Instance = 0x12dfae0;
		constexpr auto get_Initialized = 0xcc6950;
		constexpr auto set_Initialized = 0xcc6960;
		constexpr auto get_Headless = 0x12dfac0;
		constexpr auto get_Components = 0x4db6b0;
		constexpr auto set_Components = 0xc69f40;
		constexpr auto get_Resources = 0xa43390;
		constexpr auto set_Resources = 0xa43430;
		constexpr auto get_IsDay = 0x12dfc10;
		constexpr auto set_IsDay = 0x12dffe0;
		constexpr auto get_IsNight = 0x12dfc20;
		constexpr auto set_IsNight = 0x12dfff0;
		constexpr auto get_Radius = 0x12dfec0;
		constexpr auto get_Diameter = 0x12dfa60;
		constexpr auto get_LerpValue = 0x910220;
		constexpr auto set_LerpValue = 0x9103f0;
		constexpr auto get_SunZenith = 0x12dff80;
		constexpr auto set_SunZenith = 0x12e01e0;
		constexpr auto get_SunAltitude = 0x12dff00;
		constexpr auto set_SunAltitude = 0x12e0140;
		constexpr auto get_SunAzimuth = 0x12dff10;
		constexpr auto set_SunAzimuth = 0x12e0150;
		constexpr auto get_MoonZenith = 0x12dfe50;
		constexpr auto set_MoonZenith = 0x12e0130;
		constexpr auto get_MoonAltitude = 0x12dfdb0;
		constexpr auto set_MoonAltitude = 0x12e0080;
		constexpr auto get_MoonAzimuth = 0x12dfdc0;
		constexpr auto set_MoonAzimuth = 0x12e0090;
		constexpr auto get_SunsetTime = 0x12dffa0;
		constexpr auto set_SunsetTime = 0x12e0200;
		constexpr auto get_SunriseTime = 0x12dff90;
		constexpr auto set_SunriseTime = 0x12e01f0;
		constexpr auto get_LocalSiderealTime = 0x112dbe0;
		constexpr auto set_LocalSiderealTime = 0x112e3e0;
		constexpr auto get_LightZenith = 0x12dfcd0;
		constexpr auto get_LightIntensity = 0x12dfca0;
		constexpr auto get_SunVisibility = 0x12dff70;
		constexpr auto set_SunVisibility = 0x12e01d0;
		constexpr auto get_MoonVisibility = 0x112da30;
		constexpr auto set_MoonVisibility = 0x12e0120;
		constexpr auto get_SunDirection = 0x12dff20;
		constexpr auto set_SunDirection = 0x12e0170;
		constexpr auto get_MoonDirection = 0x12dfde0;
		constexpr auto set_MoonDirection = 0x12e00b0;
		constexpr auto get_LightDirection = 0x12dfc80;
		constexpr auto set_LightDirection = 0x12e0000;
		constexpr auto get_LocalSunDirection = 0x12dfd90;
		constexpr auto set_LocalSunDirection = 0x12e0060;
		constexpr auto get_LocalMoonDirection = 0x12dfd70;
		constexpr auto set_LocalMoonDirection = 0x12e0040;
		constexpr auto get_LocalLightDirection = 0x12dfd50;
		constexpr auto set_LocalLightDirection = 0x12e0020;
		constexpr auto get_SunLightColor = 0x12dff40;
		constexpr auto set_SunLightColor = 0x12e0190;
		constexpr auto get_MoonLightColor = 0x12dfe10;
		constexpr auto set_MoonLightColor = 0x12e00e0;
		constexpr auto get_LightColor = 0x12dfc30;
		constexpr auto get_SunRayColor = 0x12dff60;
		constexpr auto set_SunRayColor = 0x12e01b0;
		constexpr auto get_MoonRayColor = 0x12dfe30;
		constexpr auto set_MoonRayColor = 0x12e0100;
		constexpr auto get_SunSkyColor = 0xea1ad0;
		constexpr auto set_SunSkyColor = 0x12e01c0;
		constexpr auto get_MoonSkyColor = 0x12dfe40;
		constexpr auto set_MoonSkyColor = 0x12e0110;
		constexpr auto get_SunMeshColor = 0x12dff50;
		constexpr auto set_SunMeshColor = 0x12e01a0;
		constexpr auto get_MoonMeshColor = 0x12dfe20;
		constexpr auto set_MoonMeshColor = 0x12e00f0;
		constexpr auto get_SunCloudColor = 0xc79620;
		constexpr auto set_SunCloudColor = 0x12e0160;
		constexpr auto get_MoonCloudColor = 0x12dfdd0;
		constexpr auto set_MoonCloudColor = 0x12e00a0;
		constexpr auto get_FogColor = 0x12dfaa0;
		constexpr auto set_FogColor = 0x12dffc0;
		constexpr auto get_GroundColor = 0x12dfab0;
		constexpr auto set_GroundColor = 0x12dffd0;
		constexpr auto get_AmbientColor = 0x12dfa50;
		constexpr auto set_AmbientColor = 0x12dffb0;
		constexpr auto get_MoonHaloColor = 0x12dfe00;
		constexpr auto set_MoonHaloColor = 0x12e00d0;
		constexpr auto get_Probe = 0x12dfea0;
		constexpr auto get_ProbeInstance = 0x12dfe80;
		constexpr auto get_ProbeEx = 0x12dfe60;
		constexpr auto OrbitalToUnity = 0x12d7c80;
		constexpr auto OrbitalToLocal = 0x12d7bc0;
		constexpr auto SampleAtmosphere = 0x12d93a0;
		constexpr auto RenderToSphericalHarmonics = 0x12d9240;
		constexpr auto RenderToCubemap = 0x12d7d90;
		constexpr auto RenderToProbe = 0x12d7ed0;
		constexpr auto ReflectionIsUpdating = 0x12d7d50;
		constexpr auto UpdateProbeBlending = 0x12dd8a0;
		constexpr auto UpdateProbeProperties = 0x12dd990;
		constexpr auto SampleFogColor = 0x12d9720;
		constexpr auto SampleSkyColor = 0x12d99d0;
		constexpr auto SampleEquatorColor = 0x12d9660;
		constexpr auto UpdateFog = 0x12dd820;
		constexpr auto UpdateAmbient = 0x12daef0;
		constexpr auto UpdateReflection = 0x12de280;
		constexpr auto DelayReflectionUpdate = 0x12d7520;
		constexpr auto LoadParameters = 0x12d7910;
		constexpr auto SaveParameters = 0x12d9ae0;
		constexpr auto UpdateQualitySettings = 0x12ddc70;
		constexpr auto UpdateRenderSettings = 0x12de380;
		constexpr auto UpdateShaderKeywords = 0x12de920;
		constexpr auto UpdateShaderProperties = 0x12deb20;
		constexpr auto ShaderScale = 0x12da050;
		constexpr auto ShaderMiePhase = 0x12d9d30;
		constexpr auto ShaderRayleighPhase = 0x12da030;
		constexpr auto ShaderNightSkyColor = 0x12d9f40;
		constexpr auto ShaderMoonHaloColor = 0x12d9e00;
		constexpr auto TOD_HDR2LDR = 0x12daca0;
		constexpr auto TOD_GAMMA2LINEAR = 0x12dac40;
		constexpr auto TOD_LINEAR2GAMMA = 0x12dae20;
		constexpr auto ShaderScatteringColor = 0x12da100;
		constexpr auto Initialize = 0x12d7530;
		constexpr auto Cleanup = 0x12d7370;
		constexpr auto OnEnable = 0x12d7b70;
		constexpr auto OnDisable = 0x12d7b60;
		constexpr auto LateUpdate = 0x12d7630;
		constexpr auto OnValidate = 0x12d7b80;
		constexpr auto UpdateScattering = 0x12de770;
		constexpr auto UpdateCelestials = 0x12db660;
		constexpr auto ctor = 0x12df940;
		constexpr auto cctor = 0x12df8a0;
	};

	namespace UnityEngine_Random {

		constexpr auto InitState = 0x18e9040;
		constexpr auto get_state = 0x18e9310;
		constexpr auto set_state = 0x18e93c0;
		constexpr auto Range = 0x18e90c0;
		constexpr auto RandomRangeInt = 0x18e9080;
		constexpr auto get_value = 0x18e9350;
		constexpr auto get_insideUnitSphere = 0x18e9190;
		constexpr auto GetRandomUnitCircle = 0x18e9000;
		constexpr auto get_insideUnitCircle = 0x18e9110;
		constexpr auto get_onUnitSphere = 0x18e9210;
		constexpr auto get_rotation = 0x18e9290;
		constexpr auto RandomRange = 0x18e9080;
		constexpr auto ColorHSV = 0x18e8e40;
		constexpr auto get_state_Injected = 0x18e92d0;
		constexpr auto set_state_Injected = 0x18e9380;
		constexpr auto get_insideUnitSphere_Injected = 0x18e9150;
		constexpr auto get_onUnitSphere_Injected = 0x18e91d0;
		constexpr auto get_rotation_Injected = 0x18e9250;
	};

	namespace UnityEngine_PhysicsScene {
		constexpr auto m_Handle = 0x10;

		constexpr auto ToString = 0x237170;
		constexpr auto GetHashCode = 0x143b30;
		constexpr auto Equals = 0x236c30;
		constexpr auto Raycast = 0x236f00;
		constexpr auto Internal_RaycastTest = 0x2253e40;
		constexpr auto Internal_Raycast = 0x2253f20;
		constexpr auto Internal_RaycastNonAlloc = 0x2253d60;
		constexpr auto Query_CapsuleCast = 0x2254650;
		constexpr auto Internal_CapsuleCast = 0x2253b40;
		constexpr auto CapsuleCast = 0x236b80;
		constexpr auto Internal_CapsuleCastNonAlloc = 0x2253aa0;
		constexpr auto OverlapCapsuleNonAlloc_Internal = 0x2254370;
		constexpr auto OverlapCapsule = 0x236d60;
		constexpr auto Query_SphereCast = 0x2254760;
		constexpr auto Internal_SphereCast = 0x2254090;
		constexpr auto SphereCast = 0x236ff0;
		constexpr auto Internal_SphereCastNonAlloc = 0x2254000;
		constexpr auto OverlapSphereNonAlloc_Internal = 0x2254460;
		constexpr auto OverlapSphere = 0x236e00;
		constexpr auto Query_BoxCast = 0x2254540;
		constexpr auto Internal_BoxCast = 0x2253870;
		constexpr auto BoxCast = 0x236990;
		constexpr auto OverlapBoxNonAlloc_Internal = 0x2254280;
		constexpr auto OverlapBox = 0x236cb0;
		constexpr auto Internal_RaycastTest_Injected = 0x2253dd0;
		constexpr auto Internal_Raycast_Injected = 0x2253eb0;
		constexpr auto Internal_RaycastNonAlloc_Injected = 0x2253cf0;
		constexpr auto Query_CapsuleCast_Injected = 0x22545e0;
		constexpr auto Internal_CapsuleCastNonAlloc_Injected = 0x2253a30;
		constexpr auto OverlapCapsuleNonAlloc_Internal_Injected = 0x2254300;
		constexpr auto Query_SphereCast_Injected = 0x22546f0;
		constexpr auto Internal_SphereCastNonAlloc_Injected = 0x2253f90;
		constexpr auto OverlapSphereNonAlloc_Internal_Injected = 0x22543f0;
		constexpr auto Query_BoxCast_Injected = 0x22544d0;
		constexpr auto OverlapBoxNonAlloc_Internal_Injected = 0x2254210;
	};

	namespace UnityEngine_GameObjectEx {

		constexpr auto ToBaseEntity = 0x8d58b0;
		constexpr auto IsOnLayer = 0x8d5760;
		constexpr auto GetEntityFromRegistry = 0x8d5630;
		constexpr auto GetEntityFromComponent = 0x8d5530;
		constexpr auto SetHierarchyGroup = 0x8d57f0;
	};

	namespace BaseHelicopter {
		constexpr auto weakspots = 0x240;
		constexpr auto rotorPivot = 0x248;
		constexpr auto mainRotor = 0x250;
		constexpr auto mainRotor_blades = 0x258;
		constexpr auto mainRotor_blur = 0x260;
		constexpr auto tailRotor = 0x268;
		constexpr auto tailRotor_blades = 0x270;
		constexpr auto tailRotor_blur = 0x278;
		constexpr auto rocket_tube_left = 0x280;
		constexpr auto rocket_tube_right = 0x288;
		constexpr auto left_gun_yaw = 0x290;
		constexpr auto left_gun_pitch = 0x298;
		constexpr auto left_gun_muzzle = 0x2a0;
		constexpr auto right_gun_yaw = 0x2a8;
		constexpr auto right_gun_pitch = 0x2b0;
		constexpr auto right_gun_muzzle = 0x2b8;
		constexpr auto spotlight_rotation = 0x2c0;
		constexpr auto rocket_fire_effect = 0x2c8;
		constexpr auto gun_fire_effect = 0x2d0;
		constexpr auto bulletEffect = 0x2d8;
		constexpr auto explosionEffect = 0x2e0;
		constexpr auto fireBall = 0x2e8;
		constexpr auto crateToDrop = 0x2f0;
		constexpr auto maxCratesToSpawn = 0x2f8;
		constexpr auto bulletSpeed = 0x2fc;
		constexpr auto bulletDamage = 0x300;
		constexpr auto servergibs = 0x308;
		constexpr auto debrisFieldMarker = 0x310;
		constexpr auto rotorWashSoundDef = 0x318;
		constexpr auto _rotorWashSound = 0x320;
		constexpr auto flightEngineSoundDef = 0x328;
		constexpr auto flightThwopsSoundDef = 0x330;
		constexpr auto flightEngineSound = 0x338;
		constexpr auto flightThwopsSound = 0x340;
		constexpr auto flightEngineGainMod = 0x348;
		constexpr auto flightThwopsGainMod = 0x350;
		constexpr auto rotorGainModSmoothing = 0x358;
		constexpr auto engineGainMin = 0x35c;
		constexpr auto engineGainMax = 0x360;
		constexpr auto thwopGainMin = 0x364;
		constexpr auto thwopGainMax = 0x368;
		constexpr auto spotlightJitterAmount = 0x36c;
		constexpr auto spotlightJitterSpeed = 0x370;
		constexpr auto nightLights = 0x378;
		constexpr auto spotlightTarget = 0x380;
		constexpr auto engineSpeed = 0x38c;
		constexpr auto targetEngineSpeed = 0x390;
		constexpr auto blur_rotationScale = 0x394;
		constexpr auto _rotorWashParticles = 0x398;
		constexpr auto myAI = 0x3a0;
		constexpr auto mapMarkerEntityPrefab = 0x3a8;
		constexpr auto client_rotorPivotIdeal = 0x3b0;
		constexpr auto nightLightsOn = 0x3c0;

		constexpr auto OnRpcMessage = 0xa36b20;
		constexpr auto InitalizeWeakspots = 0xa36580;
		constexpr auto MaxVelocity = 0x75b060;
		constexpr auto InitShared = 0xa364f0;
		constexpr auto Load = 0xa36860;
		constexpr auto ClientInit = 0xa35f10;
		constexpr auto InitializeClientsideEffects = 0xa36600;
		constexpr auto DoClientDestroy = 0xa35f30;
		constexpr auto SetLights = 0xa36f70;
		constexpr auto Update = 0xa379e0;
		constexpr auto UpdateEffects = 0xa37090;
		constexpr auto UpdateRotorWashPosition = 0xa378a0;
		constexpr auto ToggleRotorWash = 0xa37010;
		constexpr auto UpdateRotorVisibility = 0xa37810;
		constexpr auto FireGun = 0xa36010;
		constexpr auto ctor = 0xa38140;
	};

	namespace HitInfo {
		constexpr auto Initiator = 0x10;
		constexpr auto WeaponPrefab = 0x18;
		constexpr auto Weapon = 0x20;
		constexpr auto DoHitEffects = 0x28;
		constexpr auto DoDecals = 0x29;
		constexpr auto IsPredicting = 0x2a;
		constexpr auto UseProtection = 0x2b;
		constexpr auto Predicted = 0x30;
		constexpr auto DidHit = 0x38;
		constexpr auto HitEntity = 0x40;
		constexpr auto HitBone = 0x48;
		constexpr auto HitPart = 0x4c;
		constexpr auto HitMaterial = 0x50;
		constexpr auto HitPositionWorld = 0x54;
		constexpr auto HitPositionLocal = 0x60;
		constexpr auto HitNormalWorld = 0x6c;
		constexpr auto HitNormalLocal = 0x78;
		constexpr auto PointStart = 0x84;
		constexpr auto PointEnd = 0x90;
		constexpr auto ProjectileID = 0x9c;
		constexpr auto ProjectileHits = 0xa0;
		constexpr auto ProjectileDistance = 0xa4;
		constexpr auto ProjectileIntegrity = 0xa8;
		constexpr auto ProjectileTravelTime = 0xac;
		constexpr auto ProjectileTrajectoryMismatch = 0xb0;
		constexpr auto ProjectileVelocity = 0xb4;
		constexpr auto ProjectilePrefab = 0xc0;
		constexpr auto material = 0xc8;
		constexpr auto damageProperties = 0xd0;
		constexpr auto damageTypes = 0xd8;
		constexpr auto CanGather = 0xe0;
		constexpr auto DidGather = 0xe1;
		constexpr auto gatherScale = 0xe4;

		constexpr auto IsProjectile = 0x5cfa60;
		constexpr auto get_InitiatorPlayer = 0x5d02b0;
		constexpr auto get_attackNormal = 0x5d0340;
		constexpr auto get_hasDamage = 0x5d0840;
		constexpr auto ctor = 0x5d00d0;
		constexpr auto LoadFromAttack = 0x5cfa70;
		constexpr auto get_isHeadshot = 0x5d0870;
		constexpr auto get_bonePhrase = 0x5d06e0;
		constexpr auto get_boneName = 0x5d0550;
		constexpr auto get_boneArea = 0x5d0440;
		constexpr auto PositionOnRay = 0x5cfc70;
		constexpr auto HitPositionOnRay = 0x5cf830;
		constexpr auto IsNaNOrInfinity = 0x5cf880;
	};

	namespace System_Number {

		constexpr auto NumberBufferToDecimal = 0x1654070;
		constexpr auto NumberBufferToDouble = 0x1654080;
		constexpr auto FormatDecimal = 0x1653590;
		constexpr auto FormatDouble = 0x16536b0;
		constexpr auto FormatInt32 = 0x1653730;
		constexpr auto FormatUInt32 = 0x1653a90;
		constexpr auto FormatInt64 = 0x16538a0;
		constexpr auto FormatUInt64 = 0x1653bf0;
		constexpr auto FormatSingle = 0x1653a10;
		constexpr auto HexNumberToInt32 = 0x1653d50;
		constexpr auto HexNumberToInt64 = 0x1653dd0;
		constexpr auto HexNumberToUInt32 = 0x1653e90;
		constexpr auto HexNumberToUInt64 = 0x1653f10;
		constexpr auto IsWhite = 0x1653fa0;
		constexpr auto NumberToInt32 = 0x1654090;
		constexpr auto NumberToInt64 = 0x16540f0;
		constexpr auto NumberToUInt32 = 0x1654170;
		constexpr auto NumberToUInt64 = 0x16541d0;
		constexpr auto MatchChars = 0x1654000;
		constexpr auto ParseDecimal = 0x1654240;
		constexpr auto ParseDouble = 0x16543b0;
		constexpr auto ParseInt32 = 0x1654660;
		constexpr auto ParseInt64 = 0x16548b0;
		constexpr auto ParseNumber = 0x1654b20;
		constexpr auto ParseSingle = 0x1655610;
		constexpr auto ParseUInt32 = 0x1655930;
		constexpr auto ParseUInt64 = 0x1655b70;
		constexpr auto StringToNumber = 0x1655dd0;
		constexpr auto TrailingZeros = 0x1655f10;
		constexpr auto TryParseDecimal = 0x1655f70;
		constexpr auto TryParseDouble = 0x16560f0;
		constexpr auto TryParseInt32 = 0x1656270;
		constexpr auto TryParseInt64 = 0x16564b0;
		constexpr auto TryParseSingle = 0x1656680;
		constexpr auto TryParseUInt32 = 0x1656830;
		constexpr auto TryParseUInt64 = 0x1656a70;
		constexpr auto TryStringToNumber = 0x1656d90;
	};

	namespace System_Globalization_NumberFormatInfo {
		constexpr auto numberGroupSizes = 0x10;
		constexpr auto currencyGroupSizes = 0x18;
		constexpr auto percentGroupSizes = 0x20;
		constexpr auto positiveSign = 0x28;
		constexpr auto negativeSign = 0x30;
		constexpr auto numberDecimalSeparator = 0x38;
		constexpr auto numberGroupSeparator = 0x40;
		constexpr auto currencyGroupSeparator = 0x48;
		constexpr auto currencyDecimalSeparator = 0x50;
		constexpr auto currencySymbol = 0x58;
		constexpr auto ansiCurrencySymbol = 0x60;
		constexpr auto nanSymbol = 0x68;
		constexpr auto positiveInfinitySymbol = 0x70;
		constexpr auto negativeInfinitySymbol = 0x78;
		constexpr auto percentDecimalSeparator = 0x80;
		constexpr auto percentGroupSeparator = 0x88;
		constexpr auto percentSymbol = 0x90;
		constexpr auto perMilleSymbol = 0x98;
		constexpr auto nativeDigits = 0xa0;
		constexpr auto m_dataItem = 0xa8;
		constexpr auto numberDecimalDigits = 0xac;
		constexpr auto currencyDecimalDigits = 0xb0;
		constexpr auto currencyPositivePattern = 0xb4;
		constexpr auto currencyNegativePattern = 0xb8;
		constexpr auto numberNegativePattern = 0xbc;
		constexpr auto percentPositivePattern = 0xc0;
		constexpr auto percentNegativePattern = 0xc4;
		constexpr auto percentDecimalDigits = 0xc8;
		constexpr auto digitSubstitution = 0xcc;
		constexpr auto isReadOnly = 0xd0;
		constexpr auto m_useUserOverride = 0xd1;
		constexpr auto m_isInvariant = 0xd2;
		constexpr auto validForParseAsNumber = 0xd3;
		constexpr auto validForParseAsCurrency = 0xd4;

		constexpr auto ctor = 0x1365b50;
		constexpr auto OnSerializing = 0x13651b0;
		constexpr auto OnDeserializing = 0x2f8560;
		constexpr auto OnDeserialized = 0x2f8560;
		constexpr auto get_InvariantInfo = 0x1365ce0;
		constexpr auto GetInstance = 0x1364f30;
		constexpr auto Clone = 0x1364e30;
		constexpr auto get_CurrencyDecimalDigits = 0x2f75b0;
		constexpr auto get_CurrencyDecimalSeparator = 0x4a3c60;
		constexpr auto get_IsReadOnly = 0xdaa6c0;
		constexpr auto get_CurrencyGroupSizes = 0x1365b60;
		constexpr auto get_NumberGroupSizes = 0x1365df0;
		constexpr auto get_PercentGroupSizes = 0x1365e70;
		constexpr auto get_CurrencyGroupSeparator = 0x7f9fa0;
		constexpr auto get_CurrencySymbol = 0x7012d0;
		constexpr auto get_CurrentInfo = 0x1365be0;
		constexpr auto get_NaNSymbol = 0x4b16a0;
		constexpr auto get_CurrencyNegativePattern = 0x1067960;
		constexpr auto get_NumberNegativePattern = 0x1067950;
		constexpr auto get_PercentPositivePattern = 0x1067940;
		constexpr auto get_PercentNegativePattern = 0xad6d30;
		constexpr auto get_NegativeInfinitySymbol = 0x53dee0;
		constexpr auto get_NegativeSign = 0x48eaa0;
		constexpr auto get_NumberDecimalDigits = 0xa43220;
		constexpr auto get_NumberDecimalSeparator = 0x4e7170;
		constexpr auto get_NumberGroupSeparator = 0x4ccb90;
		constexpr auto get_CurrencyPositivePattern = 0x1067930;
		constexpr auto get_PositiveInfinitySymbol = 0x527170;
		constexpr auto get_PositiveSign = 0x4d6600;
		constexpr auto get_PercentDecimalDigits = 0xad6d50;
		constexpr auto get_PercentDecimalSeparator = 0x53def0;
		constexpr auto get_PercentGroupSeparator = 0x53de90;
		constexpr auto get_PercentSymbol = 0x4f75f0;
		constexpr auto get_PerMilleSymbol = 0x4dda40;
		constexpr auto GetFormat = 0x1364ea0;
		constexpr auto ReadOnly = 0x1365240;
		constexpr auto ValidateParseStyleInteger = 0x13653c0;
		constexpr auto ValidateParseStyleFloatingPoint = 0x13652f0;
	};

	namespace UnityEngine_GL {

		constexpr auto Vertex3 = 0x1832830;
		constexpr auto Vertex = 0x1832890;
		constexpr auto TexCoord3 = 0x18327d0;
		constexpr auto TexCoord2 = 0x1832780;
		constexpr auto MultiTexCoord3 = 0x18326b0;
		constexpr auto MultiTexCoord2 = 0x1832650;
		constexpr auto ImmediateColor = 0x1832390;
		constexpr auto Color = 0x1832060;
		constexpr auto get_sRGBWrite = 0x18328f0;
		constexpr auto set_sRGBWrite = 0x1832920;
		constexpr auto Flush = 0x18320f0;
		constexpr auto MultMatrix = 0x1832610;
		constexpr auto PushMatrix = 0x1832750;
		constexpr auto PopMatrix = 0x1832720;
		constexpr auto LoadIdentity = 0x18324c0;
		constexpr auto LoadOrtho = 0x18324f0;
		constexpr auto LoadPixelMatrix = 0x1832520;
		constexpr auto LoadProjectionMatrix = 0x1832590;
		constexpr auto GetGPUProjectionMatrix = 0x1832320;
		constexpr auto GLLoadPixelMatrixScript = 0x1832240;
		constexpr auto GLIssuePluginEvent = 0x1832200;
		constexpr auto IssuePluginEvent = 0x1832410;
		constexpr auto Begin = 0x1831f70;
		constexpr auto End = 0x18320c0;
		constexpr auto GLClear = 0x1832190;
		constexpr auto Clear = 0x1832000;
		constexpr auto ClearWithSkybox = 0x1831fb0;
		constexpr auto MultMatrix_Injected = 0x18325d0;
		constexpr auto LoadProjectionMatrix_Injected = 0x1832550;
		constexpr auto GetGPUProjectionMatrix_Injected = 0x18322c0;
		constexpr auto GLClear_Injected = 0x1832120;
	};

	namespace UnityEngine_Material {

		constexpr auto CreateWithShader = 0x18d5620;
		constexpr auto CreateWithMaterial = 0x18d55d0;
		constexpr auto CreateWithString = 0x18d5670;
		constexpr auto ctor = 0x18d6bd0;
		constexpr auto get_shader = 0x18d6e90;
		constexpr auto set_shader = 0x18d7020;
		constexpr auto get_color = 0x18d6c60;
		constexpr auto set_color = 0x18d6ed0;
		constexpr auto get_mainTexture = 0x18d6d70;
		constexpr auto GetFirstPropertyNameIdByAttribute = 0x18d5940;
		constexpr auto HasProperty = 0x18d5e50;
		constexpr auto get_renderQueue = 0x18d6e50;
		constexpr auto set_renderQueue = 0x18d6fe0;
		constexpr auto EnableKeyword = 0x18d5700;
		constexpr auto DisableKeyword = 0x18d56b0;
		constexpr auto IsKeywordEnabled = 0x18d5e90;
		constexpr auto get_enableInstancing = 0x18d6d30;
		constexpr auto set_enableInstancing = 0x18d6f90;
		constexpr auto get_passCount = 0x18d6e10;
		constexpr auto GetShaderPassEnabled = 0x18d5a90;
		constexpr auto GetPassName = 0x18d5a10;
		constexpr auto FindPass = 0x18d5750;
		constexpr auto SetOverrideTag = 0x18d6620;
		constexpr auto GetTagImpl = 0x18d5ae0;
		constexpr auto GetTag = 0x18d5be0;
		constexpr auto SetPass = 0x18d6680;
		constexpr auto CopyPropertiesFromMaterial = 0x18d5580;
		constexpr auto GetShaderKeywords = 0x18d5a50;
		constexpr auto SetShaderKeywords = 0x18d66c0;
		constexpr auto get_shaderKeywords = 0x18d5a50;
		constexpr auto set_shaderKeywords = 0x18d66c0;
		constexpr auto SetFloatImpl = 0x18d6370;
		constexpr auto SetColorImpl = 0x18d5fe0;
		constexpr auto SetMatrixImpl = 0x18d64e0;
		constexpr auto SetTextureImpl = 0x18d6710;
		constexpr auto SetBufferImpl = 0x18d5ee0;
		constexpr auto GetFloatImpl = 0x18d5980;
		constexpr auto GetColorImpl = 0x18d57f0;
		constexpr auto GetTextureImpl = 0x18d5c50;
		constexpr auto SetFloatArrayImpl = 0x18d60e0;
		constexpr auto SetTextureOffsetImpl = 0x18d67b0;
		constexpr auto SetTextureScaleImpl = 0x18d68b0;
		constexpr auto SetFloatArray = 0x18d6240;
		constexpr auto SetFloat = 0x18d63c0;
		constexpr auto SetInt = 0x18d6420;
		constexpr auto SetColor = 0x18d6080;
		constexpr auto SetVector = 0x18d69c0;
		constexpr auto SetMatrix = 0x18d65a0;
		constexpr auto SetTexture = 0x18d6960;
		constexpr auto SetBuffer = 0x18d5f30;
		constexpr auto GetFloat = 0x18d59c0;
		constexpr auto GetColor = 0x18d58c0;
		constexpr auto GetVector = 0x18d5ce0;
		constexpr auto GetTexture = 0x18d5c90;
		constexpr auto SetTextureOffset = 0x18d6800;
		constexpr auto SetTextureScale = 0x18d6900;
		constexpr auto SetColorImpl_Injected = 0x18d5f90;
		constexpr auto SetMatrixImpl_Injected = 0x18d6490;
		constexpr auto GetColorImpl_Injected = 0x18d57a0;
		constexpr auto SetTextureOffsetImpl_Injected = 0x18d6760;
		constexpr auto SetTextureScaleImpl_Injected = 0x18d6860;
	};

	namespace UnityEngine_Screen {

		constexpr auto get_width = 0x196df20;
		constexpr auto get_height = 0x196dec0;
		constexpr auto get_dpi = 0x196de60;
		constexpr auto get_currentResolution = 0x196de20;
		constexpr auto get_fullScreen = 0x196de90;
		constexpr auto SetResolution = 0x196dd20;
		constexpr auto get_resolutions = 0x196def0;
		constexpr auto get_currentResolution_Injected = 0x196dde0;
	};

	namespace TOD_AtmosphereParameters {
		constexpr auto RayleighMultiplier = 0x10;
		constexpr auto MieMultiplier = 0x14;
		constexpr auto Brightness = 0x18;
		constexpr auto Contrast = 0x1c;
		constexpr auto Directionality = 0x20;
		constexpr auto Fogginess = 0x24;

		constexpr auto ctor = 0x10622c0;
	};

	namespace TOD_MoonParameters {
		constexpr auto MeshSize = 0x10;
		constexpr auto MeshBrightness = 0x14;
		constexpr auto MeshContrast = 0x18;
		constexpr auto HaloSize = 0x1c;
		constexpr auto HaloBrightness = 0x20;
		constexpr auto Position = 0x24;

		constexpr auto ctor = 0x1066190;
	};

	namespace TOD_CloudParameters {
		constexpr auto Size = 0x10;
		constexpr auto Opacity = 0x14;
		constexpr auto Coverage = 0x18;
		constexpr auto Sharpness = 0x1c;
		constexpr auto Coloring = 0x20;
		constexpr auto Attenuation = 0x24;
		constexpr auto Saturation = 0x28;
		constexpr auto Scattering = 0x2c;
		constexpr auto Brightness = 0x30;

		constexpr auto ctor = 0x1063750;
	};

	namespace TOD_NightParameters {
		constexpr auto MoonColor = 0x10;
		constexpr auto LightColor = 0x18;
		constexpr auto RayColor = 0x20;
		constexpr auto SkyColor = 0x28;
		constexpr auto CloudColor = 0x30;
		constexpr auto FogColor = 0x38;
		constexpr auto AmbientColor = 0x40;
		constexpr auto LightIntensity = 0x48;
		constexpr auto ShadowStrength = 0x4c;
		constexpr auto AmbientMultiplier = 0x50;
		constexpr auto ReflectionMultiplier = 0x54;

		constexpr auto ctor = 0x10661d0;
	};

}
